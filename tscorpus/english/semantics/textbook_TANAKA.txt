# ::id 1_textbook_TANAKA;006_ID_116032;IE
# ::snt Does he have anything to do with the campaign ?
∃ ENTITY[4] (
 campaign(ENTITY[4]) ∧
  QUEST(∃ REF1[1] (
        REF1[1] = he ∧
         ANY EVENT[5] ENTITY[2] (do(EVENT[5], _, ENTITY[2]) ∧ with(EVENT[5]) = ENTITY[4] ∧ thing(ENTITY[2]),
          ∃ EVENT[6] does_have(EVENT[6], REF1[1], ENTITY[2])))))

# ::id 2_textbook_TANAKA;006_ID_105394;IE
# ::snt Walking along the street , I saw the accident .
∃ REF1[1] EVENT[3] EVENT[5] ENTITY[2] ENTITY[4] (
 street(ENTITY[2]) ∧
  accident(ENTITY[4]) ∧
   REF1[1] = i ∧
    past(EVENT[5]) ∧
     CONJ_and(walking(EVENT[3], REF1[1]) ∧ along(EVENT[3]) = ENTITY[2], saw(EVENT[5], REF1[1], ENTITY[4])))

# ::id 3_textbook_TANAKA;006_ID_118047;IE
# ::snt He was drunk on beer .
∃ ATTRIB[2] REF1[1] EVENT[4] ENTITY[3] (
 REF1[1] = he ∧
  beer(ENTITY[3]) ∧ is_drunk_on(ATTRIB[2], ENTITY[3]) ∧ past(EVENT[4]) ∧ copula(EVENT[4], REF1[1], ATTRIB[2]))

# ::id 4_textbook_TANAKA;006_ID_76007;IE
# ::snt I think what he said is true in a sense .
∃ REF1[1] EVENT[2] (
 REF1[1] = i ∧
  think(EVENT[2], REF1[1],
   QUEST(∃ ATTRIB[6] REF2[4] EVENT[8] EVENT[5] ENTITY[7] ? ENTITY[3] (
         REF2[4] = he ∧
          sense(ENTITY[7]) ∧
           is_true_in(ATTRIB[6], ENTITY[7]) ∧
            is_before(EVENT[5], EVENT[2]) ∧
             said(EVENT[5], REF2[4], copula(EVENT[8], ENTITY[3], ATTRIB[6]))))))

# ::id 5_textbook_TANAKA;006_ID_130022;IE
# ::snt He makes it a rule to read aloud everyday .
∃ SITUATION[6] SITUATION[3] REF1[1] EVENT[8] EVENT[2] ENTITY[7] (
 REF1[1] = he ∧
  is_FACT_THAT(SITUATION[3],
   is_FACT_THAT(SITUATION[6],
    ∀ TIME[4] (day(TIME[4]) → ∃ EVENT[5] (read(EVENT[5]) ∧ is_contained_in(TMP(EVENT[5]), TIME[4]))))) ∧
   rule(ENTITY[7]) ∧ ADV_aloud(SITUATION[6]) ∧ makes(EVENT[2], REF1[1], xxx(EVENT[8], SITUATION[3], ENTITY[7])))

# ::id 6_textbook_TANAKA;006_ID_71585;IE
# ::snt We had a friendly talk with the gentleman .
∃ ATTRIB[3] REF1[1] EVENT[5] ENTITY[2] ENTITY[4] (
 gentleman(ENTITY[4]) ∧
  REF1[1] = we ∧
   friendly(ATTRIB[3]) ∧
    is_talk_with(ENTITY[2], ENTITY[4]) ∧ is_talk_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
     past(EVENT[5]) ∧ had(EVENT[5], REF1[1], ENTITY[2]))

# ::id 7_textbook_TANAKA;006_ID_14056;IE
# ::snt Such a custom should be done away .
∃ ATTRIB[2] ENTITY[1] (
 such(ATTRIB[2]) ∧
  is_custom_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧ MD_should(∃ EVENT[3] (DIR_away(EVENT[3]) ∧ done(EVENT[3], _, ENTITY[1]))))

# ::id 8_textbook_TANAKA;006_ID_107612;IE
# ::snt A white cloud is floating in the blue sky .
∃ ATTRIB[2] ATTRIB[4] EVENT[5] ENTITY[1] ENTITY[3] (
 blue(ATTRIB[4]) ∧
  is_sky_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
   white(ATTRIB[2]) ∧
    is_cloud_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧ is_floating(EVENT[5], ENTITY[1]) ∧ in(EVENT[5]) = ENTITY[3])

# ::id 9_textbook_TANAKA;006_ID_56350;IE
# ::snt Hurry up , or you will miss the train .
∃ REF1[2] ENTITY[3] (
 train(ENTITY[3]) ∧
  REF1[2] = you ∧ CONJ_or(IMPERATIVE(∃ EVENT[1] hurry_up(EVENT[1])), MD_will(∃ EVENT[4] miss(EVENT[4], REF1[2], ENTITY[3]))))

# ::id 10_textbook_TANAKA;006_ID_131738;IE
# ::snt They soon became quite accustomed to each other .
∃ ATTRIB[2] REF1[1] EVENT[5] (
 REF1[1] = they ∧
  EACH ATTRIB[4] ENTITY[3] ((other(ATTRIB[4]) ∧ is_ATTRIBUTE(ENTITY[3], ATTRIB[4])), is_quite_accustomed_to(ATTRIB[2], ENTITY[3])) ∧
   TMP_soon(EVENT[5]) ∧ past(EVENT[5]) ∧ became(EVENT[5], REF1[1]) ∧ ATTRIBUTE(EVENT[5]) = ATTRIB[2])

# ::id 11_textbook_TANAKA;006_ID_33615;IE
# ::snt Do n't get so excited !
IMPERATIVE(¬ ∃ ATTRIB[1] EVENT[2] (so_excited(ATTRIB[1]) ∧ do_get(EVENT[2], _, ATTRIB[1])))

# ::id 12_textbook_TANAKA;006_ID_97238;IE
# ::snt I waited for the bus in the snow as long as two hours .
∃ TIME[4] REF1[1] EVENT[6] TIME[5] ENTITY[3] ENTITY[2] (
 bus(ENTITY[2]) ∧
  snow(ENTITY[3]) ∧
   REF1[1] = i ∧
    (CD_two(TIME[5]), hours(TIME[5])) ∧
     is_as_long_as(TIME[4], TIME[5]) ∧
      past(EVENT[6]) ∧
       waited(EVENT[6], REF1[1]) ∧ is_contained_in(TMP(EVENT[6]), TIME[4]) ∧
        in(EVENT[6]) = ENTITY[3] ∧ for(EVENT[6]) = ENTITY[2])

# ::id 13_textbook_TANAKA;006_ID_105993;IE
# ::snt Which wine goes best with red meat ?
QUEST(∃ ATTRIB[3] EVENT[4] ENTITY[2] ? ENTITY[1] (
      wine(ENTITY[1]) ∧
       red(ATTRIB[3]) ∧
        is_meat_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
         ADV_best(EVENT[4]) ∧ goes(EVENT[4], ENTITY[1]) ∧ with(EVENT[4]) = ENTITY[2]))

# ::id 14_textbook_TANAKA;006_ID_162619;IE
# ::snt The noonday sun beat down with dazzling brightness on the tennis court .
∃ ATTRIB[4] ATTRIB[2] EVENT[6] ENTITY[3] ENTITY[5] ENTITY[1] (
 noonday(ATTRIB[2]) ∧
  is_sun_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧
   tennis_court(ENTITY[5]) ∧
    dazzling(ATTRIB[4]) ∧
     is_brightness_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
      past(EVENT[6]) ∧
       beat_down(EVENT[6], ENTITY[1]) ∧ on(EVENT[6]) = ENTITY[5] ∧ with(EVENT[6]) = ENTITY[3])

# ::id 15_textbook_TANAKA;006_ID_140709;IE
# ::snt She is very annoyed with me .
∃ REF2[2] REF1[1] EVENT[3] (
 REF1[1] = she ∧
  REF2[2] = me ∧ ADV_very(EVENT[3]) ∧ is_annoyed(EVENT[3], REF1[1]) ∧ with(EVENT[3]) = REF2[2])

# ::id 16_textbook_TANAKA;006_ID_47276;IE
# ::snt Our guide misled us to the location of the hotel .
∃ REF2[3] REF1[2] EVENT[6] ENTITY[1] ENTITY[5] ENTITY[4] (
 hotel(ENTITY[5]) ∧
  is_location_of(ENTITY[4], ENTITY[5]) ∧
   REF1[2] = our ∧
    is_guide_POS(ENTITY[1], REF1[2]) ∧
     REF2[3] = us ∧
      past(EVENT[6]) ∧ misled(EVENT[6], ENTITY[1], REF2[3]) ∧ to(EVENT[6]) = ENTITY[4])

# ::id 17_textbook_TANAKA;006_ID_9876;IE
# ::snt Your letter reached me only today , having been delayed by the heavy snow .
∃ REF2[3] REF1[2] ATTRIB[7] TIME[5] ENTITY[1] ENTITY[6] (
 heavy(ATTRIB[7]) ∧
  is_snow_ATTRIBUTE(ENTITY[6], ATTRIB[7]) ∧
   REF1[2] = your ∧
    is_letter_POS(ENTITY[1], REF1[2]) ∧
     REF2[3] = me ∧
      today(TIME[5]) ∧
       ONLY TIME[4] (is_contained_in(TIME[4], TIME[5]),
        ∃ EVENT[9] EVENT[8] (
         past(EVENT[9]) ∧
          CONJ_and(reached(EVENT[9], ENTITY[1], REF2[3]) ∧ is_contained_in(TMP(EVENT[9]), TIME[4]),
           having_delayed(EVENT[8], ENTITY[6], REF2[3])))))

# ::id 18_textbook_TANAKA;006_ID_83499;IE
# ::snt I make it a rule to take some exercise before breakfast .
∃ SITUATION[3] REF1[1] EVENT[8] EVENT[2] ENTITY[7] (
 REF1[1] = i ∧
  is_FACT_THAT(SITUATION[3],
   SOME ENTITY[4] (exercise(ENTITY[4]),
    ∃ EVENT[6] ENTITY[5] (breakfast(ENTITY[5]) ∧ take(EVENT[6], _, ENTITY[4]) ∧ before(EVENT[6]) = ENTITY[5]))) ∧
   rule(ENTITY[7]) ∧ make(EVENT[2], REF1[1], xxx(EVENT[8], SITUATION[3], ENTITY[7])))

# ::id 19_textbook_TANAKA;006_ID_79382;IE
# ::snt I heard the bell ring .
∃ REF1[1] EVENT[4] EVENT[2] ENTITY[3] (
 bell(ENTITY[3]) ∧
  REF1[1] = i ∧ past(EVENT[2]) ∧ heard(EVENT[2], REF1[1], ring(EVENT[4], ENTITY[3])))

# ::id 20_textbook_TANAKA;006_ID_35964;IE
# ::snt My television was broken down , so I had to get it repaired .
∃ REF3[7] REF2[4] SITUATION[3] REF1[2] EVENT[8] EVENT[6] EVENT[5] EVENT[9] ENTITY[1] (
 REF1[2] = my ∧
  is_television_POS(ENTITY[1], REF1[2]) ∧
   REF2[4] = i ∧
    REF3[7] = it ∧
     is_FACT_THAT(SITUATION[3],
      had(EVENT[5], REF2[4], get(EVENT[6], REF2[4], repaired(EVENT[8], _, REF3[7])))) ∧
      past(EVENT[5]) ∧
       past(EVENT[9]) ∧ broken_down(EVENT[9], _, ENTITY[1]) ∧ so(EVENT[9]) = SITUATION[3])

# ::id 21_textbook_TANAKA;006_ID_64895;IE
# ::snt At this time I can 't go back .
∃ REF1[2] ENTITY[1] (
 time(ENTITY[1]) ∧
  REF1[2] = i ∧
   MD_can(¬ ∃ EVENT[3] (DIR_back(EVENT[3]) ∧ go(EVENT[3], REF1[2]) ∧ At(EVENT[3]) = ENTITY[1])))

# ::id 22_textbook_TANAKA;006_ID_91561;IE
# ::snt Barricade oneself in one 's study .
IMPERATIVE(∃ REF1[1] EVENT[4] ENTITY[3] ENTITY[2] (
      REF1[1] = oneself ∧
       CD_one(ENTITY[3]) ∧
        is_study_POS(ENTITY[2], ENTITY[3]) ∧ barricade(EVENT[4], _, REF1[1]) ∧ in(EVENT[4]) = ENTITY[2]))

# ::id 23_textbook_TANAKA;006_ID_77320;IE
# ::snt I wish to be buried in this country .
∃ REF1[1] EVENT[4] EVENT[2] ENTITY[3] (
 country(ENTITY[3]) ∧
  REF1[1] = i ∧
   wish(EVENT[2], REF1[1], buried(EVENT[4], _, REF1[1]) ∧ in(EVENT[4]) = ENTITY[3]))

# ::id 24_textbook_TANAKA;006_ID_23094;IE
# ::snt Not all men are created equal .
NOT_ALL GROUP[1] (men(GROUP[1]),
 ∃ ATTRIB[2] EVENT[3] (equal(ATTRIB[2]) ∧ created(EVENT[3], _, GROUP[1]) ∧ ATTRIBUTE(EVENT[3]) = ATTRIB[2]))

# ::id 25_textbook_TANAKA;006_ID_98229;IE
# ::snt The players scrambled for the ball .
∃ EVENT[3] ENTITY[2] GROUP[1] (
 players(GROUP[1]) ∧
  ball(ENTITY[2]) ∧ past(EVENT[3]) ∧ scrambled(EVENT[3], GROUP[1]) ∧ for(EVENT[3]) = ENTITY[2])

# ::id 26_textbook_TANAKA;006_ID_138599;IE
# ::snt She was lying on her face at the bed .
∃ REF2[3] REF1[1] EVENT[5] ENTITY[2] ENTITY[4] (
 bed(ENTITY[4]) ∧
  REF1[1] = she ∧
   REF2[3] = her ∧
    is_face_POS(ENTITY[2], REF2[3]) ∧
     past(EVENT[5]) ∧
      was_lying(EVENT[5], REF1[1]) ∧ at(EVENT[5]) = ENTITY[4] ∧ on(EVENT[5]) = ENTITY[2])

# ::id 27_textbook_TANAKA;006_ID_81887;IE
# ::snt I was helped to do my homework by my sister .
∃ REF2[6] REF3[3] REF1[1] EVENT[7] EVENT[4] ENTITY[5] ENTITY[2] (
 REF1[1] = i ∧
  REF3[3] = my ∧
   is_sister_POS(ENTITY[2], REF3[3]) ∧
    REF2[6] = my ∧
     is_homework_POS(ENTITY[5], REF2[6]) ∧
      past(EVENT[4]) ∧ helped(EVENT[4], ENTITY[2], REF1[1], do(EVENT[7], REF1[1], ENTITY[5])))

# ::id 28_textbook_TANAKA;006_ID_55314;IE
# ::snt Her face was animated by joy .
∃ REF1[2] EVENT[4] ENTITY[3] ENTITY[1] (
 REF1[2] = her ∧
  is_face_POS(ENTITY[1], REF1[2]) ∧ joy(ENTITY[3]) ∧ past(EVENT[4]) ∧ animated(EVENT[4], ENTITY[3], ENTITY[1]))

# ::id 29_textbook_TANAKA;006_ID_131525;IE
# ::snt They dropped out of their school .
∃ REF2[3] REF1[1] EVENT[4] ENTITY[2] (
 REF1[1] = they ∧
  REF2[3] = their ∧
   is_school_POS(ENTITY[2], REF2[3]) ∧
    past(EVENT[4]) ∧ dropped_out(EVENT[4], REF1[1]) ∧ of(EVENT[4]) = ENTITY[2])

# ::id 30_textbook_TANAKA;006_ID_10565;IE
# ::snt Half of the bananas in the basket were rotten .
∃ ENTITY[3] GROUP[2] (
 basket(ENTITY[3]) ∧
  is_bananas_in(GROUP[2], ENTITY[3]) ∧
   HALF ENTITY[1] (is_element_of(ENTITY[1], GROUP[2]),
    ∃ ATTRIB[4] EVENT[5] (rotten(ATTRIB[4]) ∧ past(EVENT[5]) ∧ copula(EVENT[5], ENTITY[1], ATTRIB[4]))))

# ::id 31_textbook_TANAKA;006_ID_32857;IE
# ::snt It was a big black American warship .
∃ ATTRIB[4] ATTRIB[3] REF1[1] EVENT[5] ENTITY[2] (
 REF1[1] = it ∧
  big(ATTRIB[3]) ∧
   black(ATTRIB[4]) ∧
    is_American_warship_ATTRIBUTE(ENTITY[2], ATTRIB[4]) ∧ is_American_warship_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
     past(EVENT[5]) ∧ copula(EVENT[5], REF1[1], ENTITY[2]))

# ::id 32_textbook_TANAKA;006_ID_61965;IE
# ::snt Ken plays soccer everyday .
∃ ENTITY[1] (
 soccer(ENTITY[1]) ∧
  ∀ TIME[2] (day(TIME[2]) → ∃ EVENT[3] (plays(EVENT[3], ENTITY[Ken], ENTITY[1]) ∧ is_contained_in(TMP(EVENT[3]), TIME[2]))))

# ::id 33_textbook_TANAKA;006_ID_80708;IE
# ::snt I had a cup of coffee in the tea rooms .
∃ REF1[1] EVENT[5] ENTITY[3] ENTITY[2] GROUP[4] (
 tea_rooms(GROUP[4]) ∧
  REF1[1] = i ∧
   coffee(ENTITY[3]) ∧
    is_cup_of(ENTITY[2], ENTITY[3]) ∧
     past(EVENT[5]) ∧ had(EVENT[5], REF1[1], ENTITY[2]) ∧ in(EVENT[5]) = GROUP[4])

# ::id 34_textbook_TANAKA;006_ID_146387;IE
# ::snt The room was full of girls in white .
∃ ATTRIB[2] EVENT[5] ENTITY[4] GROUP[3] ENTITY[1] (
 room(ENTITY[1]) ∧
  white(ENTITY[4]) ∧
   is_girls_in(GROUP[3], ENTITY[4]) ∧
    is_full_of(ATTRIB[2], GROUP[3]) ∧ past(EVENT[5]) ∧ copula(EVENT[5], ENTITY[1], ATTRIB[2]))

# ::id 35_textbook_TANAKA;006_ID_51638;IE
# ::snt I did not miss my purse till I got home .
∃ REF1[1] (
 REF1[1] = i ∧
  ¬ ∃ REF3[5] SITUATION[4] REF2[3] EVENT[7] EVENT[8] ENTITY[6] ENTITY[2] (
        REF2[3] = my ∧
         is_purse_POS(ENTITY[2], REF2[3]) ∧
          REF3[5] = i ∧
           home(ENTITY[6]) ∧
            is_FACT_THAT(SITUATION[4], got(EVENT[7], REF3[5]) ∧ DIR(EVENT[7]) = ENTITY[6]) ∧
             past(EVENT[7]) ∧
              past(EVENT[8]) ∧ did_miss(EVENT[8], REF1[1], ENTITY[2]) ∧ till(EVENT[8]) = SITUATION[4]))

# ::id 36_textbook_TANAKA;006_ID_51013;IE
# ::snt What were we talking about ?
QUEST(∃ REF1[2] EVENT[3] ? ENTITY[1] (
      REF1[2] = we ∧
       past(EVENT[3]) ∧ were_talking(EVENT[3], REF1[2]) ∧ about(EVENT[3]) = ENTITY[1]))

# ::id 37_textbook_TANAKA;006_ID_64853;IE
# ::snt Could you come over right now ?
QUEST(MD_could(∃ REF1[1] EVENT[2] (REF1[1] = you ∧ TMP_right_now(EVENT[2]) ∧ come_over(EVENT[2], REF1[1]))))

# ::id 38_textbook_TANAKA;006_ID_14574;IE
# ::snt Give me a hand with this bag .
∃ ENTITY[3] (
 bag(ENTITY[3]) ∧
  IMPERATIVE(∃ REF1[1] EVENT[4] ENTITY[2] (
        REF1[1] = me ∧
         hand(ENTITY[2]) ∧
          give(EVENT[4], _, ENTITY[2], REF1[1]) ∧ with(EVENT[4]) = ENTITY[3])))

# ::id 39_textbook_TANAKA;006_ID_78711;IE
# ::snt I got the ticket for nothing .
∃ REF1[1] ENTITY[2] (
 ticket(ENTITY[2]) ∧
  REF1[1] = i ∧
   ¬ ∃ EVENT[4] ENTITY[3] (
         thing(ENTITY[3]) ∧
          past(EVENT[4]) ∧ got(EVENT[4], REF1[1], ENTITY[2]) ∧ for(EVENT[4]) = ENTITY[3]))

# ::id 40_textbook_TANAKA;006_ID_111485;IE
# ::snt There are few that approve of his actions .
FEW REF1[4] EVENT[5] GROUP[3] ENTITY[1] (
 (REF1[4] = his ∧ is_actions_POS(GROUP[3], REF1[4]) ∧
  approve(EVENT[5], ENTITY[1]) ∧ of(EVENT[5]) = GROUP[3]), ∃ EVENT[6] copula(EVENT[6], ENTITY[1]))

# ::id 41_textbook_TANAKA;006_ID_101012;IE
# ::snt There is no telling who did this .
∃ ENTITY[4] ¬ ∃ ATTRIB[2] EVENT[5] EVENT[6] ENTITY[1] (
      telling(ATTRIB[2]) ∧
       did(EVENT[5], ENTITY[1], ENTITY[4]) ∧ is_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧
        past(EVENT[5]) ∧ copula(EVENT[6], ENTITY[1]))

# ::id 42_textbook_TANAKA;006_ID_79170;IE
# ::snt I saw her at the party .
∃ REF2[2] REF1[1] EVENT[4] ENTITY[3] (
 party(ENTITY[3]) ∧
  REF1[1] = i ∧
   REF2[2] = her ∧
    past(EVENT[4]) ∧ saw(EVENT[4], REF1[1], REF2[2]) ∧ at(EVENT[4]) = ENTITY[3])

# ::id 43_textbook_TANAKA;006_ID_119740;IE
# ::snt He believes that he is a hero .
∃ REF2[3] REF1[1] EVENT[5] EVENT[2] ENTITY[4] (
 REF1[1] = he ∧
  REF2[3] = he ∧ hero(ENTITY[4]) ∧ believes(EVENT[2], REF1[1], copula(EVENT[5], REF2[3], ENTITY[4])))

# ::id 44_textbook_TANAKA;006_ID_29281;IE
# ::snt It is clear that the ship sank .
∃ ATTRIB[4] SITUATION[1] EVENT[3] EVENT[5] ENTITY[2] (
 ship(ENTITY[2]) ∧
  past(EVENT[3]) ∧
   is_FACT_THAT(SITUATION[1], sank(EVENT[3], ENTITY[2])) ∧ clear(ATTRIB[4]) ∧ copula(EVENT[5], SITUATION[1], ATTRIB[4]))

# ::id 45_textbook_TANAKA;006_ID_108243;IE
# ::snt The reason why he left the tennis club is obscure .
∃ ATTRIB[7] REF1[3] EVENT[8] EVENT[5] ENTITY[4] ENTITY[1] (
 REF1[3] = he ∧
  tennis_club(ENTITY[4]) ∧
   left(EVENT[5], REF1[3], ENTITY[4]) ∧ reason(ENTITY[1]) ∧
    is_ADV(EVENT[5], ENTITY[1]) ∧
     past(EVENT[5]) ∧ obscure(ATTRIB[7]) ∧ copula(EVENT[8], ENTITY[1], ATTRIB[7]))

# ::id 46_textbook_TANAKA;006_ID_67184;IE
# ::snt It is justice , and not might , that wins in the end .
∃ GROUP[5] ENTITY[1] EVENT[4] EVENT[8] ENTITY[3] (
 end(ENTITY[3]) ∧
  wins(EVENT[4], ENTITY[1]) ∧ in(EVENT[4]) = ENTITY[3] ∧
   ∃ ENTITY[6] (justice(ENTITY[6]) ∧ is_element_of(ENTITY[6], GROUP[5])) ∧
    NOT ENTITY[7] (might(ENTITY[7]), is_element_of(ENTITY[7], GROUP[5])) ∧ copula(EVENT[8], ENTITY[1], GROUP[5]))

# ::id 47_textbook_TANAKA;006_ID_107663;IE
# ::snt I could not resist the lure of great profits .
∃ REF1[1] ATTRIB[4] GROUP[3] ENTITY[2] (
 great(ATTRIB[4]) ∧
  is_profits_ATTRIBUTE(GROUP[3], ATTRIB[4]) ∧
   is_lure_of(ENTITY[2], GROUP[3]) ∧ REF1[1] = i ∧ MD_could(¬ ∃ EVENT[5] resist(EVENT[5], REF1[1], ENTITY[2])))

# ::id 48_textbook_TANAKA;006_ID_51209;IE
# ::snt Do you know why they stopped talking ?
QUEST(∃ REF1[1] EVENT[2] (
      REF1[1] = you ∧
       do_know(EVENT[2], REF1[1],
        QUEST(∃ REF2[4] EVENT[5] ? ENTITY[3] (
              REF2[4] = they ∧
               is_ADV(EVENT[5], ENTITY[3]) ∧
                is_before(EVENT[5], EVENT[2]) ∧ stopped_talking(EVENT[5], REF2[4]))))))

# ::id 49_textbook_TANAKA;006_ID_10268;IE
# ::snt My dad has a look at the newspaper every morning .
∃ REF1[2] ENTITY[3] ENTITY[1] ENTITY[4] (
 newspaper(ENTITY[4]) ∧
  REF1[2] = my ∧
   is_dad_POS(ENTITY[1], REF1[2]) ∧
    is_look_at(ENTITY[3], ENTITY[4]) ∧
     ∀ TIME[5] (morning(TIME[5]) →
      ∃ EVENT[6] (has(EVENT[6], ENTITY[1], ENTITY[3]) ∧ is_contained_in(TMP(EVENT[6]), TIME[5]))))

# ::id 50_textbook_TANAKA;006_ID_86130;IE
# ::snt I will be seeing him tomorrow .
∃ REF1[1] (
 REF1[1] = i ∧
  MD_will(∃ REF2[2] EVENT[4] TIME[3] (
        REF2[2] = him ∧
         tomorrow(TIME[3]) ∧
          be_seeing(EVENT[4], REF1[1], REF2[2]) ∧ is_contained_in(TMP(EVENT[4]), TIME[3]))))

# ::id 51_textbook_TANAKA;006_ID_31921;IE
# ::snt Then he kicked the ball strongly .
∃ REF1[1] EVENT[3] ENTITY[2] (
 ball(ENTITY[2]) ∧
  REF1[1] = he ∧
   TMP_then(EVENT[3]) ∧ ADV_strongly(EVENT[3]) ∧ past(EVENT[3]) ∧ kicked(EVENT[3], REF1[1], ENTITY[2]))

# ::id 52_textbook_TANAKA;006_ID_128136;IE
# ::snt He came to suddenly .
∃ REF1[1] EVENT[2] (REF1[1] = he ∧ ADV_suddenly(EVENT[2]) ∧ past(EVENT[2]) ∧ came_to(EVENT[2], REF1[1]))

# ::id 53_textbook_TANAKA;006_ID_8788;IE
# ::snt Mrs. Wood was a very good cook .
∃ ATTRIB[2] EVENT[3] ENTITY[1] (very_good(ATTRIB[2]) ∧ is_cook_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧ past(EVENT[3]) ∧ copula(EVENT[3], ENTITY[Mrs.Wood], ENTITY[1]))

# ::id 54_textbook_TANAKA;006_ID_77663;IE
# ::snt I can 't trust John with my car .
∃ REF1[1] (
 REF1[1] = i ∧
  MD_can(¬ ∃ REF2[3] EVENT[4] ENTITY[2] (
             REF2[3] = my ∧
              is_car_POS(ENTITY[2], REF2[3]) ∧
               trust(EVENT[4], REF1[1], ENTITY[John]) ∧ with(EVENT[4]) = ENTITY[2])))

# ::id 55_textbook_TANAKA;006_ID_19951;IE
# ::snt I 've botched things up so bad I wish I could find a hole to climb into .
∃ REF3[8] REF2[6] ATTRIB[3] REF1[1] EVENT[5] EVENT[4] EVENT[7] GROUP[2] (
 REF1[1] = i ∧
  things(GROUP[2]) ∧
   so_bad(ATTRIB[3]) ∧
    REF2[6] = i ∧
     REF3[8] = i ∧
      CONJ_and('ve_botched_up(EVENT[5], REF1[1], GROUP[2]), xxx(EVENT[4], GROUP[2], ATTRIB[3])) ∧
       wish(EVENT[7], REF2[6],
        MD_could(∃ EVENT[11] EVENT[12] ENTITY[9] (
              climb(EVENT[11]) ∧ into(EVENT[11]) = ENTITY[9] ∧ hole(ENTITY[9]) ∧
               find(EVENT[12], REF3[8], ENTITY[9])))))

# ::id 56_textbook_TANAKA;006_ID_131186;IE
# ::snt I feel in my bones that they will never get along well together .
∃ REF3[5] REF2[3] REF1[1] EVENT[4] GROUP[2] (
 REF1[1] = i ∧
  REF2[3] = my ∧
   is_bones_POS(GROUP[2], REF2[3]) ∧
    REF3[5] = they ∧
     feel(EVENT[4], REF1[1],
      MD_will(∃ EVENT[6] (TMP_never(EVENT[6]) ∧ ADV_well_together(EVENT[6]) ∧ get_along(EVENT[6], REF3[5])))) ∧
      in(EVENT[4]) = GROUP[2])

# ::id 57_textbook_TANAKA;006_ID_89291;IE
# ::snt The number of unemployed people will by degrees .
∃ ATTRIB[3] GROUP[2] ENTITY[1] (
 unemployed(ATTRIB[3]) ∧
  is_people_ATTRIBUTE(GROUP[2], ATTRIB[3]) ∧
   is_number_of(ENTITY[1], GROUP[2]) ∧
    MD_will(∃ EVENT[5] GROUP[4] (degrees(GROUP[4]) ∧ xxx(EVENT[5], ENTITY[1]) ∧ by(EVENT[5]) = GROUP[4])))

# ::id 58_textbook_TANAKA;006_ID_42704;IE
# ::snt The first subject that attracted my attention was philosophy .
∃ REF1[5] ATTRIB[2] EVENT[8] ENTITY[7] EVENT[6] ENTITY[4] ENTITY[1] (
 first(ATTRIB[2]) ∧
  REF1[5] = my ∧
   is_attention_POS(ENTITY[4], REF1[5]) ∧
    attracted(EVENT[6], ENTITY[1], ENTITY[4]) ∧ is_subject_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧
     past(EVENT[6]) ∧ philosophy(ENTITY[7]) ∧ past(EVENT[8]) ∧ copula(EVENT[8], ENTITY[1], ENTITY[7]))

# ::id 59_textbook_TANAKA;006_ID_51107;IE
# ::snt Not knowing what to do , I stood there silently .
∃ REF1[1] EVENT[5] (
 REF1[1] = i ∧
  LOC_there(EVENT[5]) ∧
   ADV_silently(EVENT[5]) ∧
    past(EVENT[5]) ∧
     CONJ_and(¬ ∃ EVENT[2] knowing(EVENT[2], REF1[1], QUEST(∃ EVENT[4] ? ENTITY[3] do(EVENT[4], REF1[1], ENTITY[3]))),
      stood(EVENT[5], REF1[1])))

# ::id 60_textbook_TANAKA;006_ID_46276;IE
# ::snt Robert is the fifth wheel on the safety committee .
∃ EVENT[3] ENTITY[2] ENTITY[1] (
 safety_committee(ENTITY[2]) ∧ (CD_fifth(ENTITY[1]), is_wheel_on(ENTITY[1], ENTITY[2])) ∧ copula(EVENT[3], ENTITY[Robert], ENTITY[1]))

# ::id 61_textbook_TANAKA;006_ID_114314;IE
# ::snt He crossed over to England .
∃ REF1[1] EVENT[2] (REF1[1] = he ∧ past(EVENT[2]) ∧ crossed_over(EVENT[2], REF1[1]) ∧ to(EVENT[2]) = ENTITY[England])

# ::id 62_textbook_TANAKA;006_ID_113458;IE
# ::snt He likes to go to the beach now and then .
∃ REF1[1] EVENT[4] EVENT[2] ENTITY[3] (
 beach(ENTITY[3]) ∧
  REF1[1] = he ∧
   TMP_now_then(EVENT[4]) ∧ likes(EVENT[2], REF1[1], go(EVENT[4], REF1[1]) ∧ to(EVENT[4]) = ENTITY[3]))

# ::id 63_textbook_TANAKA;006_ID_124678;IE
# ::snt He is boastful of his success .
∃ REF2[4] ATTRIB[2] REF1[1] EVENT[5] ENTITY[3] (
 REF1[1] = he ∧
  REF2[4] = his ∧
   is_success_POS(ENTITY[3], REF2[4]) ∧ is_boastful_of(ATTRIB[2], ENTITY[3]) ∧ copula(EVENT[5], REF1[1], ATTRIB[2]))

# ::id 64_textbook_TANAKA;006_ID_145656;IE
# ::snt Father is busy , so I will go instead .
∃ REF1[3] SITUATION[2] ATTRIB[1] EVENT[6] (
 busy(ATTRIB[1]) ∧
  REF1[3] = i ∧
   is_FACT_THAT(SITUATION[2],
    MD_will(∃ EVENT[5] ENTITY[4] (stead(ENTITY[4]) ∧ go(EVENT[5], REF1[3]) ∧ in(EVENT[5]) = ENTITY[4]))) ∧
    copula(EVENT[6], ENTITY[Father], ATTRIB[1]) ∧ so(EVENT[6]) = SITUATION[2])

# ::id 65_textbook_TANAKA;006_ID_77653;IE
# ::snt I had Mr Jones correct my composition .
∃ REF2[4] REF1[1] EVENT[5] EVENT[2] ENTITY[3] (
 REF1[1] = i ∧
  REF2[4] = my ∧
   is_composition_POS(ENTITY[3], REF2[4]) ∧
    past(EVENT[2]) ∧ had(EVENT[2], REF1[1], correct(EVENT[5], ENTITY[Mr_Jones], ENTITY[3])))

# ::id 66_textbook_TANAKA;006_ID_35884;IE
# ::snt I said hello to Debby but she totally ignored me .
∃ REF3[4] REF2[3] REF1[1] EVENT[2] EVENT[5] (
 REF1[1] = i ∧
  REF2[3] = she ∧
   REF3[4] = me ∧
    past(EVENT[2]) ∧
     ADV_totally(EVENT[5]) ∧
      past(EVENT[5]) ∧
       CONJ_but(said(EVENT[2], REF1[1]) ∧ to(EVENT[2]) = ENTITY[Debby],
        ignored(EVENT[5], REF2[3], REF3[4])))

# ::id 67_textbook_TANAKA;006_ID_126257;IE
# ::snt He is sure of success .
∃ ATTRIB[2] REF1[1] EVENT[4] ENTITY[3] (REF1[1] = he ∧ success(ENTITY[3]) ∧ is_sure_of(ATTRIB[2], ENTITY[3]) ∧ copula(EVENT[4], REF1[1], ATTRIB[2]))

# ::id 68_textbook_TANAKA;006_ID_8061;IE
# ::snt You can count on me any time .
∃ REF1[1] (
 REF1[1] = you ∧
  MD_can(∃ REF2[2] (
        REF2[2] = me ∧
         ANY ENTITY[3] (time(ENTITY[3]),
          ∃ EVENT[4] (count(EVENT[4], REF1[1], ENTITY[3]) ∧ on(EVENT[4]) = REF2[2])))))

# ::id 69_textbook_TANAKA;006_ID_5955;IE
# ::snt That girl 's eyes are blue .
∃ ATTRIB[3] EVENT[4] GROUP[1] ENTITY[2] (girl(ENTITY[2]) ∧ is_eyes_POS(GROUP[1], ENTITY[2]) ∧ blue(ATTRIB[3]) ∧ copula(EVENT[4], GROUP[1], ATTRIB[3]))

# ::id 70_textbook_TANAKA;006_ID_15361;IE
# ::snt This work does not meet our requirements .
∃ ENTITY[1] (
 work(ENTITY[1]) ∧
  ¬ ∃ REF1[3] EVENT[4] GROUP[2] (REF1[3] = our ∧ is_requirements_POS(GROUP[2], REF1[3]) ∧ does_meet(EVENT[4], ENTITY[1], GROUP[2])))

# ::id 71_textbook_TANAKA;006_ID_141359;IE
# ::snt She can ask and answer questions .
∃ REF1[1] (
 REF1[1] = she ∧
  MD_can(∃ EVENT[3] EVENT[4] GROUP[2] (
        questions(GROUP[2]) ∧
         CONJ_and(ask(EVENT[3], REF1[1], GROUP[2]), answer(EVENT[4], REF1[1], GROUP[2])))))

# ::id 72_textbook_TANAKA;006_ID_70678;IE
# ::snt The house was in good order when we left .
∃ REF1[4] ATTRIB[3] EVENT[5] EVENT[6] ENTITY[2] ENTITY[1] (
 house(ENTITY[1]) ∧
  good(ATTRIB[3]) ∧
   is_order_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
    REF1[4] = we ∧
     past(EVENT[5]) ∧
      past(EVENT[6]) ∧
       CRD_when(left(EVENT[5], REF1[4]), copula(EVENT[6], ENTITY[1]) ∧ in(EVENT[6]) = ENTITY[2]))

# ::id 73_textbook_TANAKA;006_ID_106118;IE
# ::snt The sun was hot and they were tired .
∃ ATTRIB[5] REF1[4] ATTRIB[2] EVENT[3] EVENT[6] ENTITY[1] (
 sun(ENTITY[1]) ∧
  hot(ATTRIB[2]) ∧
   REF1[4] = they ∧
    tired(ATTRIB[5]) ∧
     past(EVENT[3]) ∧
      past(EVENT[6]) ∧ CONJ_and(copula(EVENT[3], ENTITY[1], ATTRIB[2]), copula(EVENT[6], REF1[4], ATTRIB[5])))

# ::id 74_textbook_TANAKA;006_ID_133561;IE
# ::snt They heard him come downstairs .
∃ REF2[3] REF1[1] EVENT[5] EVENT[2] ENTITY[4] (
 REF1[1] = they ∧
  REF2[3] = him ∧
   past(EVENT[2]) ∧ heard(EVENT[2], REF1[1], come(EVENT[5], REF2[3]) ∧ down(EVENT[5]) = ENTITY[4]))

# ::id 75_textbook_TANAKA;006_ID_136356;IE
# ::snt She made his hair curl .
∃ REF2[4] REF1[1] EVENT[5] EVENT[2] ENTITY[3] (
 REF1[1] = she ∧
  REF2[4] = his ∧
   is_hair_POS(ENTITY[3], REF2[4]) ∧ past(EVENT[2]) ∧ made(EVENT[2], REF1[1], curl(EVENT[5], ENTITY[3])))

# ::id 76_textbook_TANAKA;006_ID_105304;IE
# ::snt You mind if I join you ?
QUEST(∃ REF3[4] REF2[3] SITUATION[2] REF1[1] EVENT[5] EVENT[6] (
      REF1[1] = you ∧
       REF2[3] = i ∧
        REF3[4] = you ∧
         is_FACT_THAT(SITUATION[2], join(EVENT[5], REF2[3], REF3[4])) ∧
          mind(EVENT[6], REF1[1]) ∧ if(EVENT[6]) = SITUATION[2]))

# ::id 77_textbook_TANAKA;006_ID_105138;IE
# ::snt The number of working women is increasing .
∃ ATTRIB[3] EVENT[4] GROUP[2] ENTITY[1] (working(ATTRIB[3]) ∧ is_women_ATTRIBUTE(GROUP[2], ATTRIB[3]) ∧ is_number_of(ENTITY[1], GROUP[2]) ∧ is_increasing(EVENT[4], ENTITY[1]))

# ::id 78_textbook_TANAKA;006_ID_134968;IE
# ::snt She fooled me into giving her the money .
∃ REF3[4] SITUATION[3] REF2[2] REF1[1] EVENT[6] EVENT[7] ENTITY[5] (
 money(ENTITY[5]) ∧
  REF1[1] = she ∧
   REF2[2] = me ∧
    REF3[4] = her ∧
     is_FACT_THAT(SITUATION[3], giving(EVENT[6], REF2[2], ENTITY[5], REF3[4])) ∧
      past(EVENT[7]) ∧ fooled(EVENT[7], REF1[1], REF2[2]) ∧ into(EVENT[7]) = SITUATION[3])

# ::id 79_textbook_TANAKA;006_ID_91440;IE
# ::snt To begin with , we have no money now .
∃ REF1[3] PRP[1] EVENT[2] (
 is_FACT_THAT(PRP[1], begin_with(EVENT[2])) ∧
  REF1[3] = we ∧
   ¬ ∃ ENTITY[4] EVENT[5] (
         TMP_now(EVENT[5]) ∧
          money(ENTITY[4]) ∧ have(EVENT[5], REF1[3], ENTITY[4]) ∧ PRP(EVENT[5]) = PRP[1]))

# ::id 80_textbook_TANAKA;006_ID_80352;IE
# ::snt I study English at home .
∃ REF1[1] EVENT[3] ENTITY[2] (
 REF1[1] = i ∧
  home(ENTITY[2]) ∧ study(EVENT[3], REF1[1], ENTITY[English]) ∧ at(EVENT[3]) = ENTITY[2])

# ::id 81_textbook_TANAKA;006_ID_27755;IE
# ::snt There were fifteen persons injured in the accident .
∃ GROUP[1] EVENT[4] EVENT[5] ENTITY[3] (
 accident(ENTITY[3]) ∧
  past(EVENT[5]) ∧
   (CD_fifteen(GROUP[1]),
    injured(EVENT[4], _, GROUP[1]) ∧ in(EVENT[4]) = ENTITY[3] ∧ persons(GROUP[1])) ∧
    copula(EVENT[5], GROUP[1]))

# ::id 82_textbook_TANAKA;006_ID_3304;IE
# ::snt I 'd appreciate your help .
∃ REF1[1] (
 REF1[1] = i ∧
  MD'd(∃ REF2[3] EVENT[4] ENTITY[2] (REF2[3] = your ∧ is_help_POS(ENTITY[2], REF2[3]) ∧ appreciate(EVENT[4], REF1[1], ENTITY[2]))))

# ::id 83_textbook_TANAKA;006_ID_101500;IE
# ::snt Nobody was allowed to go out of the room .
∃ ENTITY[3] (
 room(ENTITY[3]) ∧
  ¬ ∃ EVENT[4] EVENT[2] ENTITY[1] (
        body(ENTITY[1]) ∧
         past(EVENT[2]) ∧
          was_allowed(EVENT[2], ENTITY[1], go_out(EVENT[4], ENTITY[1]) ∧ of(EVENT[4]) = ENTITY[3])))

# ::id 84_textbook_TANAKA;006_ID_98250;IE
# ::snt Move along , please .
∃ EVENT[1] please(EVENT[1], IMPERATIVE(∃ EVENT[2] move_along(EVENT[2])))

# ::id 85_textbook_TANAKA;006_ID_122405;IE
# ::snt Will he come this evening ?
∃ TIME[2] (
 evening(TIME[2]) ∧
  QUEST(MD_will(∃ REF1[1] EVENT[3] (
             REF1[1] = he ∧
              come(EVENT[3], REF1[1]) ∧ is_contained_in(TMP(EVENT[3]), TIME[2])))))

# ::id 86_textbook_TANAKA;006_ID_139178;IE
# ::snt She got into the university with a view to study English .
∃ REF1[1] EVENT[4] EVENT[5] ENTITY[3] ENTITY[2] (
 university(ENTITY[2]) ∧
  REF1[1] = she ∧
   is_view_to(ENTITY[3], study(EVENT[4], _, ENTITY[English])) ∧
    past(EVENT[5]) ∧ got_into(EVENT[5], REF1[1], ENTITY[2]) ∧ with(EVENT[5]) = ENTITY[3])

# ::id 87_textbook_TANAKA;006_ID_99907;IE
# ::snt The sun went below the horizon .
∃ EVENT[3] ENTITY[2] ENTITY[1] (
 sun(ENTITY[1]) ∧
  horizon(ENTITY[2]) ∧ past(EVENT[3]) ∧ went(EVENT[3], ENTITY[1]) ∧ below(EVENT[3]) = ENTITY[2])

# ::id 88_textbook_TANAKA;006_ID_59455;IE
# ::snt You look just like your big brother .
∃ ATTRIB[5] REF2[4] ATTRIB[2] REF1[1] EVENT[6] ENTITY[3] (
 REF1[1] = you ∧
  REF2[4] = your ∧
   big(ATTRIB[5]) ∧
    is_brother_ATTRIBUTE(ENTITY[3], ATTRIB[5]) ∧ is_brother_POS(ENTITY[3], REF2[4]) ∧
     is_just_like_comp(ATTRIB[2], ENTITY[3]) ∧ look(EVENT[6], REF1[1]) ∧ ATTRIBUTE(EVENT[6]) = ATTRIB[2])

# ::id 89_textbook_TANAKA;006_ID_45656;IE
# ::snt The pencil which writes well is mine .
∃ REF1[6] EVENT[7] ENTITY[5] ENTITY[1] EVENT[3] (
 ADV_well(EVENT[3]) ∧
  writes(EVENT[3], ENTITY[1]) ∧ pencil(ENTITY[1]) ∧
   REF1[6] = mine ∧ is_POS(ENTITY[5], REF1[6]) ∧ copula(EVENT[7], ENTITY[1], ENTITY[5]))

# ::id 90_textbook_TANAKA;006_ID_140918;IE
# ::snt I found a true friend in her .
∃ REF2[4] ATTRIB[3] REF1[1] EVENT[5] ENTITY[2] (
 REF1[1] = i ∧
  true(ATTRIB[3]) ∧
   is_friend_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
    REF2[4] = her ∧
     past(EVENT[5]) ∧ found(EVENT[5], REF1[1], ENTITY[2]) ∧ in(EVENT[5]) = REF2[4])

# ::id 91_textbook_TANAKA;006_ID_46077;IE
# ::snt I was exhausted after running the race .
∃ REF1[1] EVENT[3] EVENT[4] ENTITY[2] (
 race(ENTITY[2]) ∧
  REF1[1] = i ∧
   past(EVENT[4]) ∧ CRD_after(running(EVENT[3], REF1[1], ENTITY[2]), was_exhausted(EVENT[4], REF1[1])))

# ::id 92_textbook_TANAKA;006_ID_23763;IE
# ::snt I suppose so .
∃ REF1[1] EVENT[2] (REF1[1] = i ∧ ADV_so(EVENT[2]) ∧ suppose(EVENT[2], REF1[1]))

# ::id 93_textbook_TANAKA;006_ID_107912;IE
# ::snt He can 't be under thirty .
∃ REF1[1] (
 REF1[1] = he ∧
  MD_can(¬ ∃ EVENT[3] ENTITY[2] (CD_thirty(ENTITY[2]) ∧ copula(EVENT[3], REF1[1]) ∧ under(EVENT[3]) = ENTITY[2])))

# ::id 94_textbook_TANAKA;006_ID_119104;IE
# ::snt He came in spite of bad weather .
∃ ATTRIB[4] REF1[1] EVENT[5] ENTITY[3] ENTITY[2] (
 REF1[1] = he ∧
  bad(ATTRIB[4]) ∧
   is_weather_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
    is_spite_of(ENTITY[2], ENTITY[3]) ∧
     past(EVENT[5]) ∧ came(EVENT[5], REF1[1]) ∧ in(EVENT[5]) = ENTITY[2])

# ::id 95_textbook_TANAKA;006_ID_18450;IE
# ::snt This is what he says .
∃ REF1[4] EVENT[5] EVENT[6] ENTITY[2] ENTITY[1] (REF1[4] = he ∧ says(EVENT[5], REF1[4], ENTITY[2]) ∧ copula(EVENT[6], ENTITY[1], ENTITY[2]))

# ::id 96_textbook_TANAKA;006_ID_65888;IE
# ::snt You look happy today .
∃ ATTRIB[2] REF1[1] EVENT[4] TIME[3] (
 REF1[1] = you ∧
  happy(ATTRIB[2]) ∧
   today(TIME[3]) ∧ look(EVENT[4], REF1[1], ATTRIB[2]) ∧ is_contained_in(TMP(EVENT[4]), TIME[3]))

# ::id 97_textbook_TANAKA;006_ID_113721;IE
# ::snt He turned up an hour later .
∃ REF1[1] EVENT[3] TIME[2] (
 REF1[1] = he ∧
  hour(TIME[2]) ∧ is_TMP_later_TMP(EVENT[3], TIME[2]) ∧ past(EVENT[3]) ∧ turned_up(EVENT[3], REF1[1]))

# ::id 98_textbook_TANAKA;006_ID_117172;IE
# ::snt He came home just now .
∃ REF1[1] EVENT[2] (
 REF1[1] = he ∧
  ADV_home(EVENT[2]) ∧ TMP_just_now(EVENT[2]) ∧ past(EVENT[2]) ∧ came(EVENT[2], REF1[1]))

# ::id 99_textbook_TANAKA;006_ID_31142;IE
# ::snt You 'll find the book in the library .
∃ REF1[1] ENTITY[3] ENTITY[2] (
 book(ENTITY[2]) ∧
  library(ENTITY[3]) ∧
   REF1[1] = you ∧ MD'll(∃ EVENT[4] (find(EVENT[4], REF1[1], ENTITY[2]) ∧ in(EVENT[4]) = ENTITY[3])))

# ::id 100_textbook_TANAKA;006_ID_142100;IE
# ::snt She learned the craft of basket weaving from her grandmother .
∃ REF2[5] REF1[1] EVENT[6] ENTITY[4] ENTITY[3] ENTITY[2] (
 basket_weaving(ENTITY[3]) ∧
  is_craft_of(ENTITY[2], ENTITY[3]) ∧
   REF1[1] = she ∧
    REF2[5] = her ∧
     is_grandmother_POS(ENTITY[4], REF2[5]) ∧
      past(EVENT[6]) ∧ learned(EVENT[6], REF1[1], ENTITY[2]) ∧ from(EVENT[6]) = ENTITY[4])

# ::id 101_textbook_TANAKA;006_ID_112134;IE
# ::snt His success was due in part to good luck .
∃ ATTRIB[6] ATTRIB[3] REF1[2] EVENT[7] ENTITY[5] ENTITY[4] ENTITY[1] (
 REF1[2] = his ∧
  is_success_POS(ENTITY[1], REF1[2]) ∧
   good(ATTRIB[6]) ∧
    is_luck_ATTRIBUTE(ENTITY[5], ATTRIB[6]) ∧
     is_part_to(ENTITY[4], ENTITY[5]) ∧
      is_due_in(ATTRIB[3], ENTITY[4]) ∧
       past(EVENT[7]) ∧ copula(EVENT[7], ENTITY[1]) ∧ ATTRIBUTE(EVENT[7]) = ATTRIB[3])

# ::id 102_textbook_TANAKA;006_ID_97417;IE
# ::snt I met his sister last week .
∃ ATTRIB[5] REF2[3] REF1[1] EVENT[6] TIME[4] ENTITY[2] (
 REF1[1] = i ∧
  REF2[3] = his ∧
   is_sister_POS(ENTITY[2], REF2[3]) ∧
    last(ATTRIB[5]) ∧
     is_week_ATTRIBUTE(TIME[4], ATTRIB[5]) ∧
      past(EVENT[6]) ∧ met(EVENT[6], REF1[1], ENTITY[2]) ∧ is_contained_in(TMP(EVENT[6]), TIME[4]))

# ::id 103_textbook_TANAKA;006_ID_98018;IE
# ::snt There are many foreign tourists in Asakusa .
MANY ATTRIB[2] GROUP[1] ((foreign(ATTRIB[2]) ∧ is_tourists_ATTRIBUTE(GROUP[1], ATTRIB[2])),
 ∃ EVENT[3] (copula(EVENT[3], GROUP[1]) ∧ in(EVENT[3]) = ENTITY[Asakusa]))

# ::id 104_textbook_TANAKA;006_ID_162612;IE
# ::snt Please send reports of mistypings and mistranslations to the below email address .
∃ EVENT[1] ENTITY[6] (
 ADV_below(ENTITY[6]) ∧ email_address(ENTITY[6]) ∧
  please(EVENT[1],
   IMPERATIVE(∃ EVENT[7] GROUP[3] GROUP[2] (
         ∃ GROUP[4] (mistypings(GROUP[4]) ∧ is_subset_of_or_equal_to(GROUP[4], GROUP[3])) ∧
          ∃ GROUP[5] (mistranslations(GROUP[5]) ∧ is_subset_of_or_equal_to(GROUP[5], GROUP[3])) ∧
          is_reports_of(GROUP[2], GROUP[3]) ∧
           send(EVENT[7], _, GROUP[2]) ∧ to(EVENT[7]) = ENTITY[6]))))

# ::id 105_textbook_TANAKA;006_ID_144284;IE
# ::snt We thought it wrong to leave her alone .
∃ ATTRIB[7] REF2[4] SITUATION[3] REF1[1] EVENT[5] EVENT[8] EVENT[2] (
 REF1[1] = we ∧
  REF2[4] = her ∧
   is_FACT_THAT(SITUATION[3], leave(EVENT[5], _, REF2[4])) ∧
    wrong(ATTRIB[7]) ∧
     ADV_alone(EVENT[5]) ∧ past(EVENT[2]) ∧ thought(EVENT[2], REF1[1], xxx(EVENT[8], SITUATION[3], ATTRIB[7])))

# ::id 106_textbook_TANAKA;006_ID_45184;IE
# ::snt Do your work with more care .
IMPERATIVE(∃ REF1[2] ENTITY[1] (
      REF1[2] = your ∧
       is_work_POS(ENTITY[1], REF1[2]) ∧
        MORE ENTITY[3] (care(ENTITY[3]), ∃ EVENT[4] (do(EVENT[4], _, ENTITY[1]) ∧ with(EVENT[4]) = ENTITY[3]))))

# ::id 107_textbook_TANAKA;006_ID_108054;IE
# ::snt It is surprising that he should not know this .
∃ ATTRIB[5] REF1[2] SITUATION[1] EVENT[6] ENTITY[3] (
 REF1[2] = he ∧
  is_FACT_THAT(SITUATION[1], MD_should(¬ ∃ EVENT[4] know(EVENT[4], REF1[2], ENTITY[3]))) ∧
   surprising(ATTRIB[5]) ∧ copula(EVENT[6], SITUATION[1], ATTRIB[5]))

# ::id 108_textbook_TANAKA;006_ID_32945;IE
# ::snt It proved to be the deathblow to their plan .
∃ REF2[5] REF1[1] EVENT[6] EVENT[2] ENTITY[4] ENTITY[3] (
 deathblow(ENTITY[3]) ∧
  REF1[1] = it ∧
   REF2[5] = their ∧
    is_plan_POS(ENTITY[4], REF2[5]) ∧
     past(EVENT[2]) ∧
      proved(EVENT[2], REF1[1], copula(EVENT[6], REF1[1], ENTITY[3]) ∧ to(EVENT[6]) = ENTITY[4]))

# ::id 109_textbook_TANAKA;006_ID_48917;IE
# ::snt Let 's go as soon as it stops raining .
IMPERATIVE(∃ SITUATION[8] SITUATION[10] SITUATION[5] REF1[2] EVENT[6] EVENT[7] EVENT[9] EVENT[1] TIME[3] (
      REF1[2] = 's ∧
       is_FACT_THAT(SITUATION[5], raining(EVENT[6])) ∧
        is_FACT_THAT(SITUATION[8], stops(EVENT[7], _, SITUATION[5])) ∧
         is_TMP(SITUATION[8], TIME[3]) ∧
          is_TMP_as_soon_as(SITUATION[10], TIME[3]) ∧ let(EVENT[1], is_FACT_THAT(SITUATION[10], go(EVENT[9], REF1[2])))))

# ::id 110_textbook_TANAKA;006_ID_20422;IE
# ::snt Come along !
IMPERATIVE(∃ EVENT[1] come_along(EVENT[1]))

# ::id 111_textbook_TANAKA;006_ID_106711;IE
# ::snt We often hear it said that the Japanese are good workers .
∃ SITUATION[7] ATTRIB[5] REF1[1] EVENT[6] EVENT[3] EVENT[2] GROUP[4] (
 REF1[1] = we ∧
  good(ATTRIB[5]) ∧
   is_workers_ATTRIBUTE(GROUP[4], ATTRIB[5]) ∧
    TMP_often(SITUATION[7]) ∧
     is_FACT_THAT(SITUATION[7],
      hear(EVENT[2], REF1[1],   said(EVENT[3], _, [_], copula(EVENT[6], GROUP[Japanese], GROUP[4])))))

# ::id 112_textbook_TANAKA;006_ID_85157;IE
# ::snt I got a letter from her .
∃ REF2[3] REF1[1] EVENT[4] ENTITY[2] (
 REF1[1] = i ∧
  letter(ENTITY[2]) ∧
   REF2[3] = her ∧
    past(EVENT[4]) ∧ got(EVENT[4], REF1[1], ENTITY[2]) ∧ from(EVENT[4]) = REF2[3])

# ::id 113_textbook_TANAKA;006_ID_81622;IE
# ::snt I aim to be a writer .
∃ REF1[1] EVENT[4] EVENT[2] ENTITY[3] (REF1[1] = i ∧ writer(ENTITY[3]) ∧ aim(EVENT[2], REF1[1], copula(EVENT[4], REF1[1], ENTITY[3])))

# ::id 114_textbook_TANAKA;006_ID_89215;IE
# ::snt No autumn fruit without spring blossom .
¬ ∃ EVENT[3] ENTITY[2] ENTITY[1] (
      autumn_fruit(ENTITY[1]) ∧ spring_blossom(ENTITY[2]) ∧ xxx(EVENT[3], ENTITY[1]) ∧ without(EVENT[3]) = ENTITY[2])

# ::id 115_textbook_TANAKA;006_ID_101700;IE
# ::snt You can 't expect a man to change his habits at once , girl .
∃ REF1[2] ENTITY[1] (
 girl(ENTITY[1]) ∧
  REF1[2] = you ∧
   MD_can(¬ ∃ REF2[6] EVENT[7] EVENT[3] GROUP[5] ENTITY[4] (
              man(ENTITY[4]) ∧
               REF2[6] = his ∧
                is_habits_POS(GROUP[5], REF2[6]) ∧
                 at(EVENT[7]) ∧ TMP_once(EVENT[7]) ∧
                  expect(EVENT[3], REF1[2], change(EVENT[7], ENTITY[4], GROUP[5])) ∧
                   VOC(EVENT[3]) = ENTITY[1])))

# ::id 116_textbook_TANAKA;006_ID_134979;IE
# ::snt Nothing gave her greater pleasure than to watch her son growing up .
¬ ∃ REF2[8] SITUATION[6] SITUATION[5] ATTRIB[4] REF1[2] EVENT[9] EVENT[10] EVENT[11] ENTITY[7] ENTITY[3] ENTITY[1] (
      thing(ENTITY[1]) ∧
       REF1[2] = her ∧
        greater(ATTRIB[4]) ∧
         REF2[8] = her ∧
          is_son_POS(ENTITY[7], REF2[8]) ∧
           is_FACT_THAT(SITUATION[6], growing_up(EVENT[9], ENTITY[7])) ∧
            is_FACT_THAT(SITUATION[5], watch(EVENT[10], _, SITUATION[6])) ∧
             is_pleasure_than(ENTITY[3], SITUATION[5]) ∧ is_pleasure_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
              past(EVENT[11]) ∧ gave(EVENT[11], ENTITY[1], ENTITY[3], REF1[2]))

# ::id 117_textbook_TANAKA;006_ID_73956;IE
# ::snt My watch needs mending .
∃ REF1[2] EVENT[4] ENTITY[3] ENTITY[1] (REF1[2] = my ∧ is_watch_POS(ENTITY[1], REF1[2]) ∧ mending(ENTITY[3]) ∧ needs(EVENT[4], ENTITY[1], ENTITY[3]))

# ::id 118_textbook_TANAKA;006_ID_64775;IE
# ::snt It will be all better if you can come now .
∃ REF1[1] (
 REF1[1] = it ∧
  MD_will(∃ ATTRIB[2] (
        all_better(ATTRIB[2]) ∧
         ∀ REF2[3] CND_if(REF2[3] = you ∧ MD_can(∃ EVENT[4] (TMP_now(EVENT[4]) ∧ come(EVENT[4], REF2[3]))), ∃ EVENT[6] copula(EVENT[6], REF1[1], ATTRIB[2])))))

# ::id 119_textbook_TANAKA;006_ID_77515;IE
# ::snt I 've enjoyed good health all my life .
∃ ATTRIB[3] REF1[1] ENTITY[2] (
 REF1[1] = i ∧
  good(ATTRIB[3]) ∧
   is_health_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
    ALL REF2[5] TIME[4] ((REF2[5] = my ∧ is_life_POS(TIME[4], REF2[5])), ∃ EVENT[6] ('ve_enjoyed(EVENT[6], REF1[1], ENTITY[2]) ∧ is_contained_in(TMP(EVENT[6]), TIME[4]))))

# ::id 120_textbook_TANAKA;006_ID_44780;IE
# ::snt If time permits , I 'll visit the museum .
∃ ENTITY[4] (
 museum(ENTITY[4]) ∧
  ∀ EVENT[2] ENTITY[1] CND_If(time(ENTITY[1]) ∧ permits(EVENT[2], ENTITY[1]),
      ∃ REF1[3] (REF1[3] = i ∧ MD'll(∃ EVENT[5] visit(EVENT[5], REF1[3], ENTITY[4])))))

# ::id 121_textbook_TANAKA;006_ID_59834;IE
# ::snt You may go home now .
∃ REF1[1] (REF1[1] = you ∧ MD_may(∃ EVENT[2] (DIR_home(EVENT[2]) ∧ TMP_now(EVENT[2]) ∧ go(EVENT[2], REF1[1]))))

# ::id 122_textbook_TANAKA;006_ID_130453;IE
# ::snt He often breaks his word , but I like him all the same .
∃ REF4[7] REF3[6] REF2[3] REF1[1] ATTRIB[9] EVENT[4] ENTITY[2] (
 same(ATTRIB[9]) ∧
  REF1[1] = he ∧
   REF2[3] = his ∧
    is_word_POS(ENTITY[2], REF2[3]) ∧
     REF3[6] = i ∧
      REF4[7] = him ∧
       TMP_often(EVENT[4]) ∧
        CONJ_but(breaks(EVENT[4], REF1[1], ENTITY[2]),
         ALL ENTITY[8] (is_ATTRIBUTE(ENTITY[8], ATTRIB[9]),
          ∃ EVENT[10] (like(EVENT[10], REF3[6], REF4[7]) ∧ ADV(EVENT[10]) = ENTITY[8]))))

# ::id 123_textbook_TANAKA;006_ID_30603;IE
# ::snt How is the discovery related to the progress of science ?
∃ ENTITY[5] ENTITY[4] ENTITY[2] (
 discovery(ENTITY[2]) ∧
  science(ENTITY[5]) ∧
   is_progress_of(ENTITY[4], ENTITY[5]) ∧
    QUEST(∃ ATTRIB[3] EVENT[6] ? ENTITY[1] (
          is_related_to(ATTRIB[3], ENTITY[4]) ∧
           is_ADV(EVENT[6], ENTITY[1]) ∧ copula(EVENT[6], ENTITY[2], ATTRIB[3]))))

# ::id 124_textbook_TANAKA;006_ID_30990;IE
# ::snt The lawyer 's fee was very high .
∃ ATTRIB[3] EVENT[4] ENTITY[1] ENTITY[2] (
 lawyer(ENTITY[2]) ∧
  is_fee_POS(ENTITY[1], ENTITY[2]) ∧ very_high(ATTRIB[3]) ∧ past(EVENT[4]) ∧ copula(EVENT[4], ENTITY[1], ATTRIB[3]))

# ::id 125_textbook_TANAKA;006_ID_105026;IE
# ::snt Is Mr Fujiwara at home now ?
QUEST(∃ EVENT[2] ENTITY[1] (
      home(ENTITY[1]) ∧
       TMP_now(EVENT[2]) ∧ copula(EVENT[2], ENTITY[Mr_Fujiwara]) ∧ at(EVENT[2]) = ENTITY[1]))

# ::id 126_textbook_TANAKA;006_ID_135699;IE
# ::snt Her hands are never still .
∃ REF1[2] EVENT[3] GROUP[1] (
 REF1[2] = her ∧
  is_hands_POS(GROUP[1], REF1[2]) ∧ TMP_never(EVENT[3]) ∧ TMP_still(EVENT[3]) ∧ copula(EVENT[3], GROUP[1]))

# ::id 127_textbook_TANAKA;006_ID_118956;IE
# ::snt He is looked up to as a leader .
∃ REF1[1] EVENT[3] ENTITY[2] (REF1[1] = he ∧ leader(ENTITY[2]) ∧ is_looked_up_to(EVENT[3], REF1[1]) ∧ as(EVENT[3]) = ENTITY[2])

# ::id 128_textbook_TANAKA;006_ID_79222;IE
# ::snt I 'm waiting for the bus .
∃ REF1[1] EVENT[3] ENTITY[2] (bus(ENTITY[2]) ∧ REF1[1] = i ∧ 'm_waiting(EVENT[3], REF1[1]) ∧ for(EVENT[3]) = ENTITY[2])

# ::id 129_textbook_TANAKA;006_ID_127944;IE
# ::snt He went to the Tokyo station with the taxi .
∃ REF1[1] EVENT[4] ENTITY[3] ENTITY[2] (
 Tokyo_station(ENTITY[2]) ∧
  taxi(ENTITY[3]) ∧
   REF1[1] = he ∧
    past(EVENT[4]) ∧
     went(EVENT[4], REF1[1]) ∧ with(EVENT[4]) = ENTITY[3] ∧ to(EVENT[4]) = ENTITY[2])

# ::id 130_textbook_TANAKA;006_ID_130275;IE
# ::snt He likes to build model planes .
∃ REF1[1] EVENT[4] EVENT[2] GROUP[3] (REF1[1] = he ∧ model_planes(GROUP[3]) ∧ likes(EVENT[2], REF1[1], build(EVENT[4], REF1[1], GROUP[3])))

# ::id 131_textbook_TANAKA;006_ID_107391;IE
# ::snt Have you ever ridden a horse ?
QUEST(∃ REF1[1] EVENT[3] ENTITY[2] (
      REF1[1] = you ∧ horse(ENTITY[2]) ∧ TMP_ever(EVENT[3]) ∧ have_ridden(EVENT[3], REF1[1], ENTITY[2])))

# ::id 132_textbook_TANAKA;006_ID_72602;IE
# ::snt We took a direct road to town .
∃ ATTRIB[3] REF1[1] EVENT[5] ENTITY[4] ENTITY[2] (
 REF1[1] = we ∧
  direct(ATTRIB[3]) ∧
   is_road_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
    town(ENTITY[4]) ∧
     past(EVENT[5]) ∧ took(EVENT[5], REF1[1], ENTITY[2]) ∧ to(EVENT[5]) = ENTITY[4])

# ::id 133_textbook_TANAKA;006_ID_2561;IE
# ::snt You should think of their religions .
∃ REF1[1] (
 REF1[1] = you ∧
  MD_should(∃ REF2[3] EVENT[4] GROUP[2] (
        REF2[3] = their ∧
         is_religions_POS(GROUP[2], REF2[3]) ∧ think(EVENT[4], REF1[1]) ∧ of(EVENT[4]) = GROUP[2])))

# ::id 134_textbook_TANAKA;006_ID_151221;IE
# ::snt It is not good to break a promise .
∃ SITUATION[1] EVENT[3] ENTITY[2] (
 promise(ENTITY[2]) ∧
  is_FACT_THAT(SITUATION[1], break(EVENT[3], _, ENTITY[2])) ∧
   ¬ ∃ ATTRIB[4] EVENT[5] (good(ATTRIB[4]) ∧ copula(EVENT[5], SITUATION[1], ATTRIB[4])))

# ::id 135_textbook_TANAKA;006_ID_136784;IE
# ::snt She always looked , but never was , happy .
∃ ATTRIB[2] REF1[1] EVENT[3] EVENT[5] (
 REF1[1] = she ∧
  happy(ATTRIB[2]) ∧
   TMP_always(EVENT[3]) ∧
    past(EVENT[3]) ∧
     TMP_never(EVENT[5]) ∧
      past(EVENT[5]) ∧ CONJ_but(looked(EVENT[3], REF1[1], ATTRIB[2]), copula(EVENT[5], REF1[1], ATTRIB[2])))

# ::id 136_textbook_TANAKA;006_ID_150549;IE
# ::snt The rope got entangled in the propeller .
∃ ATTRIB[2] EVENT[4] ENTITY[3] ENTITY[1] (
 rope(ENTITY[1]) ∧
  propeller(ENTITY[3]) ∧ is_entangled_in(ATTRIB[2], ENTITY[3]) ∧ past(EVENT[4]) ∧ got(EVENT[4], ENTITY[1], ATTRIB[2]))

# ::id 137_textbook_TANAKA;006_ID_112013;IE
# ::snt He was entirely free of his worry .
∃ REF2[4] ATTRIB[2] REF1[1] EVENT[5] ENTITY[3] (
 REF1[1] = he ∧
  REF2[4] = his ∧
   is_worry_POS(ENTITY[3], REF2[4]) ∧
    is_entirely_free_of(ATTRIB[2], ENTITY[3]) ∧ past(EVENT[5]) ∧ copula(EVENT[5], REF1[1], ATTRIB[2]))

# ::id 138_textbook_TANAKA;006_ID_80050;IE
# ::snt I finished writing a letter in English .
∃ SITUATION[2] REF1[1] EVENT[4] EVENT[5] ENTITY[3] (
 REF1[1] = i ∧
  letter(ENTITY[3]) ∧
   is_FACT_THAT(SITUATION[2], writing(EVENT[4], REF1[1], ENTITY[3]) ∧ in(EVENT[4]) = ENTITY[English]) ∧
    past(EVENT[5]) ∧ finished(EVENT[5], REF1[1], SITUATION[2]))

# ::id 139_textbook_TANAKA;006_ID_129802;IE
# ::snt He was busy .
∃ ATTRIB[2] REF1[1] EVENT[3] (REF1[1] = he ∧ busy(ATTRIB[2]) ∧ past(EVENT[3]) ∧ copula(EVENT[3], REF1[1], ATTRIB[2]))

# ::id 140_textbook_TANAKA;006_ID_25560;IE
# ::snt As the house has a southern aspect , it is very sunny .
∃ ATTRIB[7] REF1[6] ATTRIB[4] SITUATION[1] EVENT[5] EVENT[8] ENTITY[3] ENTITY[2] (
 house(ENTITY[2]) ∧
  southern(ATTRIB[4]) ∧
   is_aspect_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
    is_FACT_THAT(SITUATION[1], has(EVENT[5], ENTITY[2], ENTITY[3])) ∧
     REF1[6] = it ∧
      very_sunny(ATTRIB[7]) ∧ copula(EVENT[8], REF1[6], ATTRIB[7]) ∧ As(EVENT[8]) = SITUATION[1])

# ::id 141_textbook_TANAKA;006_ID_70473;IE
# ::snt I 'll take my father 's place .
∃ REF1[1] (
 REF1[1] = i ∧
  MD'll(∃ REF2[4] EVENT[5] ENTITY[3] ENTITY[2] (
        REF2[4] = my ∧
         is_father_POS(ENTITY[3], REF2[4]) ∧
          is_place_POS(ENTITY[2], ENTITY[3]) ∧ take(EVENT[5], REF1[1], ENTITY[2]))))

# ::id 142_textbook_TANAKA;006_ID_21194;IE
# ::snt But he is bad at reading English .
∃ SITUATION[3] ATTRIB[2] REF1[1] EVENT[4] EVENT[5] (
 REF1[1] = he ∧
  is_FACT_THAT(SITUATION[3], reading(EVENT[4], _, ENTITY[English])) ∧
   is_bad_at(ATTRIB[2], SITUATION[3]) ∧ copula(EVENT[5], REF1[1], ATTRIB[2]))

# ::id 143_textbook_TANAKA;006_ID_44192;IE
# ::snt Have you finished yet ?
QUEST(∃ REF1[1] EVENT[2] (REF1[1] = you ∧ TMP_yet(EVENT[2]) ∧ have_finished(EVENT[2], REF1[1])))

# ::id 144_textbook_TANAKA;006_ID_91251;IE
# ::snt There were forty people present .
∃ ATTRIB[2] EVENT[3] GROUP[1] (
 (CD_forty(GROUP[1]), people(GROUP[1])) ∧
  present(ATTRIB[2]) ∧ past(EVENT[3]) ∧ copula(EVENT[3], GROUP[1], ATTRIB[2]))

# ::id 145_textbook_TANAKA;006_ID_143703;IE
# ::snt She complied with my request .
∃ REF2[3] REF1[1] EVENT[4] ENTITY[2] (
 REF1[1] = she ∧
  REF2[3] = my ∧
   is_request_POS(ENTITY[2], REF2[3]) ∧
    past(EVENT[4]) ∧ complied(EVENT[4], REF1[1]) ∧ with(EVENT[4]) = ENTITY[2])

# ::id 146_textbook_TANAKA;006_ID_145181;IE
# ::snt Because he was ill , he could not go to the party .
∃ REF2[4] ATTRIB[2] REF1[1] EVENT[3] ENTITY[5] (
 party(ENTITY[5]) ∧
  REF1[1] = he ∧
   ill(ATTRIB[2]) ∧
    REF2[4] = he ∧
     past(EVENT[3]) ∧
      CRD_Because(copula(EVENT[3], REF1[1], ATTRIB[2]),
       MD_could(¬ ∃ EVENT[6] (go(EVENT[6], REF2[4]) ∧ to(EVENT[6]) = ENTITY[5]))))

# ::id 147_textbook_TANAKA;006_ID_3990;IE
# ::snt Did you call your friend in Canada ?
QUEST(∃ REF2[3] REF1[1] EVENT[4] ENTITY[2] (
      REF1[1] = you ∧
       REF2[3] = your ∧
        is_friend_in(ENTITY[2], ENTITY[Canada]) ∧ is_friend_POS(ENTITY[2], REF2[3]) ∧
         past(EVENT[4]) ∧ did_call(EVENT[4], REF1[1], ENTITY[2])))

# ::id 148_textbook_TANAKA;006_ID_58206;IE
# ::snt It is plain that you are to blame .
∃ REF2[3] ATTRIB[2] REF1[1] EVENT[5] EVENT[4] EVENT[6] (
 REF1[1] = it ∧
  REF2[3] = you ∧
   is_plain_THAT(ATTRIB[2], copula(EVENT[4], REF2[3], blame(EVENT[5], REF2[3]))) ∧
    copula(EVENT[6], REF1[1], ATTRIB[2]))

# ::id 149_textbook_TANAKA;006_ID_146238;IE
# ::snt The injured man lay in the street before the police arrived .
∃ SITUATION[4] ATTRIB[2] EVENT[6] EVENT[7] ENTITY[5] ENTITY[3] ENTITY[1] (
 injured(ATTRIB[2]) ∧
  is_man_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧
   street(ENTITY[3]) ∧
    police(ENTITY[5]) ∧
     past(EVENT[6]) ∧
      past(EVENT[7]) ∧
       is_FACT_THAT(SITUATION[4], arrived(EVENT[6], ENTITY[5])) ∧
        lay(EVENT[7], ENTITY[1]) ∧ before(EVENT[7]) = SITUATION[4] ∧ in(EVENT[7]) = ENTITY[3])

# ::id 150_textbook_TANAKA;006_ID_141478;IE
# ::snt She went on talking to her friend ever after the class began .
∃ REF2[3] REF1[1] EVENT[6] EVENT[7] EVENT[4] ENTITY[2] ENTITY[5] (
 class(ENTITY[5]) ∧
  REF1[1] = she ∧
   REF2[3] = her ∧
    is_friend_POS(ENTITY[2], REF2[3]) ∧
     past(EVENT[6]) ∧
      past(EVENT[7]) ∧
       CONJ_and(CRD_ever_after(began(EVENT[6], ENTITY[5]), went_on(EVENT[7], REF1[1])),
        talking(EVENT[4], REF1[1]) ∧ to(EVENT[4]) = ENTITY[2]))

# ::id 151_textbook_TANAKA;006_ID_72903;IE
# ::snt We celebrated Mother 's 45th birthday .
∃ ATTRIB[3] REF1[1] EVENT[4] DATE[2] (
 REF1[1] = we ∧
  45th(ATTRIB[3]) ∧
   is_birthday_ATTRIBUTE(DATE[2], ATTRIB[3]) ∧ is_birthday_POS(DATE[2], ENTITY[Mother]) ∧
    past(EVENT[4]) ∧ celebrated(EVENT[4], REF1[1], DATE[2]))

# ::id 152_textbook_TANAKA;006_ID_60060;IE
# ::snt You need to have friends who can help you out .
∃ REF1[1] EVENT[7] EVENT[2] GROUP[3] (
 REF1[1] = you ∧
  MD_can(∃ REF2[5] EVENT[6] (REF2[5] = you ∧ help_out(EVENT[6], GROUP[3], REF2[5]))) ∧ friends(GROUP[3]) ∧
   need(EVENT[2], REF1[1], have(EVENT[7], REF1[1], GROUP[3])))

# ::id 153_textbook_TANAKA;006_ID_92068;IE
# ::snt Drink water from a stream .
IMPERATIVE(∃ EVENT[3] ENTITY[2] ENTITY[1] (
      water(ENTITY[1]) ∧
       stream(ENTITY[2]) ∧ drink(EVENT[3], _, ENTITY[1]) ∧ from(EVENT[3]) = ENTITY[2]))

# ::id 154_textbook_TANAKA;006_ID_14927;IE
# ::snt These shoes need polishing .
∃ EVENT[3] ENTITY[2] GROUP[1] (shoes(GROUP[1]) ∧ polishing(ENTITY[2]) ∧ need(EVENT[3], GROUP[1], ENTITY[2]))

# ::id 155_textbook_TANAKA;006_ID_162607;IE
# ::snt Certainly there are downsides to leadership by coercion and force .
∃ EVENT[6] GROUP[3] ENTITY[2] GROUP[1] (
 ∃ ENTITY[4] (coercion(ENTITY[4]) ∧ is_element_of(ENTITY[4], GROUP[3])) ∧
  ∃ ENTITY[5] (force(ENTITY[5]) ∧ is_element_of(ENTITY[5], GROUP[3])) ∧
  is_leadership_by(ENTITY[2], GROUP[3]) ∧ is_downsides_to(GROUP[1], ENTITY[2]) ∧ ADV_certainly(EVENT[6]) ∧ copula(EVENT[6], GROUP[1]))

# ::id 156_textbook_TANAKA;006_ID_68077;IE
# ::snt I had a terrible dream last night .
∃ ATTRIB[5] ATTRIB[3] REF1[1] EVENT[6] TIME[4] ENTITY[2] (
 REF1[1] = i ∧
  terrible(ATTRIB[3]) ∧
   is_dream_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
    last(ATTRIB[5]) ∧
     is_night_ATTRIBUTE(TIME[4], ATTRIB[5]) ∧
      past(EVENT[6]) ∧ had(EVENT[6], REF1[1], ENTITY[2]) ∧ is_contained_in(TMP(EVENT[6]), TIME[4]))

# ::id 157_textbook_TANAKA;006_ID_138146;IE
# ::snt She is covered in confusion .
∃ REF1[1] EVENT[3] ENTITY[2] (
 REF1[1] = she ∧
  confusion(ENTITY[2]) ∧ covered(EVENT[3], _, REF1[1]) ∧ in(EVENT[3]) = ENTITY[2])

# ::id 158_textbook_TANAKA;006_ID_147556;IE
# ::snt My mother is out .
∃ REF1[2] EVENT[3] ENTITY[1] (REF1[2] = my ∧ is_mother_POS(ENTITY[1], REF1[2]) ∧ copula_out(EVENT[3], ENTITY[1]))

# ::id 159_textbook_TANAKA;006_ID_142323;IE
# ::snt She called for help .
∃ REF1[1] EVENT[3] ENTITY[2] (
 REF1[1] = she ∧
  help(ENTITY[2]) ∧ past(EVENT[3]) ∧ called(EVENT[3], REF1[1]) ∧ for(EVENT[3]) = ENTITY[2])

# ::id 160_textbook_TANAKA;006_ID_47030;IE
# ::snt It 's very hard to get rid of bad habits .
∃ ATTRIB[5] ATTRIB[3] ATTRIB[2] REF1[1] EVENT[6] EVENT[7] GROUP[4] (
 REF1[1] = it ∧
  bad(ATTRIB[5]) ∧
   is_habits_ATTRIBUTE(GROUP[4], ATTRIB[5]) ∧
    is_rid_of(ATTRIB[3], GROUP[4]) ∧
     is_very_hard_to(ATTRIB[2], get(EVENT[6]) ∧ ATTRIBUTE(EVENT[6]) = ATTRIB[3]) ∧
      copula(EVENT[7], REF1[1], ATTRIB[2]))

# ::id 161_textbook_TANAKA;006_ID_70584;IE
# ::snt It is very important for us to know each other .
∃ ATTRIB[6] REF1[2] SITUATION[1] EVENT[7] (
 REF1[2] = us ∧
  is_FACT_THAT(SITUATION[1],
   EACH ATTRIB[4] ENTITY[3] ((other(ATTRIB[4]) ∧ is_ATTRIBUTE(ENTITY[3], ATTRIB[4])), ∃ EVENT[5] know(EVENT[5], REF1[2], ENTITY[3]))) ∧
   very_important(ATTRIB[6]) ∧ copula(EVENT[7], SITUATION[1], ATTRIB[6]))

# ::id 162_textbook_TANAKA;006_ID_10373;IE
# ::snt Mother bathed the baby .
∃ EVENT[2] ENTITY[1] (baby(ENTITY[1]) ∧ past(EVENT[2]) ∧ bathed(EVENT[2], ENTITY[Mother], ENTITY[1]))

# ::id 163_textbook_TANAKA;006_ID_50934;IE
# ::snt She managed to learn to drive a car .
∃ REF1[1] EVENT[5] EVENT[3] EVENT[2] ENTITY[4] (
 REF1[1] = she ∧
  car(ENTITY[4]) ∧
   past(EVENT[2]) ∧
    managed(EVENT[2], REF1[1], learn(EVENT[3], REF1[1], drive(EVENT[5], REF1[1], ENTITY[4]))))

# ::id 164_textbook_TANAKA;006_ID_74033;IE
# ::snt My opinion is contrary to yours .
∃ REF2[4] ATTRIB[3] REF1[2] EVENT[5] ENTITY[1] (
 REF1[2] = my ∧
  is_opinion_POS(ENTITY[1], REF1[2]) ∧
   REF2[4] = yours ∧ is_contrary_to(ATTRIB[3], REF2[4]) ∧ copula(EVENT[5], ENTITY[1], ATTRIB[3]))

# ::id 165_textbook_TANAKA;006_ID_138762;IE
# ::snt She is applying the glasses .
∃ REF1[1] EVENT[3] GROUP[2] (glasses(GROUP[2]) ∧ REF1[1] = she ∧ is_applying(EVENT[3], REF1[1], GROUP[2]))

# ::id 166_textbook_TANAKA;006_ID_5086;IE
# ::snt You live in Tokyo , do n't you ?
∃ REF1[1] EVENT[2] (
 REF1[1] = you ∧
  live(EVENT[2], REF1[1]) ∧ in(EVENT[2]) = ENTITY[Tokyo] ∧
   QUEST(¬ ∃ REF2[3] EVENT[4] (REF2[3] = you ∧ do(EVENT[4], REF2[3]))))

# ::id 167_textbook_TANAKA;006_ID_151903;IE
# ::snt Discretion is the better part of valor .
∃ ATTRIB[3] EVENT[5] ENTITY[1] ENTITY[4] ENTITY[2] (
 better(ATTRIB[3]) ∧
  valor(ENTITY[4]) ∧
   is_part_of(ENTITY[2], ENTITY[4]) ∧ is_part_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
    Discretion(ENTITY[1]) ∧ copula(EVENT[5], ENTITY[1], ENTITY[2]))

# ::id 168_textbook_TANAKA;006_ID_53264;IE
# ::snt We are bound to obey the law .
∃ REF1[1] EVENT[4] EVENT[2] ENTITY[3] (law(ENTITY[3]) ∧ REF1[1] = we ∧ are_bound(EVENT[2], REF1[1], obey(EVENT[4], REF1[1], ENTITY[3])))

# ::id 169_textbook_TANAKA;006_ID_93821;IE
# ::snt Fresh fruit and vegetable are good for your health .
∃ REF1[8] ATTRIB[6] ATTRIB[2] EVENT[9] GROUP[3] ENTITY[7] ENTITY[1] (
 fresh(ATTRIB[2]) ∧
  ∃ ENTITY[4] (fruit(ENTITY[4]) ∧ is_element_of(ENTITY[4], GROUP[3])) ∧
   ∃ ENTITY[5] (vegetable(ENTITY[5]) ∧ is_element_of(ENTITY[5], GROUP[3])) ∧
   is_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧ is_equals(ENTITY[1], GROUP[3]) ∧
    REF1[8] = your ∧
     is_health_POS(ENTITY[7], REF1[8]) ∧ is_good_for(ATTRIB[6], ENTITY[7]) ∧ copula(EVENT[9], ENTITY[1], ATTRIB[6]))

# ::id 170_textbook_TANAKA;006_ID_78444;IE
# ::snt I reflected on the problem .
∃ REF1[1] EVENT[3] ENTITY[2] (
 problem(ENTITY[2]) ∧
  REF1[1] = i ∧ past(EVENT[3]) ∧ reflected(EVENT[3], REF1[1]) ∧ on(EVENT[3]) = ENTITY[2])

# ::id 171_textbook_TANAKA;006_ID_79561;IE
# ::snt I 've got another dollar coming .
∃ SITUATION[2] REF1[1] EVENT[5] (
 REF1[1] = i ∧
  is_FACT_THAT(SITUATION[2], ANOTHER ENTITY[3] (dollar(ENTITY[3]), ∃ EVENT[4] coming(EVENT[4], ENTITY[3]))) ∧ 've_got(EVENT[5], REF1[1], SITUATION[2]))

# ::id 172_textbook_TANAKA;006_ID_41830;IE
# ::snt No other man could do my work .
¬ ∃ ATTRIB[2] ENTITY[1] (
      other(ATTRIB[2]) ∧
       is_man_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧
        MD_could(∃ REF1[4] EVENT[5] ENTITY[3] (
              REF1[4] = my ∧ is_work_POS(ENTITY[3], REF1[4]) ∧ do(EVENT[5], ENTITY[1], ENTITY[3]))))

# ::id 173_textbook_TANAKA;006_ID_128448;IE
# ::snt He is too short to get at the book on the shelf .
∃ ATTRIB[2] REF1[1] EVENT[5] EVENT[6] ENTITY[4] ENTITY[3] (
 shelf(ENTITY[4]) ∧
  is_book_on(ENTITY[3], ENTITY[4]) ∧
   REF1[1] = he ∧
    is_too_short_to(ATTRIB[2], get(EVENT[5]) ∧ at(EVENT[5]) = ENTITY[3]) ∧
     copula(EVENT[6], REF1[1], ATTRIB[2]))

# ::id 174_textbook_TANAKA;006_ID_144653;IE
# ::snt He who pays the piper calls the tune .
∃ REF1[4] EVENT[3] EVENT[6] ENTITY[2] ENTITY[5] (
 piper(ENTITY[2]) ∧
  tune(ENTITY[5]) ∧
   REF1[4] = he ∧ pays(EVENT[3], REF1[4], ENTITY[2]) ∧ calls(EVENT[6], REF1[4], ENTITY[5]))

# ::id 175_textbook_TANAKA;006_ID_149392;IE
# ::snt Lots of old people are killed in traffic accidents every year .
∃ ATTRIB[3] GROUP[2] GROUP[4] GROUP[1] (
 old(ATTRIB[3]) ∧
  is_people_ATTRIBUTE(GROUP[2], ATTRIB[3]) ∧
   is_Lots_of(GROUP[1], GROUP[2]) ∧
    traffic_accidents(GROUP[4]) ∧
     ∀ TIME[5] (year(TIME[5]) →
      ∃ EVENT[6] (
       are_killed(EVENT[6], GROUP[1]) ∧
        is_contained_in(TMP(EVENT[6]), TIME[5]) ∧ in(EVENT[6]) = GROUP[4])))

# ::id 176_textbook_TANAKA;006_ID_83107;IE
# ::snt I lost the watch I had bought the day before .
∃ REF1[1] REF2[4] EVENT[7] EVENT[6] TIME[5] ENTITY[2] (
 REF2[4] = i ∧
  ADV_before(TIME[5]) ∧ day(TIME[5]) ∧
   had_bought(EVENT[6], REF2[4], ENTITY[2]) ∧ is_contained_in(TMP(EVENT[6]), TIME[5]) ∧ watch(ENTITY[2]) ∧
    past(EVENT[6]) ∧ REF1[1] = i ∧ past(EVENT[7]) ∧ lost(EVENT[7], REF1[1], ENTITY[2]))

# ::id 177_textbook_TANAKA;006_ID_68323;IE
# ::snt Mary is the least studious of the three .
∃ ATTRIB[3] ATTRIB[2] EVENT[5] ENTITY[4] ENTITY[1] (
 least(ATTRIB[2]) ∧
  studious(ATTRIB[3]) ∧
   CD_three(ENTITY[4]) ∧
    is_of(ENTITY[1], ENTITY[4]) ∧ is_ATTRIBUTE(ENTITY[1], ATTRIB[3]) ∧ is_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧
     copula(EVENT[5], ENTITY[Mary], ENTITY[1]))

# ::id 178_textbook_TANAKA;006_ID_60168;IE
# ::snt You are to do as I tell you .
∃ REF3[5] REF2[4] SITUATION[3] REF1[1] EVENT[6] EVENT[7] EVENT[2] (
 REF1[1] = you ∧
  REF2[4] = i ∧
   REF3[5] = you ∧
    is_FACT_THAT(SITUATION[3], tell(EVENT[6], REF2[4], REF3[5])) ∧
     copula(EVENT[2], REF1[1], do(EVENT[7], REF1[1]) ∧ as(EVENT[7]) = SITUATION[3]))

# ::id 179_textbook_TANAKA;006_ID_92076;IE
# ::snt Birds are singing here and there in the park .
∃ EVENT[3] GROUP[1] ENTITY[2] (
 park(ENTITY[2]) ∧
  Birds(GROUP[1]) ∧
   CONJ_and(LOC_here(EVENT[3]), LOC_there(EVENT[3])) ∧
    are_singing(EVENT[3], GROUP[1]) ∧ in(EVENT[3]) = ENTITY[2])

# ::id 180_textbook_TANAKA;006_ID_88933;IE
# ::snt Try it out yourself .
IMPERATIVE(∃ REF2[2] REF1[1] EVENT[3] (
      REF1[1] = it ∧
       REF2[2] = yourself ∧ try_out(EVENT[3], _, REF1[1]) ∧ RFL(EVENT[3]) = REF2[2]))

# ::id 181_textbook_TANAKA;006_ID_55803;IE
# ::snt Regular exercise is beneficial to good health .
∃ ATTRIB[5] ATTRIB[3] ATTRIB[2] EVENT[6] ENTITY[4] ENTITY[1] (
 regular(ATTRIB[2]) ∧
  is_exercise_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧
   good(ATTRIB[5]) ∧
    is_health_ATTRIBUTE(ENTITY[4], ATTRIB[5]) ∧
     is_beneficial_to(ATTRIB[3], ENTITY[4]) ∧ copula(EVENT[6], ENTITY[1]) ∧ ATTRIBUTE(EVENT[6]) = ATTRIB[3])

# ::id 182_textbook_TANAKA;006_ID_18843;IE
# ::snt This is , indeed , a great piece of news .
∃ ATTRIB[4] EVENT[6] ENTITY[5] ENTITY[3] ENTITY[2] ENTITY[1] (
 deed(ENTITY[2]) ∧
  great(ATTRIB[4]) ∧
   news(ENTITY[5]) ∧
    is_piece_of(ENTITY[3], ENTITY[5]) ∧ is_piece_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
     copula(EVENT[6], ENTITY[1], ENTITY[3]) ∧ in(EVENT[6]) = ENTITY[2])

# ::id 183_textbook_TANAKA;006_ID_17256;IE
# ::snt This room does n't get much sunshine .
∃ ENTITY[1] (room(ENTITY[1]) ∧ ¬ MUCH ENTITY[2] (sunshine(ENTITY[2]), ∃ EVENT[3] does_get(EVENT[3], ENTITY[1], ENTITY[2])))

# ::id 184_textbook_TANAKA;006_ID_25295;IE
# ::snt The gossip hurt his reputation .
∃ REF1[3] EVENT[4] ENTITY[2] ENTITY[1] (
 gossip(ENTITY[1]) ∧
  REF1[3] = his ∧ is_reputation_POS(ENTITY[2], REF1[3]) ∧ past(EVENT[4]) ∧ hurt(EVENT[4], ENTITY[1], ENTITY[2]))

# ::id 185_textbook_TANAKA;006_ID_142502;IE
# ::snt She need not have kept silent .
∃ REF1[1] (REF1[1] = she ∧ MD_need(¬ ∃ ATTRIB[2] EVENT[3] (silent(ATTRIB[2]) ∧ have_kept(EVENT[3], REF1[1], ATTRIB[2]))))

# ::id 186_textbook_TANAKA;006_ID_78434;IE
# ::snt I must get through with reading the book till tomorrow .
∃ REF1[1] ENTITY[3] (
 book(ENTITY[3]) ∧
  REF1[1] = i ∧
   MD_must(∃ SITUATION[2] EVENT[4] EVENT[6] ENTITY[5] (
         is_FACT_THAT(SITUATION[2], reading(EVENT[4], REF1[1], ENTITY[3])) ∧
          tomorrow(ENTITY[5]) ∧
           get_through(EVENT[6], REF1[1]) ∧ till(EVENT[6]) = ENTITY[5] ∧
            with(EVENT[6]) = SITUATION[2])))

# ::id 187_textbook_TANAKA;006_ID_97227;IE
# ::snt The snow prevented his going out .
∃ ENTITY[1] (
 snow(ENTITY[1]) ∧
  OUT REF1[3] ENTITY[2] ((REF1[3] = his ∧ is_going_POS(ENTITY[2], REF1[3])), ∃ EVENT[4] (past(EVENT[4]) ∧ prevented(EVENT[4], ENTITY[1], ENTITY[2]))))

# ::id 188_textbook_TANAKA;006_ID_71470;IE
# ::snt We wandered round the shopping center .
∃ REF1[1] EVENT[3] ENTITY[2] (
 shopping_center(ENTITY[2]) ∧
  REF1[1] = we ∧ past(EVENT[3]) ∧ wandered(EVENT[3], REF1[1]) ∧ round(EVENT[3]) = ENTITY[2])

# ::id 189_textbook_TANAKA;006_ID_114820;IE
# ::snt He works for the sake of money .
∃ REF1[1] EVENT[4] ENTITY[3] ENTITY[2] (
 money(ENTITY[3]) ∧
  is_sake_of(ENTITY[2], ENTITY[3]) ∧
   REF1[1] = he ∧ works(EVENT[4], REF1[1]) ∧ for(EVENT[4]) = ENTITY[2])

# ::id 190_textbook_TANAKA;006_ID_38536;IE
# ::snt I must take back the money at all costs .
∃ REF1[1] ENTITY[2] (
 money(ENTITY[2]) ∧
  REF1[1] = i ∧
   MD_must(ALL GROUP[3] (costs(GROUP[3]), ∃ EVENT[4] (take_back(EVENT[4], REF1[1], ENTITY[2]) ∧ at(EVENT[4]) = GROUP[3]))))

# ::id 191_textbook_TANAKA;006_ID_125199;IE
# ::snt He lives up to his income .
∃ REF2[3] REF1[1] EVENT[4] ENTITY[2] (
 REF1[1] = he ∧
  REF2[3] = his ∧
   is_income_POS(ENTITY[2], REF2[3]) ∧ lives_up(EVENT[4], REF1[1]) ∧ to(EVENT[4]) = ENTITY[2])

# ::id 192_textbook_TANAKA;006_ID_11172;IE
# ::snt The rough material hurt the child 's tender skin .
∃ ATTRIB[2] EVENT[5] ENTITY[3] ENTITY[4] ENTITY[1] (
 rough(ATTRIB[2]) ∧
  is_material_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧
   child(ENTITY[4]) ∧
    is_tender_skin_POS(ENTITY[3], ENTITY[4]) ∧ past(EVENT[5]) ∧ hurt(EVENT[5], ENTITY[1], ENTITY[3]))

# ::id 193_textbook_TANAKA;006_ID_129909;IE
# ::snt He approached the boy reading a book .
∃ REF1[1] EVENT[6] EVENT[5] ENTITY[4] ENTITY[2] (
 book(ENTITY[4]) ∧
  reading(EVENT[5], ENTITY[2], ENTITY[4]) ∧ boy(ENTITY[2]) ∧
   REF1[1] = he ∧ past(EVENT[6]) ∧ approached(EVENT[6], REF1[1], ENTITY[2]))

# ::id 194_textbook_TANAKA;006_ID_91845;IE
# ::snt The shops were bad , but the factory was worse .
∃ ATTRIB[5] ATTRIB[2] EVENT[3] EVENT[6] GROUP[1] ENTITY[4] (
 shops(GROUP[1]) ∧
  factory(ENTITY[4]) ∧
   bad(ATTRIB[2]) ∧
    worse(ATTRIB[5]) ∧
     past(EVENT[3]) ∧
      past(EVENT[6]) ∧ CONJ_but(copula(EVENT[3], GROUP[1], ATTRIB[2]), copula(EVENT[6], ENTITY[4], ATTRIB[5])))

# ::id 195_textbook_TANAKA;006_ID_43003;IE
# ::snt Mummy has to do the washing this afternoon .
∃ EVENT[4] EVENT[1] TIME[3] ENTITY[2] (
 washing(ENTITY[2]) ∧
  afternoon(TIME[3]) ∧
   has(EVENT[1], ENTITY[Mummy], do(EVENT[4], ENTITY[Mummy], ENTITY[2]) ∧ is_contained_in(TMP(EVENT[4]), TIME[3])))

# ::id 196_textbook_TANAKA;006_ID_38964;IE
# ::snt Why were you absent from school yesterday ?
QUEST(∃ ATTRIB[3] REF1[2] EVENT[6] ENTITY[4] TIME[5] ? ENTITY[1] (
      REF1[2] = you ∧
       school(ENTITY[4]) ∧
        is_absent_from(ATTRIB[3], ENTITY[4]) ∧
         yesterday(TIME[5]) ∧
          is_ADV(EVENT[6], ENTITY[1]) ∧
           past(EVENT[6]) ∧
            copula(EVENT[6], REF1[2], ATTRIB[3]) ∧ is_contained_in(TMP(EVENT[6]), TIME[5])))

# ::id 197_textbook_TANAKA;006_ID_35600;IE
# ::snt There is an orange on the table .
∃ EVENT[3] ENTITY[1] ENTITY[2] (table(ENTITY[2]) ∧ orange(ENTITY[1]) ∧ copula(EVENT[3], ENTITY[1]) ∧ on(EVENT[3]) = ENTITY[2])

# ::id 198_textbook_TANAKA;006_ID_127310;IE
# ::snt He made bold to speak to the King .
∃ ATTRIB[2] REF1[1] EVENT[4] EVENT[5] ENTITY[3] (
 King(ENTITY[3]) ∧
  REF1[1] = he ∧
   is_bold_to(ATTRIB[2], speak(EVENT[4]) ∧ to(EVENT[4]) = ENTITY[3]) ∧
    past(EVENT[5]) ∧ made(EVENT[5], REF1[1], ATTRIB[2]))

# ::id 199_textbook_TANAKA;006_ID_7952;IE
# ::snt What ever do you mean ?
QUEST(∃ REF1[2] EVENT[3] ? ENTITY[1] (REF1[2] = you ∧ TMP_ever(EVENT[3]) ∧ do_mean(EVENT[3], REF1[2], ENTITY[1])))

# ::id 200_textbook_TANAKA;006_ID_98532;IE
# ::snt I will do my best .
∃ REF1[1] (
 REF1[1] = i ∧
  MD_will(∃ ATTRIB[4] REF2[3] EVENT[5] ENTITY[2] (
        REF2[3] = my ∧
         best(ATTRIB[4]) ∧
          is_ATTRIBUTE(ENTITY[2], ATTRIB[4]) ∧ is_POS(ENTITY[2], REF2[3]) ∧
           do(EVENT[5], REF1[1], ENTITY[2]))))

# ::id 201_textbook_TANAKA;006_ID_140954;IE
# ::snt She caught me by the arm .
∃ REF2[2] REF1[1] EVENT[4] ENTITY[3] (
 arm(ENTITY[3]) ∧
  REF1[1] = she ∧
   REF2[2] = me ∧
    past(EVENT[4]) ∧ caught(EVENT[4], REF1[1], REF2[2]) ∧ by(EVENT[4]) = ENTITY[3])

# ::id 202_textbook_TANAKA;006_ID_135802;IE
# ::snt She guessed right .
∃ REF1[1] EVENT[2] (REF1[1] = she ∧ ADV_right(EVENT[2]) ∧ past(EVENT[2]) ∧ guessed(EVENT[2], REF1[1]))

# ::id 203_textbook_TANAKA;006_ID_144736;IE
# ::snt Flying is the quickest way to travel .
∃ ATTRIB[3] EVENT[5] ENTITY[1] EVENT[4] ENTITY[2] (
 quickest(ATTRIB[3]) ∧
  is_way_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ is_way_to(ENTITY[2], travel(EVENT[4])) ∧
   Flying(ENTITY[1]) ∧ copula(EVENT[5], ENTITY[1], ENTITY[2]))

# ::id 204_textbook_TANAKA;006_ID_102232;IE
# ::snt Students arriving late will not be permitted to enter the hall .
∃ GROUP[1] EVENT[3] ENTITY[6] (
 hall(ENTITY[6]) ∧
  TMP_late(EVENT[3]) ∧
   arriving(EVENT[3], GROUP[1]) ∧ Students(GROUP[1]) ∧
    MD_will(¬ ∃ EVENT[7] EVENT[5] be_permitted(EVENT[5], GROUP[1], enter(EVENT[7], GROUP[1], ENTITY[6]))))

# ::id 205_textbook_TANAKA;006_ID_153469;IE
# ::snt The number of days lost through industrial dispute are shown in the table on the facing page .
∃ ATTRIB[9] ATTRIB[5] EVENT[10] EVENT[6] ENTITY[4] GROUP[2] ENTITY[8] ENTITY[7] ENTITY[1] (
 industrial(ATTRIB[5]) ∧
  is_dispute_ATTRIBUTE(ENTITY[4], ATTRIB[5]) ∧
   lost(EVENT[6], _, GROUP[2]) ∧ through(EVENT[6]) = ENTITY[4] ∧ days(GROUP[2]) ∧
    is_number_of(ENTITY[1], GROUP[2]) ∧
     table(ENTITY[7]) ∧
      facing(ATTRIB[9]) ∧
       is_page_ATTRIBUTE(ENTITY[8], ATTRIB[9]) ∧
        shown(EVENT[10], _, ENTITY[1]) ∧ on(EVENT[10]) = ENTITY[8] ∧ in(EVENT[10]) = ENTITY[7])

# ::id 206_textbook_TANAKA;006_ID_23274;IE
# ::snt Mr Smith gave a lecture on literature .
∃ EVENT[3] ENTITY[2] ENTITY[1] (literature(ENTITY[2]) ∧ is_lecture_on(ENTITY[1], ENTITY[2]) ∧ past(EVENT[3]) ∧ gave(EVENT[3], ENTITY[Mr_Smith], ENTITY[1]))

# ::id 207_textbook_TANAKA;006_ID_68782;IE
# ::snt After we finished working , we enjoyed talking together .
∃ REF2[4] REF1[1] EVENT[3] EVENT[6] ENTITY[2] ENTITY[5] (
 REF1[1] = we ∧
  working(ENTITY[2]) ∧
   REF2[4] = we ∧
    talking(ENTITY[5]) ∧
     past(EVENT[3]) ∧
      ADV_together(EVENT[6]) ∧
       past(EVENT[6]) ∧ CRD_After(finished(EVENT[3], REF1[1], ENTITY[2]), enjoyed(EVENT[6], REF2[4], ENTITY[5])))

# ::id 208_textbook_TANAKA;006_ID_46558;IE
# ::snt I have a lot of work to do .
∃ REF1[1] EVENT[5] EVENT[2] ENTITY[4] ENTITY[3] (
 REF1[1] = i ∧
  work(ENTITY[4]) ∧ is_lot_of(ENTITY[3], ENTITY[4]) ∧ have(EVENT[2], REF1[1], do(EVENT[5], ENTITY[3])))

# ::id 209_textbook_TANAKA;006_ID_64041;IE
# ::snt He is not a good student , to say the least .
∃ ADT[2] REF1[1] ATTRIB[4] EVENT[5] ENTITY[3] (
 least(ATTRIB[4]) ∧
  is_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
   REF1[1] = he ∧
    is_FACT_THAT(ADT[2], say(EVENT[5], REF1[1], ENTITY[3])) ∧
     ¬ ∃ ATTRIB[7] EVENT[8] ENTITY[6] (
           good(ATTRIB[7]) ∧
            is_student_ATTRIBUTE(ENTITY[6], ATTRIB[7]) ∧
             copula(EVENT[8], REF1[1], ENTITY[6]) ∧ ADT(EVENT[8]) = ADT[2]))

# ::id 210_textbook_TANAKA;006_ID_27055;IE
# ::snt The country must be very beautiful .
∃ ENTITY[1] (country(ENTITY[1]) ∧ MD_must(∃ ATTRIB[2] EVENT[3] (very_beautiful(ATTRIB[2]) ∧ copula(EVENT[3], ENTITY[1], ATTRIB[2]))))

# ::id 211_textbook_TANAKA;006_ID_53130;IE
# ::snt We met along the way .
∃ REF1[1] EVENT[3] ENTITY[2] (
 way(ENTITY[2]) ∧
  REF1[1] = we ∧ past(EVENT[3]) ∧ met(EVENT[3], REF1[1]) ∧ along(EVENT[3]) = ENTITY[2])

# ::id 212_textbook_TANAKA;006_ID_148090;IE
# ::snt We must do away with violence .
∃ REF1[1] (
 REF1[1] = we ∧
  MD_must(∃ EVENT[3] ENTITY[2] (
        violence(ENTITY[2]) ∧
         ADV_away(EVENT[3]) ∧ do(EVENT[3], REF1[1]) ∧ with(EVENT[3]) = ENTITY[2])))

# ::id 213_textbook_TANAKA;006_ID_24460;IE
# ::snt I 'm very sad to hear that .
∃ ATTRIB[2] REF1[1] EVENT[4] EVENT[5] ENTITY[3] (
 REF1[1] = i ∧
  is_very_sad_to(ATTRIB[2], hear(EVENT[4], _, ENTITY[3])) ∧ copula(EVENT[5], REF1[1], ATTRIB[2]))

# ::id 214_textbook_TANAKA;006_ID_111056;IE
# ::snt His heart bounded with expectation .
∃ REF1[2] EVENT[4] ENTITY[3] ENTITY[1] (
 REF1[2] = his ∧
  is_heart_POS(ENTITY[1], REF1[2]) ∧
   expectation(ENTITY[3]) ∧ past(EVENT[4]) ∧ bounded(EVENT[4], ENTITY[1]) ∧ with(EVENT[4]) = ENTITY[3])

# ::id 215_textbook_TANAKA;006_ID_71542;IE
# ::snt We agreed to the plan .
∃ REF1[1] EVENT[3] ENTITY[2] (
 plan(ENTITY[2]) ∧
  REF1[1] = we ∧ past(EVENT[3]) ∧ agreed(EVENT[3], REF1[1]) ∧ to(EVENT[3]) = ENTITY[2])

# ::id 216_textbook_TANAKA;006_ID_151588;IE
# ::snt The second the mailman comes , he rushes out to pick up his mail .
∃ REF2[7] REF1[4] EVENT[8] EVENT[5] ENTITY[6] EVENT[3] ENTITY[2] TIME[1] (
 mailman(ENTITY[2]) ∧
  is_second_THAT(TIME[1], comes(EVENT[3], ENTITY[2])) ∧
   REF1[4] = he ∧
    REF2[7] = his ∧
     is_mail_POS(ENTITY[6], REF2[7]) ∧
      rushes_out(EVENT[5], REF1[4], pick_up(EVENT[8], REF1[4], ENTITY[6])) ∧ is_contained_in(TMP(EVENT[5]), TIME[1]))

# ::id 217_textbook_TANAKA;006_ID_141177;IE
# ::snt She has been investing her energy in helping the poor in that area .
∃ SITUATION[4] REF2[3] REF1[1] EVENT[7] EVENT[8] ENTITY[2] ENTITY[6] ENTITY[5] (
 poor(ENTITY[5]) ∧
  area(ENTITY[6]) ∧
   REF1[1] = she ∧
    REF2[3] = her ∧
     is_energy_POS(ENTITY[2], REF2[3]) ∧
      is_FACT_THAT(SITUATION[4], helping(EVENT[7], ENTITY[2], ENTITY[5]) ∧ in(EVENT[7]) = ENTITY[6]) ∧
       has_been_investing(EVENT[8], REF1[1], ENTITY[2]) ∧ in(EVENT[8]) = SITUATION[4])

# ::id 218_textbook_TANAKA;006_ID_119490;IE
# ::snt He threw the ball to first base .
∃ ATTRIB[4] REF1[1] EVENT[5] ENTITY[3] ENTITY[2] (
 ball(ENTITY[2]) ∧
  REF1[1] = he ∧
   first(ATTRIB[4]) ∧
    is_base_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
     past(EVENT[5]) ∧ threw(EVENT[5], REF1[1], ENTITY[2]) ∧ to(EVENT[5]) = ENTITY[3])

# ::id 219_textbook_TANAKA;006_ID_138350;IE
# ::snt She is easygoing .
∃ ATTRIB[2] REF1[1] EVENT[3] (REF1[1] = she ∧ easygoing(ATTRIB[2]) ∧ copula(EVENT[3], REF1[1], ATTRIB[2]))

# ::id 220_textbook_TANAKA;006_ID_12311;IE
# ::snt How far is it from here ?
QUEST(∃ REF1[3] EVENT[5] ENTITY[4] ENTITY[1] ? ATTRIB[2] (
      far(ATTRIB[2]) ∧
       is_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧
        REF1[3] = it ∧
         here(ENTITY[4]) ∧
          copula(EVENT[5], REF1[3]) ∧ from(EVENT[5]) = ENTITY[4] ∧ MSR(EVENT[5]) = ENTITY[1]))

# ::id 221_textbook_TANAKA;006_ID_119318;IE
# ::snt He lived here for a time .
∃ REF1[1] EVENT[3] ENTITY[2] (
 REF1[1] = he ∧
  time(ENTITY[2]) ∧
   LOC_here(EVENT[3]) ∧ past(EVENT[3]) ∧ lived(EVENT[3], REF1[1]) ∧ for(EVENT[3]) = ENTITY[2])

# ::id 222_textbook_TANAKA;006_ID_27343;IE
# ::snt It was tough to finish the work .
∃ ATTRIB[4] SITUATION[1] EVENT[3] EVENT[5] ENTITY[2] (
 work(ENTITY[2]) ∧
  past(EVENT[5]) ∧
   is_FACT_THAT(SITUATION[1], finish(EVENT[3], _, ENTITY[2])) ∧
    tough(ATTRIB[4]) ∧ copula(EVENT[5], SITUATION[1], ATTRIB[4]))

# ::id 223_textbook_TANAKA;006_ID_11765;IE
# ::snt You have already eaten the cake .
∃ REF1[1] EVENT[3] ENTITY[2] (cake(ENTITY[2]) ∧ REF1[1] = you ∧ TMP_already(EVENT[3]) ∧ have_eaten(EVENT[3], REF1[1], ENTITY[2]))

# ::id 224_textbook_TANAKA;006_ID_91855;IE
# ::snt I do n't know the ABC of business .
∃ REF1[1] ENTITY[3] ENTITY[2] (
 business(ENTITY[3]) ∧
  is_ABC_of(ENTITY[2], ENTITY[3]) ∧ REF1[1] = i ∧ ¬ ∃ EVENT[4] do_know(EVENT[4], REF1[1], ENTITY[2]))

# ::id 225_textbook_TANAKA;006_ID_149740;IE
# ::snt We agreed to the plan without qualification .
∃ REF1[1] EVENT[4] ENTITY[3] ENTITY[2] (
 plan(ENTITY[2]) ∧
  REF1[1] = we ∧
   qualification(ENTITY[3]) ∧
    past(EVENT[4]) ∧
     agreed(EVENT[4], REF1[1]) ∧ without(EVENT[4]) = ENTITY[3] ∧ to(EVENT[4]) = ENTITY[2])

# ::id 226_textbook_TANAKA;006_ID_100283;IE
# ::snt The big car pulled up suddenly .
∃ ATTRIB[2] EVENT[3] ENTITY[1] (
 big(ATTRIB[2]) ∧
  is_car_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧ ADV_suddenly(EVENT[3]) ∧ past(EVENT[3]) ∧ pulled_up(EVENT[3], ENTITY[1]))

# ::id 227_textbook_TANAKA;006_ID_43220;IE
# ::snt There are few books that have some misprints .
FEW GROUP[1] (SOME GROUP[3] (misprints(GROUP[3]), ∃ EVENT[4] have(EVENT[4], GROUP[1], GROUP[3])) ∧ books(GROUP[1]), ∃ EVENT[5] copula(EVENT[5], GROUP[1]))

# ::id 228_textbook_TANAKA;006_ID_97968;IE
# ::snt The war brought ruin to the country .
∃ EVENT[4] ENTITY[2] ENTITY[3] ENTITY[1] (
 war(ENTITY[1]) ∧
  country(ENTITY[3]) ∧ ruin(ENTITY[2]) ∧ past(EVENT[4]) ∧ brought(EVENT[4], ENTITY[1], ENTITY[2], ENTITY[3]))

# ::id 229_textbook_TANAKA;006_ID_162601;IE
# ::snt The student submitted a paper to an English-language journal , and the result was " conditional acceptance " .
∃ ATTRIB[8] ATTRIB[4] EVENT[5] EVENT[9] ENTITY[3] ENTITY[2] ENTITY[7] ENTITY[1] ENTITY[6] (
 student(ENTITY[1]) ∧
  result(ENTITY[6]) ∧
   paper(ENTITY[2]) ∧
    english-language(ATTRIB[4]) ∧
     is_journal_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
      conditional(ATTRIB[8]) ∧
       is_acceptance_ATTRIBUTE(ENTITY[7], ATTRIB[8]) ∧
        past(EVENT[5]) ∧
         past(EVENT[9]) ∧
          CONJ_and(submitted(EVENT[5], ENTITY[1], ENTITY[2]) ∧ to(EVENT[5]) = ENTITY[3],
           copula(EVENT[9], ENTITY[6], ENTITY[7])))

# ::id 230_textbook_TANAKA;006_ID_15168;IE
# ::snt We want to break off this negotiation .
∃ REF1[1] EVENT[4] EVENT[2] ENTITY[3] (negotiation(ENTITY[3]) ∧ REF1[1] = we ∧ want(EVENT[2], REF1[1], break_off(EVENT[4], REF1[1], ENTITY[3])))

# ::id 231_textbook_TANAKA;006_ID_22491;IE
# ::snt I missed the school bus !
∃ REF1[1] EVENT[3] ENTITY[2] (school_bus(ENTITY[2]) ∧ REF1[1] = i ∧ past(EVENT[3]) ∧ missed(EVENT[3], REF1[1], ENTITY[2]))

# ::id 232_textbook_TANAKA;006_ID_69737;IE
# ::snt You must n't speak ill of the dead .
∃ REF1[1] ENTITY[2] (
 dead(ENTITY[2]) ∧
  REF1[1] = you ∧ MD_must(¬ ∃ EVENT[3] (is_ADV_ill_of(EVENT[3], ENTITY[2]) ∧ speak(EVENT[3], REF1[1]))))

# ::id 233_textbook_TANAKA;006_ID_36966;IE
# ::snt This is hardly the time to start a new enterprise .
∃ ATTRIB[4] EVENT[6] EVENT[5] ENTITY[3] ENTITY[2] ENTITY[1] (
 new(ATTRIB[4]) ∧
  is_enterprise_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
   is_time_to(ENTITY[2], start(EVENT[5], _, ENTITY[3])) ∧
    ADV_hardly(EVENT[6]) ∧ copula(EVENT[6], ENTITY[1], ENTITY[2]))

# ::id 234_textbook_TANAKA;006_ID_94312;IE
# ::snt A morning appointment is better for me .
∃ REF1[3] ATTRIB[2] EVENT[4] ENTITY[1] (
 morning_appointment(ENTITY[1]) ∧
  better(ATTRIB[2]) ∧
   REF1[3] = me ∧ copula(EVENT[4], ENTITY[1], ATTRIB[2]) ∧ for(EVENT[4]) = REF1[3])

# ::id 235_textbook_TANAKA;006_ID_22174;IE
# ::snt John is as old as my brother .
∃ REF1[3] ATTRIB[1] EVENT[4] ENTITY[2] (
 REF1[3] = my ∧
  is_brother_POS(ENTITY[2], REF1[3]) ∧ is_as_old_as(ATTRIB[1], ENTITY[2]) ∧ copula(EVENT[4], ENTITY[John], ATTRIB[1]))

# ::id 236_textbook_TANAKA;006_ID_146998;IE
# ::snt Equality is guaranteed by the Constitution .
∃ EVENT[3] ENTITY[1] ENTITY[2] (Constitution(ENTITY[2]) ∧ Equality(ENTITY[1]) ∧ guaranteed(EVENT[3], ENTITY[2], ENTITY[1]))

# ::id 237_textbook_TANAKA;006_ID_135291;IE
# ::snt Her mother has gone shopping .
∃ REF1[2] EVENT[4] ENTITY[3] ENTITY[1] (REF1[2] = her ∧ is_mother_POS(ENTITY[1], REF1[2]) ∧ shopping(ENTITY[3]) ∧ has_gone(EVENT[4], ENTITY[1], ENTITY[3]))

# ::id 238_textbook_TANAKA;006_ID_114994;IE
# ::snt I believe that he 'll do fine .
∃ REF2[3] REF1[1] EVENT[2] (
 REF1[1] = i ∧
  REF2[3] = he ∧
   believe(EVENT[2], REF1[1], MD'll(∃ ATTRIB[4] EVENT[5] (fine(ATTRIB[4]) ∧ do(EVENT[5], REF2[3], ATTRIB[4])))))

# ::id 239_textbook_TANAKA;006_ID_142075;IE
# ::snt She was promoted over the heads of her seniors .
∃ REF1[1] REF2[4] EVENT[5] GROUP[3] GROUP[2] (
 REF2[4] = her ∧
  is_seniors_POS(GROUP[3], REF2[4]) ∧
   is_heads_of(GROUP[2], GROUP[3]) ∧
    REF1[1] = she ∧
     past(EVENT[5]) ∧ promoted(EVENT[5], _, REF1[1]) ∧ over(EVENT[5]) = GROUP[2])

# ::id 240_textbook_TANAKA;006_ID_64996;IE
# ::snt It 's very cold now .
∃ ATTRIB[2] REF1[1] EVENT[3] (REF1[1] = it ∧ very_cold(ATTRIB[2]) ∧ TMP_now(EVENT[3]) ∧ copula(EVENT[3], REF1[1], ATTRIB[2]))

# ::id 241_textbook_TANAKA;006_ID_125316;IE
# ::snt He suggested that we should put off our departure .
∃ REF2[3] REF1[1] EVENT[2] (
 REF1[1] = he ∧
  REF2[3] = we ∧
   past(EVENT[2]) ∧
    suggested(EVENT[2], REF1[1],
     MD_should(∃ REF3[5] EVENT[6] ENTITY[4] (REF3[5] = our ∧ is_departure_POS(ENTITY[4], REF3[5]) ∧ put_off(EVENT[6], REF2[3], ENTITY[4])))))

# ::id 242_textbook_TANAKA;006_ID_110547;IE
# ::snt It is evident from his behavior that he lies .
∃ REF2[6] ATTRIB[4] REF1[2] SITUATION[1] EVENT[3] EVENT[7] ENTITY[5] (
 REF1[2] = he ∧
  is_FACT_THAT(SITUATION[1], lies(EVENT[3], REF1[2])) ∧
   REF2[6] = his ∧
    is_behavior_POS(ENTITY[5], REF2[6]) ∧ is_evident_from(ATTRIB[4], ENTITY[5]) ∧ copula(EVENT[7], SITUATION[1], ATTRIB[4]))

# ::id 243_textbook_TANAKA;006_ID_24881;IE
# ::snt They were all ears while the pianist was playing .
∃ REF1[1] ENTITY[3] (
 pianist(ENTITY[3]) ∧
  REF1[1] = they ∧
   ALL GROUP[2] (ears(GROUP[2]),
    ∃ EVENT[4] EVENT[5] (
     past(EVENT[4]) ∧
      past(EVENT[5]) ∧ CRD_while(was_playing(EVENT[4], ENTITY[3]), copula(EVENT[5], REF1[1], GROUP[2])))))

# ::id 244_textbook_TANAKA;006_ID_53279;IE
# ::snt We planted peanuts instead of cotton .
∃ REF1[1] EVENT[4] ENTITY[3] GROUP[2] (
 REF1[1] = we ∧
  peanuts(GROUP[2]) ∧
   cotton(ENTITY[3]) ∧
    past(EVENT[4]) ∧ planted(EVENT[4], REF1[1], GROUP[2]) ∧ instead_of(EVENT[4]) = ENTITY[3])

# ::id 245_textbook_TANAKA;006_ID_17112;IE
# ::snt This list is inclusive of the past members of the group .
∃ ATTRIB[2] ATTRIB[4] EVENT[6] ENTITY[5] GROUP[3] ENTITY[1] (
 list(ENTITY[1]) ∧
  past(ATTRIB[4]) ∧
   group(ENTITY[5]) ∧
    is_members_of(GROUP[3], ENTITY[5]) ∧ is_members_ATTRIBUTE(GROUP[3], ATTRIB[4]) ∧
     is_inclusive_of(ATTRIB[2], GROUP[3]) ∧ copula(EVENT[6], ENTITY[1]) ∧ ATTRIBUTE(EVENT[6]) = ATTRIB[2])

# ::id 246_textbook_TANAKA;006_ID_16579;IE
# ::snt Leave out this word .
∃ ENTITY[1] (word(ENTITY[1]) ∧ IMPERATIVE(∃ EVENT[2] leave_out(EVENT[2], _, ENTITY[1])))

# ::id 247_textbook_TANAKA;006_ID_80548;IE
# ::snt I am proud of never being late for school .
∃ ATTRIB[4] SITUATION[3] ATTRIB[2] REF1[1] EVENT[6] EVENT[8] ENTITY[5] (
 REF1[1] = i ∧
  school(ENTITY[5]) ∧
   is_late_for(ATTRIB[4], ENTITY[5]) ∧
    is_FACT_THAT(SITUATION[3], being(EVENT[6], _, ATTRIB[4])) ∧
     is_proud_of(ATTRIB[2], SITUATION[3]) ∧ TMP_never(EVENT[6]) ∧ copula(EVENT[8], REF1[1], ATTRIB[2]))

# ::id 248_textbook_TANAKA;006_ID_149623;IE
# ::snt The voice of the people is the voice of God .
∃ EVENT[4] GROUP[2] ENTITY[3] ENTITY[1] (
 people(GROUP[2]) ∧
  is_voice_of(ENTITY[1], GROUP[2]) ∧ is_voice_of(ENTITY[3], ENTITY[God]) ∧ copula(EVENT[4], ENTITY[1], ENTITY[3]))

# ::id 249_textbook_TANAKA;006_ID_151105;IE
# ::snt There were a lot of excited fans in the stadium .
∃ ATTRIB[3] EVENT[5] GROUP[2] ENTITY[1] ENTITY[4] (
 stadium(ENTITY[4]) ∧
  excited(ATTRIB[3]) ∧
   is_fans_ATTRIBUTE(GROUP[2], ATTRIB[3]) ∧
    is_lot_of(ENTITY[1], GROUP[2]) ∧
     past(EVENT[5]) ∧ copula(EVENT[5], ENTITY[1]) ∧ in(EVENT[5]) = ENTITY[4])

# ::id 250_textbook_TANAKA;006_ID_5123;IE
# ::snt Are you related him ?
QUEST(∃ REF2[2] REF1[1] EVENT[3] (REF1[1] = you ∧ REF2[2] = him ∧ are_related(EVENT[3], REF1[1], REF2[2])))

# ::id 251_textbook_TANAKA;006_ID_39444;IE
# ::snt New York bristles with towering buildings .
∃ ATTRIB[2] EVENT[3] GROUP[1] (
 towering(ATTRIB[2]) ∧
  is_buildings_ATTRIBUTE(GROUP[1], ATTRIB[2]) ∧ bristles(EVENT[3], ENTITY[New_York]) ∧ with(EVENT[3]) = GROUP[1])

# ::id 252_textbook_TANAKA;006_ID_125885;IE
# ::snt He gave a deep sigh .
∃ ATTRIB[3] REF1[1] EVENT[4] ENTITY[2] (
 REF1[1] = he ∧
  deep(ATTRIB[3]) ∧ is_sigh_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ past(EVENT[4]) ∧ gave(EVENT[4], REF1[1], ENTITY[2]))

# ::id 253_textbook_TANAKA;006_ID_153403;IE
# ::snt The Federal Reserve cut its benchmark discount rate to an 18-year low .
∃ ATTRIB[5] ATTRIB[3] REF1[2] EVENT[6] ENTITY[4] ENTITY[1] (
 REF1[2] = its ∧
  benchmark(ATTRIB[3]) ∧
   is_discount_rate_ATTRIBUTE(ENTITY[1], ATTRIB[3]) ∧ is_discount_rate_POS(ENTITY[1], REF1[2]) ∧
    18-year(ATTRIB[5]) ∧
     is_low_ATTRIBUTE(ENTITY[4], ATTRIB[5]) ∧
      past(EVENT[6]) ∧ cut(EVENT[6], ENTITY[Federal_Reserve], ENTITY[1]) ∧ to(EVENT[6]) = ENTITY[4])

# ::id 254_textbook_TANAKA;006_ID_149751;IE
# ::snt It is difficult to make up for wasted time .
∃ ATTRIB[5] ATTRIB[3] SITUATION[1] EVENT[4] EVENT[6] ENTITY[2] (
 wasted(ATTRIB[3]) ∧
  is_time_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
   is_FACT_THAT(SITUATION[1], make_up(EVENT[4]) ∧ for(EVENT[4]) = ENTITY[2]) ∧
    difficult(ATTRIB[5]) ∧ copula(EVENT[6], SITUATION[1], ATTRIB[5]))

# ::id 255_textbook_TANAKA;006_ID_41701;IE
# ::snt The boat was tied to the shore by a cable .
∃ EVENT[4] ENTITY[3] ENTITY[2] ENTITY[1] (
 boat(ENTITY[1]) ∧
  shore(ENTITY[2]) ∧
   cable(ENTITY[3]) ∧
    past(EVENT[4]) ∧ tied(EVENT[4], ENTITY[3], ENTITY[1]) ∧ to(EVENT[4]) = ENTITY[2])

# ::id 256_textbook_TANAKA;006_ID_7271;IE
# ::snt It 's the first time that anybody said something like that to me .
∃ REF1[1] REF2[8] ATTRIB[3] EVENT[10] EVENT[9] ENTITY[7] ENTITY[2] (
 first(ATTRIB[3]) ∧
  REF2[8] = me ∧
   is_time_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
    is_time_THAT(ENTITY[2],
     ANY ENTITY[4] (body(ENTITY[4]),
      SOME ATTRIB[6] ENTITY[5] ((is_like_comp(ATTRIB[6], ENTITY[7]) ∧ is_thing_ATTRIBUTE(ENTITY[5], ATTRIB[6])),
       said(EVENT[9], ENTITY[4], ENTITY[5]) ∧ to(EVENT[9]) = REF2[8]))) ∧
    past(EVENT[9]) ∧ REF1[1] = it ∧ copula(EVENT[10], REF1[1], ENTITY[2]))

# ::id 257_textbook_TANAKA;006_ID_141290;IE
# ::snt No sooner had she entered her room than she began to cry .
∃ SITUATION[6] SITUATION[11] REF3[9] REF2[7] REF1[3] EVENT[5] EVENT[4] EVENT[10] TIME[1] ENTITY[8] (
 REF1[3] = she ∧
  is_FACT_THAT(SITUATION[6], began(EVENT[4], REF1[3], cry(EVENT[5], REF1[3]))) ∧
   REF2[7] = she ∧
    REF3[9] = her ∧
     is_room_POS(ENTITY[8], REF3[9]) ∧
      is_TMP(SITUATION[6], TIME[1]) ∧
       past(EVENT[4]) ∧
        is_TMP_no_sooner_than(SITUATION[11], TIME[1]) ∧
         past(EVENT[10]) ∧ is_FACT_THAT(SITUATION[11], had_entered(EVENT[10], REF2[7], ENTITY[8])))

# ::id 258_textbook_TANAKA;006_ID_13369;IE
# ::snt I have heard this proverb used .
∃ REF1[1] EVENT[4] EVENT[2] ENTITY[3] (proverb(ENTITY[3]) ∧ REF1[1] = i ∧ have_heard(EVENT[2], REF1[1], used(EVENT[4], _, ENTITY[3])))

# ::id 259_textbook_TANAKA;006_ID_60221;IE
# ::snt You should learn to restrain yourself .
∃ REF1[1] (
 REF1[1] = you ∧
  MD_should(∃ REF2[3] EVENT[4] EVENT[2] (REF2[3] = yourself ∧ learn(EVENT[2], REF1[1], restrain(EVENT[4], REF1[1], REF2[3])))))

# ::id 260_textbook_TANAKA;006_ID_162597;IE
# ::snt He resolutely pushed forward from the start , overwhelming and pushing out his off-balance opponent .
∃ SITUATION[9] SITUATION[10] ATTRIB[6] REF2[5] REF1[1] EVENT[8] EVENT[3] EVENT[7] ENTITY[4] ENTITY[2] (
 start(ENTITY[2]) ∧
  REF1[1] = he ∧
   REF2[5] = his ∧
    off-balance(ATTRIB[6]) ∧
     is_opponent_ATTRIBUTE(ENTITY[4], ATTRIB[6]) ∧ is_opponent_POS(ENTITY[4], REF2[5]) ∧
      ADV_resolutely(SITUATION[10]) ∧
       DIR_forward(SITUATION[9]) ∧
        past(EVENT[8]) ∧
         is_FACT_THAT(SITUATION[10],
          is_FACT_THAT(SITUATION[9],
           CONJ_and(pushed(EVENT[8], REF1[1]) ∧ from(EVENT[8]) = ENTITY[2],
            CONJ_and(overwhelming(EVENT[3], REF1[1]), pushing_out(EVENT[7], REF1[1], ENTITY[4]))))))

# ::id 261_textbook_TANAKA;006_ID_72437;IE
# ::snt We 're close friends .
∃ ATTRIB[3] REF1[1] EVENT[4] GROUP[2] (REF1[1] = we ∧ close(ATTRIB[3]) ∧ is_friends_ATTRIBUTE(GROUP[2], ATTRIB[3]) ∧ copula(EVENT[4], REF1[1], GROUP[2]))

# ::id 262_textbook_TANAKA;006_ID_78704;IE
# ::snt I was waiting for a taxi .
∃ REF1[1] EVENT[3] ENTITY[2] (
 REF1[1] = i ∧
  taxi(ENTITY[2]) ∧ past(EVENT[3]) ∧ was_waiting(EVENT[3], REF1[1]) ∧ for(EVENT[3]) = ENTITY[2])

# ::id 263_textbook_TANAKA;006_ID_98808;IE
# ::snt Mutual understanding promotes peace .
∃ ATTRIB[2] EVENT[4] ENTITY[3] ENTITY[1] (mutual(ATTRIB[2]) ∧ is_understanding_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧ peace(ENTITY[3]) ∧ promotes(EVENT[4], ENTITY[1], ENTITY[3]))

# ::id 264_textbook_TANAKA;006_ID_34933;IE
# ::snt Cheese cuts easily with a knife .
∃ EVENT[3] ENTITY[2] ENTITY[1] (
 Cheese(ENTITY[1]) ∧
  knife(ENTITY[2]) ∧ ADV_easily(EVENT[3]) ∧ cuts(EVENT[3], ENTITY[1]) ∧ with(EVENT[3]) = ENTITY[2])

# ::id 265_textbook_TANAKA;006_ID_140415;IE
# ::snt She left the office immediately after work .
∃ REF1[1] EVENT[4] ENTITY[3] ENTITY[2] (
 office(ENTITY[2]) ∧
  REF1[1] = she ∧
   work(ENTITY[3]) ∧
    is_ADV_immediately_after(EVENT[4], ENTITY[3]) ∧ past(EVENT[4]) ∧ left(EVENT[4], REF1[1], ENTITY[2]))

# ::id 266_textbook_TANAKA;006_ID_105128;IE
# ::snt Overwork cost her health .
∃ REF1[3] EVENT[4] ENTITY[2] ENTITY[1] (
 Overwork(ENTITY[1]) ∧
  REF1[3] = her ∧ is_health_POS(ENTITY[2], REF1[3]) ∧ past(EVENT[4]) ∧ cost(EVENT[4], ENTITY[1], ENTITY[2]))

# ::id 267_textbook_TANAKA;006_ID_120149;IE
# ::snt He is keen on science .
∃ ATTRIB[2] REF1[1] EVENT[4] ENTITY[3] (REF1[1] = he ∧ science(ENTITY[3]) ∧ is_keen_on(ATTRIB[2], ENTITY[3]) ∧ copula(EVENT[4], REF1[1], ATTRIB[2]))

# ::id 268_textbook_TANAKA;006_ID_152534;IE
# ::snt I want to study abroad .
∃ REF1[1] EVENT[3] EVENT[2] (REF1[1] = i ∧ LOC_abroad(EVENT[3]) ∧ want(EVENT[2], REF1[1], study(EVENT[3], REF1[1])))

# ::id 269_textbook_TANAKA;006_ID_48708;IE
# ::snt The spaceship is out of orbit around the moon .
∃ EVENT[4] ENTITY[2] ENTITY[3] ENTITY[1] (
 spaceship(ENTITY[1]) ∧
  moon(ENTITY[3]) ∧
   is_orbit_around(ENTITY[2], ENTITY[3]) ∧ copula(EVENT[4], ENTITY[1]) ∧ out_of(EVENT[4]) = ENTITY[2])

# ::id 270_textbook_TANAKA;006_ID_115452;IE
# ::snt He had various experiences .
∃ ATTRIB[3] REF1[1] EVENT[4] GROUP[2] (
 REF1[1] = he ∧
  various(ATTRIB[3]) ∧ is_experiences_ATTRIBUTE(GROUP[2], ATTRIB[3]) ∧ past(EVENT[4]) ∧ had(EVENT[4], REF1[1], GROUP[2]))

# ::id 271_textbook_TANAKA;006_ID_74513;IE
# ::snt My first guess was wide of the mark .
∃ ATTRIB[4] ATTRIB[3] REF1[2] EVENT[6] ENTITY[1] ENTITY[5] (
 mark(ENTITY[5]) ∧
  REF1[2] = my ∧
   first(ATTRIB[3]) ∧
    is_guess_ATTRIBUTE(ENTITY[1], ATTRIB[3]) ∧ is_guess_POS(ENTITY[1], REF1[2]) ∧
     is_wide_of(ATTRIB[4], ENTITY[5]) ∧ past(EVENT[6]) ∧ copula(EVENT[6], ENTITY[1], ATTRIB[4]))

# ::id 272_textbook_TANAKA;006_ID_86513;IE
# ::snt I experienced a feeling of antipathy towards the speaker .
∃ REF1[1] EVENT[5] ENTITY[3] ENTITY[2] ENTITY[4] (
 speaker(ENTITY[4]) ∧
  REF1[1] = i ∧
   is_antipathy_towards(ENTITY[3], ENTITY[4]) ∧
    is_feeling_of(ENTITY[2], ENTITY[3]) ∧ past(EVENT[5]) ∧ experienced(EVENT[5], REF1[1], ENTITY[2]))

# ::id 273_textbook_TANAKA;006_ID_26145;IE
# ::snt The ceremony is to turn away evil spirits .
∃ ATTRIB[4] EVENT[5] EVENT[2] GROUP[3] ENTITY[1] (
 ceremony(ENTITY[1]) ∧
  evil(ATTRIB[4]) ∧
   is_spirits_ATTRIBUTE(GROUP[3], ATTRIB[4]) ∧
    DIR_away(EVENT[5]) ∧ copula(EVENT[2], ENTITY[1], turn(EVENT[5], ENTITY[1], GROUP[3])))

# ::id 274_textbook_TANAKA;006_ID_139391;IE
# ::snt She warmed herself by the fire .
∃ REF2[2] REF1[1] EVENT[4] ENTITY[3] (
 fire(ENTITY[3]) ∧
  REF1[1] = she ∧
   REF2[2] = herself ∧
    past(EVENT[4]) ∧ warmed(EVENT[4], REF1[1], REF2[2]) ∧ by(EVENT[4]) = ENTITY[3])

# ::id 275_textbook_TANAKA;006_ID_11671;IE
# ::snt Kate 's father is about the house .
∃ EVENT[3] ENTITY[1] ENTITY[2] (
 house(ENTITY[2]) ∧
  is_father_POS(ENTITY[1], ENTITY[Kate]) ∧ copula(EVENT[3], ENTITY[1]) ∧ about(EVENT[3]) = ENTITY[2])

# ::id 276_textbook_TANAKA;006_ID_23187;IE
# ::snt Sports are the nurse of friendship .
∃ EVENT[4] GROUP[1] ENTITY[3] ENTITY[2] (friendship(ENTITY[3]) ∧ is_nurse_of(ENTITY[2], ENTITY[3]) ∧ Sports(GROUP[1]) ∧ copula(EVENT[4], GROUP[1], ENTITY[2]))

# ::id 277_textbook_TANAKA;006_ID_44388;IE
# ::snt There 's no turning back .
¬ ∃ EVENT[2] ENTITY[1] (ADV_back(ENTITY[1]) ∧ turning(ENTITY[1]) ∧ copula(EVENT[2], ENTITY[1]))

# ::id 278_textbook_TANAKA;006_ID_103619;IE
# ::snt The drowning man shouted for help .
∃ ATTRIB[2] EVENT[4] ENTITY[3] ENTITY[1] (
 drowning(ATTRIB[2]) ∧
  is_man_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧
   help(ENTITY[3]) ∧ past(EVENT[4]) ∧ shouted(EVENT[4], ENTITY[1]) ∧ for(EVENT[4]) = ENTITY[3])

# ::id 279_textbook_TANAKA;006_ID_151663;IE
# ::snt It seems that supper will be late .
∃ EVENT[1] ENTITY[2] (
 supper(ENTITY[2]) ∧
  seems(EVENT[1], MD_will(∃ ATTRIB[3] EVENT[4] (late(ATTRIB[3]) ∧ copula(EVENT[4], ENTITY[2], ATTRIB[3])))))

# ::id 280_textbook_TANAKA;006_ID_93114;IE
# ::snt You must not eat too much .
∃ REF1[1] (REF1[1] = you ∧ MD_must(¬ TOO_MUCH DEGREE[2] ∃ EVENT[3] (eat(EVENT[3], REF1[1]) ∧ MSR(EVENT[3]) = DEGREE[2])))

# ::id 281_textbook_TANAKA;006_ID_150986;IE
# ::snt Toward midnight I fell asleep .
∃ REF1[2] EVENT[4] ENTITY[3] ENTITY[1] (
 midnight(ENTITY[1]) ∧
  REF1[2] = i ∧
   sleep(ENTITY[3]) ∧
    past(EVENT[4]) ∧
     fell(EVENT[4], REF1[2]) ∧ a(EVENT[4]) = ENTITY[3] ∧ Toward(EVENT[4]) = ENTITY[1])

# ::id 282_textbook_TANAKA;006_ID_45006;IE
# ::snt I will help you , of course .
∃ REF1[1] (
 REF1[1] = i ∧
  MD_will(∃ REF2[2] EVENT[4] ENTITY[3] (
        REF2[2] = you ∧
         course(ENTITY[3]) ∧ help(EVENT[4], REF1[1], REF2[2]) ∧ of(EVENT[4]) = ENTITY[3])))

# ::id 283_textbook_TANAKA;006_ID_60946;IE
# ::snt The manager controls his men at will .
∃ REF1[3] EVENT[5] ENTITY[4] GROUP[2] ENTITY[1] (
 manager(ENTITY[1]) ∧
  REF1[3] = his ∧
   is_men_POS(GROUP[2], REF1[3]) ∧
    will(ENTITY[4]) ∧ controls(EVENT[5], ENTITY[1], GROUP[2]) ∧ at(EVENT[5]) = ENTITY[4])

# ::id 284_textbook_TANAKA;006_ID_23878;IE
# ::snt I made up my mind to go there .
∃ PRP[4] REF2[3] REF1[1] EVENT[5] EVENT[7] ENTITY[2] (
 REF1[1] = i ∧
  REF2[3] = my ∧
   is_mind_POS(ENTITY[2], REF2[3]) ∧
    is_FACT_THAT(PRP[4], go(EVENT[5], ENTITY[2])) ∧
     LOC_there(EVENT[5]) ∧
      past(EVENT[7]) ∧ made_up(EVENT[7], REF1[1], ENTITY[2]) ∧ PRP(EVENT[7]) = PRP[4])

# ::id 285_textbook_TANAKA;006_ID_93255;IE
# ::snt Where 's the dinning car ?
∃ ENTITY[2] (dinning_car(ENTITY[2]) ∧ QUEST(∃ EVENT[3] ? LOC[1] (is_LOC(EVENT[3], LOC[1]) ∧ copula(EVENT[3], ENTITY[2]))))

# ::id 286_textbook_TANAKA;006_ID_134506;IE
# ::snt I feel sorry for her .
∃ REF2[3] ATTRIB[2] REF1[1] EVENT[4] (REF1[1] = i ∧ REF2[3] = her ∧ is_sorry_for(ATTRIB[2], REF2[3]) ∧ feel(EVENT[4], REF1[1], ATTRIB[2]))

# ::id 287_textbook_TANAKA;006_ID_151669;IE
# ::snt Shall I cook dinner for you ?
QUEST(MD_shall(∃ REF2[3] REF1[1] EVENT[4] ENTITY[2] (
           REF1[1] = i ∧
            dinner(ENTITY[2]) ∧
             REF2[3] = you ∧
              cook(EVENT[4], REF1[1], ENTITY[2]) ∧ for(EVENT[4]) = REF2[3])))

# ::id 288_textbook_TANAKA;006_ID_135310;IE
# ::snt Do n't let yourself be troubled by the thought of her .
∃ REF2[4] ENTITY[3] (
 REF2[4] = her ∧
  is_thought_of(ENTITY[3], REF2[4]) ∧
   IMPERATIVE(¬ ∃ REF1[2] EVENT[5] EVENT[1] (
              REF1[2] = yourself ∧
               do_let(EVENT[1], be_troubled(EVENT[5], REF1[2]) ∧ by(EVENT[5]) = ENTITY[3]))))

# ::id 289_textbook_TANAKA;006_ID_108235;IE
# ::snt It is impossible for him to give up smoking .
∃ ATTRIB[5] REF1[2] SITUATION[1] EVENT[4] EVENT[6] ENTITY[3] (
 REF1[2] = him ∧
  smoking(ENTITY[3]) ∧
   is_FACT_THAT(SITUATION[1], give_up(EVENT[4], REF1[2], ENTITY[3])) ∧
    impossible(ATTRIB[5]) ∧ copula(EVENT[6], SITUATION[1], ATTRIB[5]))

# ::id 290_textbook_TANAKA;006_ID_47106;IE
# ::snt The plane was delayed on account of bad weather .
∃ ATTRIB[4] EVENT[5] ENTITY[3] ENTITY[2] ENTITY[1] (
 plane(ENTITY[1]) ∧
  bad(ATTRIB[4]) ∧
   is_weather_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
    is_account_of(ENTITY[2], ENTITY[3]) ∧
     past(EVENT[5]) ∧ delayed(EVENT[5], _, ENTITY[1]) ∧ on(EVENT[5]) = ENTITY[2])

# ::id 291_textbook_TANAKA;006_ID_117312;IE
# ::snt He was face to face with his enemy at last .
∃ ATTRIB[6] REF2[5] REF1[1] EVENT[7] ENTITY[3] ENTITY[4] ENTITY[2] (
 REF1[1] = he ∧
  face(ENTITY[3]) ∧
   is_face_to(ENTITY[2], ENTITY[3]) ∧
    REF2[5] = his ∧
     is_enemy_POS(ENTITY[4], REF2[5]) ∧
      ADV_last(ATTRIB[6]) ∧
       past(EVENT[7]) ∧
        copula(EVENT[7], REF1[1]) ∧ at(EVENT[7]) = ATTRIB[6] ∧ with(EVENT[7]) = ENTITY[4] ∧
         ADV(EVENT[7]) = ENTITY[2])

# ::id 292_textbook_TANAKA;006_ID_32119;IE
# ::snt Well , what happened to her ?
QUEST(∃ REF1[2] EVENT[3] ? ENTITY[1] (
      REF1[2] = her ∧
       past(EVENT[3]) ∧ happened(EVENT[3], ENTITY[1]) ∧ to(EVENT[3]) = REF1[2]))

# ::id 293_textbook_TANAKA;006_ID_59849;IE
# ::snt You must go to bed now .
∃ REF1[1] (
 REF1[1] = you ∧
  MD_must(∃ EVENT[3] ENTITY[2] (
        bed(ENTITY[2]) ∧
         TMP_now(EVENT[3]) ∧ go(EVENT[3], REF1[1]) ∧ to(EVENT[3]) = ENTITY[2])))

# ::id 294_textbook_TANAKA;006_ID_133879;IE
# ::snt They were robbed of all their money .
∃ REF1[1] (
 REF1[1] = they ∧
  ALL REF2[3] ENTITY[2] ((REF2[3] = their ∧ is_money_POS(ENTITY[2], REF2[3])), ∃ EVENT[4] (past(EVENT[4]) ∧ robbed(EVENT[4], _, REF1[1]) ∧ of(EVENT[4]) = ENTITY[2])))

# ::id 295_textbook_TANAKA;006_ID_76658;IE
# ::snt I bought a red sweater at that shop .
∃ ATTRIB[3] REF1[1] EVENT[5] ENTITY[2] ENTITY[4] (
 shop(ENTITY[4]) ∧
  REF1[1] = i ∧
   red(ATTRIB[3]) ∧
    is_sweater_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
     past(EVENT[5]) ∧ bought(EVENT[5], REF1[1], ENTITY[2]) ∧ at(EVENT[5]) = ENTITY[4])

# ::id 296_textbook_TANAKA;006_ID_162593;IE
# ::snt Men love amorous women .
∃ ATTRIB[3] EVENT[4] GROUP[2] GROUP[1] (Men(GROUP[1]) ∧ amorous(ATTRIB[3]) ∧ is_women_ATTRIBUTE(GROUP[2], ATTRIB[3]) ∧ love(EVENT[4], GROUP[1], GROUP[2]))

# ::id 297_textbook_TANAKA;006_ID_28578;IE
# ::snt The boy thrust the coin into his pocket .
∃ REF1[4] EVENT[5] ENTITY[3] ENTITY[2] ENTITY[1] (
 boy(ENTITY[1]) ∧
  coin(ENTITY[2]) ∧
   REF1[4] = his ∧
    is_pocket_POS(ENTITY[3], REF1[4]) ∧
     past(EVENT[5]) ∧ thrust(EVENT[5], ENTITY[1], ENTITY[2]) ∧ into(EVENT[5]) = ENTITY[3])

# ::id 298_textbook_TANAKA;006_ID_105532;IE
# ::snt The dictator forced the tribe to agree on the terms of surrender .
∃ EVENT[6] EVENT[2] ENTITY[5] GROUP[4] ENTITY[3] ENTITY[1] (
 dictator(ENTITY[1]) ∧
  tribe(ENTITY[3]) ∧
   surrender(ENTITY[5]) ∧
    is_terms_of(GROUP[4], ENTITY[5]) ∧
     past(EVENT[2]) ∧
      forced(EVENT[2], ENTITY[1], agree(EVENT[6], ENTITY[3]) ∧ on(EVENT[6]) = GROUP[4]))

# ::id 299_textbook_TANAKA;006_ID_76915;IE
# ::snt I went down by elevator .
∃ REF1[1] EVENT[3] ENTITY[2] (
 REF1[1] = i ∧
  elevator(ENTITY[2]) ∧ past(EVENT[3]) ∧ went_down(EVENT[3], REF1[1]) ∧ by(EVENT[3]) = ENTITY[2])

# ::id 300_textbook_TANAKA;006_ID_126223;IE
# ::snt He made superhuman efforts to maintain world peace .
∃ ATTRIB[3] REF1[1] EVENT[5] EVENT[6] ENTITY[4] GROUP[2] (
 REF1[1] = he ∧
  superhuman(ATTRIB[3]) ∧
   world_peace(ENTITY[4]) ∧
    is_efforts_ATTRIBUTE(GROUP[2], ATTRIB[3]) ∧ is_efforts_to(GROUP[2], maintain(EVENT[5], _, ENTITY[4])) ∧
     past(EVENT[6]) ∧ made(EVENT[6], REF1[1], GROUP[2]))

# ::id 301_textbook_TANAKA;006_ID_69883;IE
# ::snt Is there any need for me to go there ?
QUEST(ANY REF1[2] EVENT[3] ENTITY[1] ((REF1[2] = me ∧ is_need_to(ENTITY[1], go(EVENT[3], REF1[2])) ∧ LOC_there(EVENT[3])), ∃ EVENT[5] copula(EVENT[5], ENTITY[1])))

# ::id 302_textbook_TANAKA;006_ID_145942;IE
# ::snt Father never goes out with an umbrella without leaving it somewhere .
∃ SITUATION[7] REF1[3] SITUATION[2] EVENT[4] EVENT[6] ENTITY[1] (
 umbrella(ENTITY[1]) ∧
  REF1[3] = it ∧
   is_FACT_THAT(SITUATION[2], leaving(EVENT[4], ENTITY[Father], REF1[3])) ∧
    TMP_never(SITUATION[7]) ∧
     LOC_somewhere(EVENT[4]) ∧
      is_FACT_THAT(SITUATION[7],
       goes_out(EVENT[6], ENTITY[Father]) ∧ without(EVENT[6]) = SITUATION[2] ∧ with(EVENT[6]) = ENTITY[1]))

# ::id 303_textbook_TANAKA;006_ID_65229;IE
# ::snt You are to finish this work by the end of this month .
∃ REF1[1] EVENT[6] EVENT[2] ENTITY[5] ENTITY[4] ENTITY[3] (
 work(ENTITY[3]) ∧
  month(ENTITY[5]) ∧
   is_end_of(ENTITY[4], ENTITY[5]) ∧
    REF1[1] = you ∧
     copula(EVENT[2], REF1[1], finish(EVENT[6], REF1[1], ENTITY[3]) ∧ by(EVENT[6]) = ENTITY[4]))

# ::id 304_textbook_TANAKA;006_ID_152086;IE
# ::snt She is going to have kittens next month .
∃ ATTRIB[5] REF1[1] EVENT[6] EVENT[2] TIME[4] GROUP[3] (
 REF1[1] = she ∧
  kittens(GROUP[3]) ∧
   next(ATTRIB[5]) ∧
    is_month_ATTRIBUTE(TIME[4], ATTRIB[5]) ∧
     is_going(EVENT[2], REF1[1], have(EVENT[6], REF1[1], GROUP[3]) ∧ is_contained_in(TMP(EVENT[6]), TIME[4])))

# ::id 305_textbook_TANAKA;006_ID_134734;IE
# ::snt When she came inside , we had finished eating dinner .
∃ SITUATION[5] REF2[4] REF1[1] EVENT[2] EVENT[7] EVENT[8] ENTITY[6] (
 REF1[1] = she ∧
  REF2[4] = we ∧
   dinner(ENTITY[6]) ∧
    is_FACT_THAT(SITUATION[5], eating(EVENT[7], REF2[4], ENTITY[6])) ∧
     LOC_inside(EVENT[2]) ∧
      past(EVENT[2]) ∧
       past(EVENT[8]) ∧ CRD_When(came(EVENT[2], REF1[1]), had_finished(EVENT[8], REF2[4], SITUATION[5])))

# ::id 306_textbook_TANAKA;006_ID_26191;IE
# ::snt The fisherman cast their nets into the sea .
∃ REF1[3] EVENT[5] GROUP[2] ENTITY[4] ENTITY[1] (
 fisherman(ENTITY[1]) ∧
  sea(ENTITY[4]) ∧
   REF1[3] = their ∧
    is_nets_POS(GROUP[2], REF1[3]) ∧
     past(EVENT[5]) ∧ cast(EVENT[5], ENTITY[1], GROUP[2]) ∧ into(EVENT[5]) = ENTITY[4])

# ::id 307_textbook_TANAKA;006_ID_10363;IE
# ::snt Is your mother at home ?
QUEST(∃ REF1[2] EVENT[4] ENTITY[3] ENTITY[1] (
      REF1[2] = your ∧
       is_mother_POS(ENTITY[1], REF1[2]) ∧
        home(ENTITY[3]) ∧ copula(EVENT[4], ENTITY[1]) ∧ at(EVENT[4]) = ENTITY[3]))

# ::id 308_textbook_TANAKA;006_ID_19914;IE
# ::snt With it raining like this , we 'll never be able to leave !
∃ REF1[6] ATTRIB[2] SITUATION[1] EVENT[5] EVENT[4] ENTITY[3] (
 is_like_comp(ATTRIB[2], ENTITY[3]) ∧
  is_FACT_THAT(SITUATION[1], CONJ_and(raining(EVENT[5]), xxx(EVENT[4], _, ATTRIB[2]))) ∧
   REF1[6] = we ∧
    MD'll(∃ SITUATION[10] ATTRIB[7] EVENT[8] EVENT[9] (
          is_able_to(ATTRIB[7], leave(EVENT[8])) ∧
           TMP_never(SITUATION[10]) ∧
            is_FACT_THAT(SITUATION[10], copula(EVENT[9], REF1[6], ATTRIB[7]) ∧ With(EVENT[9]) = SITUATION[1]))))

# ::id 309_textbook_TANAKA;006_ID_67605;IE
# ::snt The workers are wiring the new house .
∃ ATTRIB[3] EVENT[4] ENTITY[2] GROUP[1] (workers(GROUP[1]) ∧ new(ATTRIB[3]) ∧ is_house_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ are_wiring(EVENT[4], GROUP[1], ENTITY[2]))

# ::id 310_textbook_TANAKA;006_ID_89405;IE
# ::snt As a matter of fact , he knows very little of the matter .
∃ REF1[3] ENTITY[2] ENTITY[1] ENTITY[5] (
 matter(ENTITY[5]) ∧
  fact(ENTITY[2]) ∧
   is_matter_of(ENTITY[1], ENTITY[2]) ∧
    REF1[3] = he ∧
     VERY_LITTLE ENTITY[4] (is_of(ENTITY[4], ENTITY[5]), ∃ EVENT[6] (knows(EVENT[6], REF1[3], ENTITY[4]) ∧ As(EVENT[6]) = ENTITY[1])))

# ::id 311_textbook_TANAKA;006_ID_162589;IE
# ::snt The rise and fall of prices caused a financial crisis .
∃ ATTRIB[7] EVENT[8] ENTITY[6] ENTITY[3] ENTITY[4] GROUP[5] GROUP[2] ENTITY[1] (
 rise(ENTITY[3]) ∧
  fall(ENTITY[4]) ∧
   is_element_of(ENTITY[3], GROUP[2]) ∧ is_element_of(ENTITY[4], GROUP[2]) ∧
    prices(GROUP[5]) ∧
     is_element_of(ENTITY[1], GROUP[5]) ∧ is_equals(ENTITY[1], GROUP[2]) ∧
      financial(ATTRIB[7]) ∧
       is_crisis_ATTRIBUTE(ENTITY[6], ATTRIB[7]) ∧ past(EVENT[8]) ∧ caused(EVENT[8], ENTITY[1], ENTITY[6]))

# ::id 312_textbook_TANAKA;006_ID_62308;IE
# ::snt What are the basic rules for keeping a dog ?
∃ SITUATION[4] ATTRIB[3] EVENT[6] ENTITY[5] GROUP[2] (
 basic(ATTRIB[3]) ∧
  dog(ENTITY[5]) ∧
   is_FACT_THAT(SITUATION[4], keeping(EVENT[6], _, ENTITY[5])) ∧
    is_rules_for(GROUP[2], SITUATION[4]) ∧ is_rules_ATTRIBUTE(GROUP[2], ATTRIB[3]) ∧ QUEST(∃ EVENT[7] ? ENTITY[1] copula(EVENT[7], ENTITY[1], GROUP[2])))

# ::id 313_textbook_TANAKA;006_ID_21776;IE
# ::snt George put a chain on the dog .
∃ EVENT[3] ENTITY[1] ENTITY[2] (
 dog(ENTITY[2]) ∧
  chain(ENTITY[1]) ∧
   past(EVENT[3]) ∧ put(EVENT[3], ENTITY[George], ENTITY[1]) ∧ on(EVENT[3]) = ENTITY[2])

# ::id 314_textbook_TANAKA;006_ID_38110;IE
# ::snt Tom is still in hospital .
∃ EVENT[2] ENTITY[1] (hospital(ENTITY[1]) ∧ TMP_still(EVENT[2]) ∧ copula(EVENT[2], ENTITY[Tom]) ∧ in(EVENT[2]) = ENTITY[1])

# ::id 315_textbook_TANAKA;006_ID_83493;IE
# ::snt I showered before breakfast .
∃ REF1[1] EVENT[3] ENTITY[2] (
 REF1[1] = i ∧
  breakfast(ENTITY[2]) ∧ past(EVENT[3]) ∧ showered(EVENT[3], REF1[1]) ∧ before(EVENT[3]) = ENTITY[2])

# ::id 316_textbook_TANAKA;006_ID_73482;IE
# ::snt I have a lot of things that I must deal with .
∃ REF2[5] REF1[1] EVENT[7] GROUP[3] ENTITY[2] (
 REF1[1] = i ∧
  REF2[5] = i ∧
   MD_must(∃ EVENT[6] (deal(EVENT[6], REF2[5]) ∧ with(EVENT[6]) = GROUP[3])) ∧ things(GROUP[3]) ∧
    is_lot_of(ENTITY[2], GROUP[3]) ∧ have(EVENT[7], REF1[1], ENTITY[2]))

# ::id 317_textbook_TANAKA;006_ID_28336;IE
# ::snt The girl noticed someone go out of the door .
∃ EVENT[2] ENTITY[4] ENTITY[1] (
 girl(ENTITY[1]) ∧
  door(ENTITY[4]) ∧
   past(EVENT[2]) ∧
    noticed(EVENT[2], ENTITY[1],
     SOME ENTITY[3] (one(ENTITY[3]), ∃ EVENT[5] (go(EVENT[5], ENTITY[3]) ∧ out_of(EVENT[5]) = ENTITY[4]))))

# ::id 318_textbook_TANAKA;006_ID_49489;IE
# ::snt You like English , do n't you ?
∃ REF1[1] EVENT[2] (REF1[1] = you ∧ like(EVENT[2], REF1[1], ENTITY[English]))

# ::id 319_textbook_TANAKA;006_ID_71450;IE
# ::snt We saw Jane swimming across the river .
∃ SITUATION[2] REF1[1] EVENT[4] EVENT[5] ENTITY[3] (
 river(ENTITY[3]) ∧
  REF1[1] = we ∧
   is_FACT_THAT(SITUATION[2], swimming(EVENT[4], ENTITY[Jane]) ∧ across(EVENT[4]) = ENTITY[3]) ∧
    past(EVENT[5]) ∧ saw(EVENT[5], REF1[1], SITUATION[2]))

# ::id 320_textbook_TANAKA;006_ID_139523;IE
# ::snt She has a love of leaning .
∃ REF1[1] EVENT[4] ENTITY[3] ENTITY[2] (REF1[1] = she ∧ leaning(ENTITY[3]) ∧ is_love_of(ENTITY[2], ENTITY[3]) ∧ has(EVENT[4], REF1[1], ENTITY[2]))

# ::id 321_textbook_TANAKA;006_ID_28687;IE
# ::snt The boy tried eating with chopsticks .
∃ SITUATION[2] EVENT[4] EVENT[5] GROUP[3] ENTITY[1] (
 boy(ENTITY[1]) ∧
  chopsticks(GROUP[3]) ∧
   is_FACT_THAT(SITUATION[2], eating(EVENT[4], ENTITY[1]) ∧ with(EVENT[4]) = GROUP[3]) ∧
    past(EVENT[5]) ∧ tried(EVENT[5], ENTITY[1], SITUATION[2]))

# ::id 322_textbook_TANAKA;006_ID_111459;IE
# ::snt To what extent can you answer for his deed ?
QUEST(? ENTITY[1] (
      extent(ENTITY[1]) ∧
       MD_can(∃ REF2[4] REF1[2] EVENT[5] ENTITY[3] (
             REF1[2] = you ∧
              REF2[4] = his ∧
               is_deed_POS(ENTITY[3], REF2[4]) ∧
                answer(EVENT[5], REF1[2]) ∧ for(EVENT[5]) = ENTITY[3] ∧
                 To(EVENT[5]) = ENTITY[1]))))

# ::id 323_textbook_TANAKA;006_ID_67319;IE
# ::snt At first everybody was convinced of his innocence .
∃ ATTRIB[1] (
 first(ATTRIB[1]) ∧
  ∀ ENTITY[2] (body(ENTITY[2]) →
   ∃ REF1[4] EVENT[5] ENTITY[3] (
    REF1[4] = his ∧
     is_innocence_POS(ENTITY[3], REF1[4]) ∧
      past(EVENT[5]) ∧
       was_convinced(EVENT[5], ENTITY[2]) ∧ of(EVENT[5]) = ENTITY[3] ∧ At(EVENT[5]) = ATTRIB[1])))

# ::id 324_textbook_TANAKA;006_ID_115292;IE
# ::snt He explained this passage in detail .
∃ REF1[1] EVENT[4] ENTITY[3] ENTITY[2] (
 passage(ENTITY[2]) ∧
  REF1[1] = he ∧
   detail(ENTITY[3]) ∧
    past(EVENT[4]) ∧ explained(EVENT[4], REF1[1], ENTITY[2]) ∧ in(EVENT[4]) = ENTITY[3])

# ::id 325_textbook_TANAKA;006_ID_41148;IE
# ::snt Miss Brown is used to eating Japanese food now .
∃ ATTRIB[3] SITUATION[1] EVENT[4] EVENT[6] ENTITY[2] (
 japanese(ATTRIB[3]) ∧
  is_food_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
   is_FACT_THAT(SITUATION[1], eating(EVENT[4], ENTITY[Miss_Brown], ENTITY[2])) ∧
    TMP_now(EVENT[4]) ∧ is_used(EVENT[6], ENTITY[Miss_Brown]) ∧ to(EVENT[6]) = SITUATION[1])

# ::id 326_textbook_TANAKA;006_ID_40945;IE
# ::snt Bill is on the editorial staff .
∃ ATTRIB[3] EVENT[4] ENTITY[1] ENTITY[2] (
 editorial(ATTRIB[3]) ∧
  is_staff_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
   Bill(ENTITY[1]) ∧ copula(EVENT[4], ENTITY[1]) ∧ on(EVENT[4]) = ENTITY[2])

# ::id 327_textbook_TANAKA;006_ID_128878;IE
# ::snt He was the agent of her despair .
∃ REF1[1] REF2[4] EVENT[5] ENTITY[3] ENTITY[2] (
 REF2[4] = her ∧
  is_despair_POS(ENTITY[3], REF2[4]) ∧
   is_agent_of(ENTITY[2], ENTITY[3]) ∧
    REF1[1] = he ∧ past(EVENT[5]) ∧ copula(EVENT[5], REF1[1], ENTITY[2]))

# ::id 328_textbook_TANAKA;006_ID_91458;IE
# ::snt Crashes in the early days of commercial jets tended to be caused by technical faults , such as metal fatigue in the airframe or engines .
∃ ATTRIB[9] ATTRIB[8] ATTRIB[5] ATTRIB[3] EVENT[15] EVENT[6] ENTITY[10] GROUP[7] GROUP[1] GROUP[4] GROUP[2] ENTITY[13] GROUP[14] GROUP[12] ENTITY[11] (
 early(ATTRIB[3]) ∧
  commercial(ATTRIB[5]) ∧
   is_jets_ATTRIBUTE(GROUP[4], ATTRIB[5]) ∧
    is_days_of(GROUP[2], GROUP[4]) ∧ is_days_ATTRIBUTE(GROUP[2], ATTRIB[3]) ∧
     airframe(ENTITY[13]) ∧
      engines(GROUP[14]) ∧
       CONJ_or(is_element_of(ENTITY[13], GROUP[12]), is_subset_of_or_equal_to(GROUP[14], GROUP[12])) ∧
        is_equals(ENTITY[11], GROUP[12]) ∧
         is_Crashes_in(GROUP[1], GROUP[2]) ∧
          technical(ATTRIB[8]) ∧
           is_metal_fatigue_in(ENTITY[10], ENTITY[11]) ∧
            is_such_as(ATTRIB[9], ENTITY[10]) ∧
             is_faults_ATTRIBUTE(GROUP[7], ATTRIB[9]) ∧ is_faults_ATTRIBUTE(GROUP[7], ATTRIB[8]) ∧
              past(EVENT[6]) ∧ tended(EVENT[6], GROUP[1], caused(EVENT[15], GROUP[7], GROUP[1])))

# ::id 329_textbook_TANAKA;006_ID_152125;IE
# ::snt I 'd like to see you again next week .
∃ REF1[1] (
 REF1[1] = i ∧
  MD'd(∃ ATTRIB[5] REF2[3] EVENT[6] EVENT[2] TIME[4] (
        REF2[3] = you ∧
         next(ATTRIB[5]) ∧
          is_week_ATTRIBUTE(TIME[4], ATTRIB[5]) ∧
           TMP_again(EVENT[6]) ∧
            like(EVENT[2], REF1[1],
             see(EVENT[6], REF1[1], REF2[3]) ∧ is_contained_in(TMP(EVENT[6]), TIME[4])))))

# ::id 330_textbook_TANAKA;006_ID_81229;IE
# ::snt I spent the afternoon painting a picture .
∃ REF1[1] EVENT[5] EVENT[4] ENTITY[3] TIME[2] (
 afternoon(TIME[2]) ∧
  REF1[1] = i ∧
   picture(ENTITY[3]) ∧
    past(EVENT[5]) ∧
     CONJ_and(spent(EVENT[5], REF1[1]) ∧ is_contained_in(TMP(EVENT[5]), TIME[2]),
      painting(EVENT[4], REF1[1], ENTITY[3])))

# ::id 331_textbook_TANAKA;006_ID_15749;IE
# ::snt I never see this picture without thinking of my father .
∃ SITUATION[7] REF2[4] REF1[1] EVENT[5] EVENT[6] ENTITY[3] ENTITY[2] (
 picture(ENTITY[2]) ∧
  REF1[1] = i ∧
   REF2[4] = my ∧
    is_father_POS(ENTITY[3], REF2[4]) ∧
     TMP_never(SITUATION[7]) ∧
      is_FACT_THAT(SITUATION[7],
       CRD_without(thinking(EVENT[5], ENTITY[2]) ∧ of(EVENT[5]) = ENTITY[3],
        see(EVENT[6], REF1[1], ENTITY[2]))))

# ::id 332_textbook_TANAKA;006_ID_127592;IE
# ::snt He started early in the morning .
∃ REF1[1] EVENT[3] ENTITY[2] (
 morning(ENTITY[2]) ∧
  REF1[1] = he ∧ is_TMP_early_in(EVENT[3], ENTITY[2]) ∧ past(EVENT[3]) ∧ started(EVENT[3], REF1[1]))

# ::id 333_textbook_TANAKA;006_ID_51995;IE
# ::snt Oxygen is needed for combustion .
∃ EVENT[3] ENTITY[2] ENTITY[1] (
 Oxygen(ENTITY[1]) ∧
  combustion(ENTITY[2]) ∧ needed(EVENT[3], _, ENTITY[1]) ∧ for(EVENT[3]) = ENTITY[2])

# ::id 334_textbook_TANAKA;006_ID_81572;IE
# ::snt I have been busy lately .
∃ ATTRIB[2] REF1[1] EVENT[3] (REF1[1] = i ∧ busy(ATTRIB[2]) ∧ TMP_lately(EVENT[3]) ∧ have_copula(EVENT[3], REF1[1], ATTRIB[2]))

# ::id 335_textbook_TANAKA;006_ID_98827;IE
# ::snt Here 's your party .
∃ REF1[3] EVENT[4] ENTITY[2] ENTITY[1] (Here(ENTITY[1]) ∧ REF1[3] = your ∧ is_party_POS(ENTITY[2], REF1[3]) ∧ copula(EVENT[4], ENTITY[1], ENTITY[2]))

# ::id 336_textbook_TANAKA;006_ID_73450;IE
# ::snt I want a jacket shaped like yours .
∃ ATTRIB[4] REF1[1] EVENT[6] EVENT[7] GROUP[5] ENTITY[2] (
 REF1[1] = i ∧
  yours(GROUP[5]) ∧
   is_like_comp(ATTRIB[4], GROUP[5]) ∧
    shaped(EVENT[6], _, ENTITY[2]) ∧ ATTRIBUTE(EVENT[6]) = ATTRIB[4] ∧ jacket(ENTITY[2]) ∧
     want(EVENT[7], REF1[1], ENTITY[2]))

# ::id 337_textbook_TANAKA;006_ID_135220;IE
# ::snt I take a strong attitude toward her .
∃ REF2[4] ATTRIB[3] REF1[1] EVENT[5] ENTITY[2] (
 REF1[1] = i ∧
  strong(ATTRIB[3]) ∧
   REF2[4] = her ∧
    is_attitude_toward(ENTITY[2], REF2[4]) ∧ is_attitude_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ take(EVENT[5], REF1[1], ENTITY[2]))

# ::id 338_textbook_TANAKA;006_ID_87344;IE
# ::snt We are comfortable in our new house .
∃ ATTRIB[5] REF2[4] ATTRIB[2] REF1[1] EVENT[6] ENTITY[3] (
 REF1[1] = we ∧
  REF2[4] = our ∧
   new(ATTRIB[5]) ∧
    is_house_ATTRIBUTE(ENTITY[3], ATTRIB[5]) ∧ is_house_POS(ENTITY[3], REF2[4]) ∧
     is_comfortable_in(ATTRIB[2], ENTITY[3]) ∧ copula(EVENT[6], REF1[1]) ∧ ATTRIBUTE(EVENT[6]) = ATTRIB[2])

# ::id 339_textbook_TANAKA;006_ID_139711;IE
# ::snt She kept on crying .
∃ REF1[1] EVENT[3] ENTITY[2] (REF1[1] = she ∧ crying(ENTITY[2]) ∧ past(EVENT[3]) ∧ kept_on(EVENT[3], REF1[1], ENTITY[2]))

# ::id 340_textbook_TANAKA;006_ID_134725;IE
# ::snt There is no need for her to work .
¬ ∃ REF1[2] EVENT[3] EVENT[4] ENTITY[1] (REF1[2] = her ∧ is_need_to(ENTITY[1], work(EVENT[3], REF1[2])) ∧ copula(EVENT[4], ENTITY[1]))

# ::id 341_textbook_TANAKA;006_ID_73035;IE
# ::snt We broke our journey at Tokyo .
∃ REF2[3] REF1[1] EVENT[4] ENTITY[2] (
 REF1[1] = we ∧
  REF2[3] = our ∧
   is_journey_POS(ENTITY[2], REF2[3]) ∧
    past(EVENT[4]) ∧ broke(EVENT[4], REF1[1], ENTITY[2]) ∧ at(EVENT[4]) = ENTITY[Tokyo])

# ::id 342_textbook_TANAKA;006_ID_151872;IE
# ::snt Yoko is unable to buy a computer .
∃ ATTRIB[1] EVENT[3] EVENT[4] ENTITY[2] (
 computer(ENTITY[2]) ∧
  is_unable_to(ATTRIB[1], buy(EVENT[3], _, ENTITY[2])) ∧ copula(EVENT[4], ENTITY[Yoko], ATTRIB[1]))

# ::id 343_textbook_TANAKA;006_ID_67554;IE
# ::snt The fortune was divided among the three brothers .
∃ EVENT[3] GROUP[2] ENTITY[1] (
 fortune(ENTITY[1]) ∧
  (CD_three(GROUP[2]), brothers(GROUP[2])) ∧
   past(EVENT[3]) ∧ divided(EVENT[3], _, ENTITY[1]) ∧ among(EVENT[3]) = GROUP[2])

# ::id 344_textbook_TANAKA;006_ID_8333;IE
# ::snt It 's no use regretting it now .
∃ REF1[2] SITUATION[1] EVENT[3] (
 REF1[2] = it ∧
  is_FACT_THAT(SITUATION[1], regretting(EVENT[3], _, REF1[2])) ∧
   TMP_now(EVENT[3]) ∧ ¬ ∃ EVENT[6] ENTITY[5] (use(ENTITY[5]) ∧ copula(EVENT[6], SITUATION[1], ENTITY[5])))

# ::id 345_textbook_TANAKA;006_ID_152394;IE
# ::snt So does the board of directors .
∃ EVENT[3] GROUP[2] ENTITY[1] (directors(GROUP[2]) ∧ is_board_of(ENTITY[1], GROUP[2]) ∧ ADV_so(EVENT[3]) ∧ does(EVENT[3], ENTITY[1]))

# ::id 346_textbook_TANAKA;006_ID_101642;IE
# ::snt A man can no more become a woman than a monkey can develop into a man .
∃ ENTITY[1] (
 man(ENTITY[1]) ∧
  MD_can(NO_MORE ENTITY[5] DEGREE[3] DEGREE[2] (
        (monkey(ENTITY[5]) ∧
         MD_can(∃ EVENT[7] ENTITY[6] (
               man(ENTITY[6]) ∧
                develop(EVENT[7], ENTITY[5]) ∧ into(EVENT[7]) = ENTITY[6] ∧
                 MSR(EVENT[7]) = DEGREE[3])) ∧ is_than(DEGREE[2], DEGREE[3])),
        ∃ EVENT[9] ENTITY[8] (woman(ENTITY[8]) ∧ become(EVENT[9], ENTITY[1], ENTITY[8]) ∧ MSR(EVENT[9]) = DEGREE[2]))))

# ::id 347_textbook_TANAKA;006_ID_32036;IE
# ::snt Is all I want to do .
ALL REF1[3] EVENT[5] EVENT[4] ENTITY[1] ((REF1[3] = i ∧ want(EVENT[4], REF1[3], do(EVENT[5], REF1[3], ENTITY[1]))), ∃ EVENT[6] copula(EVENT[6], _, ENTITY[1]))

# ::id 348_textbook_TANAKA;006_ID_10959;IE
# ::snt Shut the door tight .
∃ ENTITY[1] (door(ENTITY[1]) ∧ IMPERATIVE(∃ EVENT[2] (ADV_tight(EVENT[2]) ∧ shut(EVENT[2], _, ENTITY[1]))))

# ::id 349_textbook_TANAKA;006_ID_59317;IE
# ::snt I admire you for your courage .
∃ REF3[4] REF2[2] REF1[1] EVENT[5] ENTITY[3] (
 REF1[1] = i ∧
  REF2[2] = you ∧
   REF3[4] = your ∧
    is_courage_POS(ENTITY[3], REF3[4]) ∧ admire(EVENT[5], REF1[1], REF2[2]) ∧ for(EVENT[5]) = ENTITY[3])

# ::id 350_textbook_TANAKA;006_ID_24995;IE
# ::snt The hotel is noted for its food .
∃ REF1[3] EVENT[4] ENTITY[2] ENTITY[1] (
 hotel(ENTITY[1]) ∧
  REF1[3] = its ∧
   is_food_POS(ENTITY[2], REF1[3]) ∧ noted(EVENT[4], _, ENTITY[1]) ∧ for(EVENT[4]) = ENTITY[2])

# ::id 351_textbook_TANAKA;006_ID_57313;IE
# ::snt I hope to see you soon .
∃ REF2[3] REF1[1] EVENT[4] EVENT[2] (
 REF1[1] = i ∧
  REF2[3] = you ∧ TMP_soon(EVENT[4]) ∧ hope(EVENT[2], REF1[1], see(EVENT[4], REF1[1], REF2[3])))

# ::id 352_textbook_TANAKA;006_ID_13046;IE
# ::snt In the course of the past year , prices have doubled .
∃ ATTRIB[3] EVENT[5] GROUP[4] ENTITY[2] ENTITY[1] (
 past(ATTRIB[3]) ∧
  is_year_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
   is_course_of(ENTITY[1], ENTITY[2]) ∧
    prices(GROUP[4]) ∧ have_doubled(EVENT[5], GROUP[4]) ∧ In(EVENT[5]) = ENTITY[1])

# ::id 353_textbook_TANAKA;006_ID_122267;IE
# ::snt He has never been late for school .
∃ ATTRIB[2] REF1[1] EVENT[4] ENTITY[3] (
 REF1[1] = he ∧
  late(ATTRIB[2]) ∧
   school(ENTITY[3]) ∧
    TMP_never(EVENT[4]) ∧ has_copula(EVENT[4], REF1[1], ATTRIB[2]) ∧ for(EVENT[4]) = ENTITY[3])

# ::id 354_textbook_TANAKA;006_ID_153758;IE
# ::snt And I begged her on my bended knees .
∃ ATTRIB[5] REF3[4] REF2[2] REF1[1] EVENT[6] GROUP[3] (
 REF1[1] = i ∧
  REF2[2] = her ∧
   REF3[4] = my ∧
    bended(ATTRIB[5]) ∧
     is_knees_ATTRIBUTE(GROUP[3], ATTRIB[5]) ∧ is_knees_POS(GROUP[3], REF3[4]) ∧
      past(EVENT[6]) ∧ begged(EVENT[6], REF1[1], REF2[2]) ∧ on(EVENT[6]) = GROUP[3])

# ::id 355_textbook_TANAKA;006_ID_151745;IE
# ::snt Could you tell me the ETA ?
∃ ENTITY[3] (
 ETA(ENTITY[3]) ∧
  QUEST(MD_could(∃ REF2[2] REF1[1] EVENT[4] (
             REF1[1] = you ∧
              REF2[2] = me ∧ tell(EVENT[4], REF1[1], ENTITY[3], REF2[2])))))

# ::id 356_textbook_TANAKA;006_ID_122472;IE
# ::snt He likes the most beautiful flower .
∃ REF1[1] ATTRIB[3] EVENT[4] ENTITY[2] (most_beautiful(ATTRIB[3]) ∧ is_flower_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ REF1[1] = he ∧ likes(EVENT[4], REF1[1], ENTITY[2]))

# ::id 357_textbook_TANAKA;006_ID_129275;IE
# ::snt He remained a poor man .
∃ ATTRIB[3] REF1[1] EVENT[4] ENTITY[2] (
 REF1[1] = he ∧
  poor(ATTRIB[3]) ∧ is_man_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ past(EVENT[4]) ∧ remained(EVENT[4], REF1[1], ENTITY[2]))

# ::id 358_textbook_TANAKA;006_ID_40781;IE
# ::snt Do you happen to know anything done by her alone ?
QUEST(∃ REF1[1] EVENT[2] (
      REF1[1] = you ∧
       do_happen(EVENT[2], REF1[1],
        ANY REF2[5] EVENT[6] ENTITY[3] (
         (REF2[5] = her ∧
          done(EVENT[6], _, ENTITY[3]) ∧ by(EVENT[6]) = REF2[5] ∧ thing(ENTITY[3]) ∧
          ADV_alone(EVENT[6])), ∃ EVENT[8] know(EVENT[8], REF1[1], ENTITY[3])))))

# ::id 359_textbook_TANAKA;006_ID_8736;IE
# ::snt Our university has excellent sports facilities .
∃ ATTRIB[4] REF1[2] EVENT[5] GROUP[3] ENTITY[1] (
 REF1[2] = our ∧
  is_university_POS(ENTITY[1], REF1[2]) ∧
   excellent(ATTRIB[4]) ∧ is_sports_facilities_ATTRIBUTE(GROUP[3], ATTRIB[4]) ∧ has(EVENT[5], ENTITY[1], GROUP[3]))

# ::id 360_textbook_TANAKA;006_ID_3469;IE
# ::snt Your purse is similar to mine .
∃ REF2[5] ATTRIB[3] REF1[2] EVENT[6] ENTITY[4] ENTITY[1] (
 REF1[2] = your ∧
  is_purse_POS(ENTITY[1], REF1[2]) ∧
   REF2[5] = mine ∧
    is_POS(ENTITY[4], REF2[5]) ∧ is_similar_to(ATTRIB[3], ENTITY[4]) ∧ copula(EVENT[6], ENTITY[1], ATTRIB[3]))

# ::id 361_textbook_TANAKA;006_ID_32989;IE
# ::snt It 's a fact you can 't deny .
∃ REF2[4] REF1[1] EVENT[6] ENTITY[2] (
 REF1[1] = it ∧
  REF2[4] = you ∧
   MD_can(¬ ∃ EVENT[5] deny(EVENT[5], REF2[4], ENTITY[2])) ∧ fact(ENTITY[2]) ∧
    copula(EVENT[6], REF1[1], ENTITY[2]))

# ::id 362_textbook_TANAKA;006_ID_84355;IE
# ::snt I caught him soon .
∃ REF2[2] REF1[1] EVENT[3] (
 REF1[1] = i ∧
  REF2[2] = him ∧ TMP_soon(EVENT[3]) ∧ past(EVENT[3]) ∧ caught(EVENT[3], REF1[1], REF2[2]))

# ::id 363_textbook_TANAKA;006_ID_9223;IE
# ::snt Do you have hot towels ?
QUEST(∃ ATTRIB[3] REF1[1] EVENT[4] GROUP[2] (
      REF1[1] = you ∧
       hot(ATTRIB[3]) ∧ is_towels_ATTRIBUTE(GROUP[2], ATTRIB[3]) ∧ do_have(EVENT[4], REF1[1], GROUP[2])))

# ::id 364_textbook_TANAKA;006_ID_60200;IE
# ::snt You should read such books as you consider important .
∃ REF1[1] (
 REF1[1] = you ∧
  MD_should(∃ ATTRIB[6] REF2[5] SITUATION[4] ATTRIB[3] EVENT[7] EVENT[8] GROUP[2] (
        such(ATTRIB[3]) ∧
         is_books_ATTRIBUTE(GROUP[2], ATTRIB[3]) ∧
          REF2[5] = you ∧
           important(ATTRIB[6]) ∧
            is_FACT_THAT(SITUATION[4], consider(EVENT[7], REF2[5], ATTRIB[6])) ∧
             read(EVENT[8], REF1[1], GROUP[2]) ∧ as(EVENT[8]) = SITUATION[4])))

# ::id 365_textbook_TANAKA;006_ID_140784;IE
# ::snt She gave me a watch for a birthday present .
∃ REF2[2] REF1[1] EVENT[5] ENTITY[4] ENTITY[3] (
 REF1[1] = she ∧
  REF2[2] = me ∧
   watch(ENTITY[3]) ∧
    birthday_present(ENTITY[4]) ∧
     past(EVENT[5]) ∧ gave(EVENT[5], REF1[1], ENTITY[3], REF2[2]) ∧ for(EVENT[5]) = ENTITY[4])

# ::id 366_textbook_TANAKA;006_ID_14253;IE
# ::snt This chimney is made of brick .
∃ EVENT[3] ENTITY[2] ENTITY[1] (
 chimney(ENTITY[1]) ∧
  brick(ENTITY[2]) ∧ made(EVENT[3], _, ENTITY[1]) ∧ of(EVENT[3]) = ENTITY[2])

# ::id 367_textbook_TANAKA;006_ID_72130;IE
# ::snt We climbed up the steep mountain .
∃ REF1[1] ATTRIB[3] EVENT[4] ENTITY[2] (
 steep(ATTRIB[3]) ∧
  is_mountain_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ REF1[1] = we ∧ past(EVENT[4]) ∧ climbed_up(EVENT[4], REF1[1], ENTITY[2]))

# ::id 368_textbook_TANAKA;006_ID_143113;IE
# ::snt She lives next door to him .
∃ REF2[4] ATTRIB[3] REF1[1] EVENT[5] ENTITY[2] (
 REF1[1] = she ∧
  next(ATTRIB[3]) ∧
   REF2[4] = him ∧
    is_door_to(ENTITY[2], REF2[4]) ∧ is_door_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
     lives(EVENT[5], REF1[1]) ∧ DIR(EVENT[5]) = ENTITY[2])

# ::id 369_textbook_TANAKA;006_ID_84405;IE
# ::snt I could n't put up with him .
∃ REF1[1] (
 REF1[1] = i ∧
  MD_could(¬ ∃ REF2[2] EVENT[3] (REF2[2] = him ∧ put_up(EVENT[3], REF1[1]) ∧ with(EVENT[3]) = REF2[2])))

# ::id 370_textbook_TANAKA;006_ID_92294;IE
# ::snt The girl writes a good hand though she is still only ten .
∃ SITUATION[9] REF1[5] SITUATION[4] ATTRIB[3] EVENT[10] TIME[7] ENTITY[2] ENTITY[1] (
 girl(ENTITY[1]) ∧
  good(ATTRIB[3]) ∧
   is_hand_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
    REF1[5] = she ∧
     CD_ten(TIME[7]) ∧
      is_FACT_THAT(SITUATION[4],
       is_FACT_THAT(SITUATION[9],
        ONLY TIME[6] (is_contained_in(TIME[6], TIME[7]),
         ∃ EVENT[8] (copula(EVENT[8], REF1[5]) ∧ is_contained_in(TMP(EVENT[8]), TIME[6]))))) ∧
       TMP_still(SITUATION[9]) ∧ writes(EVENT[10], ENTITY[1], ENTITY[2]) ∧ though(EVENT[10]) = SITUATION[4])

# ::id 371_textbook_TANAKA;006_ID_110316;IE
# ::snt The task assigned to him was to do marketing research .
∃ REF1[3] EVENT[7] EVENT[5] ENTITY[6] EVENT[4] ENTITY[1] (
 REF1[3] = him ∧
  assigned(EVENT[4], _, ENTITY[1]) ∧ to(EVENT[4]) = REF1[3] ∧ task(ENTITY[1]) ∧
   marketing_research(ENTITY[6]) ∧ past(EVENT[5]) ∧ copula(EVENT[5], ENTITY[1], do(EVENT[7], ENTITY[1], ENTITY[6])))

# ::id 372_textbook_TANAKA;006_ID_85136;IE
# ::snt I know that she is cute .
∃ ATTRIB[4] REF2[3] REF1[1] EVENT[5] EVENT[2] (
 REF1[1] = i ∧
  REF2[3] = she ∧ cute(ATTRIB[4]) ∧ know(EVENT[2], REF1[1], copula(EVENT[5], REF2[3], ATTRIB[4])))

# ::id 373_textbook_TANAKA;006_ID_146105;IE
# ::snt Father gave an angry look at me .
∃ REF1[3] ATTRIB[2] EVENT[4] ENTITY[1] (
 angry(ATTRIB[2]) ∧
  REF1[3] = me ∧
   is_look_at(ENTITY[1], REF1[3]) ∧ is_look_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧
    past(EVENT[4]) ∧ gave(EVENT[4], ENTITY[Father], ENTITY[1]))

# ::id 374_textbook_TANAKA;006_ID_130221;IE
# ::snt He will end the work by tomorrow .
∃ REF1[1] ENTITY[2] (
 work(ENTITY[2]) ∧
  REF1[1] = he ∧
   MD_will(∃ EVENT[4] ENTITY[3] (tomorrow(ENTITY[3]) ∧ end(EVENT[4], REF1[1], ENTITY[2]) ∧ by(EVENT[4]) = ENTITY[3])))

# ::id 375_textbook_TANAKA;006_ID_28696;IE
# ::snt The boy has a hunger for adventure .
∃ EVENT[4] ENTITY[3] ENTITY[2] ENTITY[1] (boy(ENTITY[1]) ∧ adventure(ENTITY[3]) ∧ is_hunger_for(ENTITY[2], ENTITY[3]) ∧ has(EVENT[4], ENTITY[1], ENTITY[2]))

# ::id 376_textbook_TANAKA;006_ID_76441;IE
# ::snt I hope to see you .
∃ REF2[3] REF1[1] EVENT[4] EVENT[2] (REF1[1] = i ∧ REF2[3] = you ∧ hope(EVENT[2], REF1[1], see(EVENT[4], REF1[1], REF2[3])))

# ::id 377_textbook_TANAKA;006_ID_26752;IE
# ::snt The words hurt his pride .
∃ REF1[3] EVENT[4] ENTITY[2] GROUP[1] (
 words(GROUP[1]) ∧
  REF1[3] = his ∧ is_pride_POS(ENTITY[2], REF1[3]) ∧ past(EVENT[4]) ∧ hurt(EVENT[4], GROUP[1], ENTITY[2]))

# ::id 378_textbook_TANAKA;006_ID_11205;IE
# ::snt Carol has just returned to her hotel .
∃ REF1[2] EVENT[3] ENTITY[1] (
 REF1[2] = her ∧
  is_hotel_POS(ENTITY[1], REF1[2]) ∧
   ADV_just(EVENT[3]) ∧ has_returned(EVENT[3], ENTITY[Carol]) ∧ to(EVENT[3]) = ENTITY[1])

# ::id 379_textbook_TANAKA;006_ID_98403;IE
# ::snt Not every student has a dictionary .
NOT_EVERY ENTITY[1] (student(ENTITY[1]), ∃ EVENT[3] ENTITY[2] (dictionary(ENTITY[2]) ∧ has(EVENT[3], ENTITY[1], ENTITY[2])))

# ::id 380_textbook_TANAKA;006_ID_101886;IE
# ::snt Enjoy intellectual conversations .
IMPERATIVE(∃ ATTRIB[2] EVENT[3] GROUP[1] (intellectual(ATTRIB[2]) ∧ is_conversations_ATTRIBUTE(GROUP[1], ATTRIB[2]) ∧ enjoy(EVENT[3], _, GROUP[1])))

# ::id 381_textbook_TANAKA;006_ID_127718;IE
# ::snt He just brushed aside any objections to the proposal .
∃ SITUATION[5] REF1[1] ENTITY[3] (
 proposal(ENTITY[3]) ∧
  REF1[1] = he ∧
   ADV_just(SITUATION[5]) ∧
    is_FACT_THAT(SITUATION[5],
     ANY GROUP[2] (is_objections_to(GROUP[2], ENTITY[3]), ∃ EVENT[4] (past(EVENT[4]) ∧ brushed_aside(EVENT[4], REF1[1], GROUP[2])))))

# ::id 382_textbook_TANAKA;006_ID_49691;IE
# ::snt We needed a taxi to take us to the station .
∃ REF2[4] PRP[3] REF1[1] EVENT[6] EVENT[7] ENTITY[2] ENTITY[5] (
 station(ENTITY[5]) ∧
  REF1[1] = we ∧
   taxi(ENTITY[2]) ∧
    REF2[4] = us ∧
     is_FACT_THAT(PRP[3], take(EVENT[6], ENTITY[2], REF2[4]) ∧ to(EVENT[6]) = ENTITY[5]) ∧
      past(EVENT[7]) ∧ needed(EVENT[7], REF1[1], ENTITY[2]) ∧ PRP(EVENT[7]) = PRP[3])

# ::id 383_textbook_TANAKA;006_ID_70655;IE
# ::snt It is already ten years since we got married .
∃ SITUATION[8] ATTRIB[5] REF2[4] SITUATION[3] REF1[1] EVENT[6] EVENT[7] GROUP[2] (
 REF1[1] = it ∧
  (CD_ten(GROUP[2]), years(GROUP[2])) ∧
   REF2[4] = we ∧
    married(ATTRIB[5]) ∧
     is_FACT_THAT(SITUATION[3], got(EVENT[6], REF2[4], ATTRIB[5])) ∧
      TMP_already(SITUATION[8]) ∧
       past(EVENT[6]) ∧
        is_FACT_THAT(SITUATION[8], copula(EVENT[7], REF1[1], GROUP[2]) ∧ since(EVENT[7]) = SITUATION[3]))

# ::id 384_textbook_TANAKA;006_ID_143919;IE
# ::snt She attends school at night .
∃ REF1[1] EVENT[4] ENTITY[3] ENTITY[2] (
 REF1[1] = she ∧
  school(ENTITY[2]) ∧
   night(ENTITY[3]) ∧ attends(EVENT[4], REF1[1], ENTITY[2]) ∧ at(EVENT[4]) = ENTITY[3])

# ::id 385_textbook_TANAKA;006_ID_17988;IE
# ::snt This medicine will do wonders for a runny nose .
∃ ENTITY[1] (
 medicine(ENTITY[1]) ∧
  MD_will(∃ ATTRIB[4] EVENT[5] ENTITY[3] GROUP[2] (
        wonders(GROUP[2]) ∧
         runny(ATTRIB[4]) ∧
          is_nose_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
           do(EVENT[5], ENTITY[1], GROUP[2]) ∧ for(EVENT[5]) = ENTITY[3])))

# ::id 386_textbook_TANAKA;006_ID_152128;IE
# ::snt Let 's put it off till next week .
IMPERATIVE(∃ ATTRIB[5] REF2[3] REF1[2] EVENT[6] EVENT[1] ENTITY[4] (
      REF1[2] = 's ∧
       REF2[3] = it ∧
        next(ATTRIB[5]) ∧
         is_week_ATTRIBUTE(ENTITY[4], ATTRIB[5]) ∧
          let(EVENT[1], put_off(EVENT[6], REF1[2], REF2[3]) ∧ till(EVENT[6]) = ENTITY[4])))

# ::id 387_textbook_TANAKA;006_ID_62185;IE
# ::snt A dog runs after a cat , and the cat after a mouse .
∃ EVENT[3] EVENT[6] ENTITY[2] ENTITY[1] ENTITY[5] ENTITY[4] (
 cat(ENTITY[4]) ∧
  dog(ENTITY[1]) ∧
   cat(ENTITY[2]) ∧
    mouse(ENTITY[5]) ∧
     CONJ_and(runs(EVENT[3], ENTITY[1]) ∧ after(EVENT[3]) = ENTITY[2],
      runs(EVENT[6], ENTITY[4]) ∧ after(EVENT[6]) = ENTITY[5]))

# ::id 388_textbook_TANAKA;006_ID_37840;IE
# ::snt I did n't know for certain which train to take .
∃ REF1[1] (
 REF1[1] = i ∧
  ¬ ∃ ATTRIB[2] EVENT[3] (
        certain(ATTRIB[2]) ∧
         past(EVENT[3]) ∧
          did_know(EVENT[3], REF1[1],
           QUEST(∃ EVENT[5] ? ENTITY[4] (train(ENTITY[4]) ∧ take(EVENT[5], REF1[1], ENTITY[4])))) ∧
           for(EVENT[3]) = ATTRIB[2]))

# ::id 389_textbook_TANAKA;006_ID_11721;IE
# ::snt Kate keeps a dog .
∃ EVENT[2] ENTITY[1] (dog(ENTITY[1]) ∧ keeps(EVENT[2], ENTITY[Kate], ENTITY[1]))

# ::id 390_textbook_TANAKA;006_ID_74643;IE
# ::snt My watch is running all right .
∃ REF1[2] EVENT[3] ENTITY[1] (REF1[2] = my ∧ is_watch_POS(ENTITY[1], REF1[2]) ∧ ADV_all_right(EVENT[3]) ∧ is_running(EVENT[3], ENTITY[1]))

# ::id 391_textbook_TANAKA;006_ID_62939;IE
# ::snt It 's an old piano .
∃ ATTRIB[3] REF1[1] EVENT[4] ENTITY[2] (REF1[1] = it ∧ old(ATTRIB[3]) ∧ is_piano_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ copula(EVENT[4], REF1[1], ENTITY[2]))

# ::id 392_textbook_TANAKA;006_ID_26315;IE
# ::snt The troops had plenty of arms .
∃ EVENT[4] GROUP[3] ENTITY[2] GROUP[1] (
 troops(GROUP[1]) ∧
  arms(GROUP[3]) ∧ is_plenty_of(ENTITY[2], GROUP[3]) ∧ past(EVENT[4]) ∧ had(EVENT[4], GROUP[1], ENTITY[2]))

# ::id 393_textbook_TANAKA;006_ID_77692;IE
# ::snt I was injured while I was skiing .
∃ REF2[2] REF1[1] EVENT[3] EVENT[4] (
 REF1[1] = i ∧
  REF2[2] = i ∧
   past(EVENT[3]) ∧ past(EVENT[4]) ∧ CRD_while(was_skiing(EVENT[3], REF2[2]), was_injured(EVENT[4], REF1[1])))

# ::id 394_textbook_TANAKA;006_ID_108913;IE
# ::snt Tell me the reason why he was fired .
∃ REF2[4] EVENT[5] ENTITY[2] (
 REF2[4] = he ∧
  was_fired(EVENT[5], REF2[4]) ∧ reason(ENTITY[2]) ∧
   is_ADV(EVENT[5], ENTITY[2]) ∧
    past(EVENT[5]) ∧ IMPERATIVE(∃ REF1[1] EVENT[7] (REF1[1] = me ∧ tell(EVENT[7], _, ENTITY[2], REF1[1]))))

# ::id 395_textbook_TANAKA;006_ID_62564;IE
# ::snt An acute lack of funds is holding up the plan .
∃ ATTRIB[2] EVENT[5] GROUP[3] ENTITY[1] ENTITY[4] (
 plan(ENTITY[4]) ∧
  acute(ATTRIB[2]) ∧
   funds(GROUP[3]) ∧
    is_lack_of(ENTITY[1], GROUP[3]) ∧ is_lack_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧ is_holding_up(EVENT[5], ENTITY[1], ENTITY[4]))

# ::id 396_textbook_TANAKA;006_ID_96142;IE
# ::snt The asterisks mark important references .
∃ ATTRIB[3] EVENT[4] GROUP[2] GROUP[1] (asterisks(GROUP[1]) ∧ important(ATTRIB[3]) ∧ is_references_ATTRIBUTE(GROUP[2], ATTRIB[3]) ∧ mark(EVENT[4], GROUP[1], GROUP[2]))

# ::id 397_textbook_TANAKA;006_ID_56908;IE
# ::snt Would you mind opening the window ?
∃ ENTITY[2] (
 window(ENTITY[2]) ∧
  QUEST(MD_would(∃ REF1[1] EVENT[4] EVENT[3] (
             REF1[1] = you ∧
              CONJ_and(mind(EVENT[4], REF1[1]), opening(EVENT[3], REF1[1], ENTITY[2]))))))

# ::id 398_textbook_TANAKA;006_ID_120150;IE
# ::snt He devoted his life to the study of science .
∃ REF2[3] REF1[1] EVENT[6] ENTITY[2] ENTITY[5] ENTITY[4] (
 science(ENTITY[5]) ∧
  is_study_of(ENTITY[4], ENTITY[5]) ∧
   REF1[1] = he ∧
    REF2[3] = his ∧
     is_life_POS(ENTITY[2], REF2[3]) ∧ devoted(EVENT[6], REF1[1], ENTITY[2]) ∧ to(EVENT[6]) = ENTITY[4])

# ::id 399_textbook_TANAKA;006_ID_129419;IE
# ::snt He is no less clever than his father is .
∃ REF2[6] ATTRIB[2] REF1[1] EVENT[7] EVENT[9] ENTITY[5] DEGREE[3] (
 REF1[1] = he ∧
  REF2[6] = his ∧
   is_father_POS(ENTITY[5], REF2[6]) ∧
    copula(EVENT[7], ENTITY[5]) ∧
     is_no_less_clever_than(ATTRIB[2], DEGREE[3]) ∧ is_ADV(EVENT[7], DEGREE[3]) ∧ copula(EVENT[9], REF1[1], ATTRIB[2]))

# ::id 400_textbook_TANAKA;006_ID_78499;IE
# ::snt I could recite the story by heart .
∃ REF1[1] ENTITY[2] (
 story(ENTITY[2]) ∧
  REF1[1] = i ∧
   MD_could(∃ EVENT[4] ENTITY[3] (heart(ENTITY[3]) ∧ recite(EVENT[4], REF1[1], ENTITY[2]) ∧ by(EVENT[4]) = ENTITY[3])))

# ::id 401_textbook_TANAKA;006_ID_61561;IE
# ::snt You never wan na breathe your last .
∃ SITUATION[7] ATTRIB[5] REF2[4] REF1[1] EVENT[6] EVENT[2] ENTITY[3] (
 REF1[1] = you ∧
  REF2[4] = your ∧
   last(ATTRIB[5]) ∧
    is_ATTRIBUTE(ENTITY[3], ATTRIB[5]) ∧ is_POS(ENTITY[3], REF2[4]) ∧
     TMP_never(SITUATION[7]) ∧
      past(EVENT[2]) ∧ is_FACT_THAT(SITUATION[7], wan(EVENT[2], REF1[1], breathe(EVENT[6], REF1[1], ENTITY[3]))))

# ::id 402_textbook_TANAKA;006_ID_77688;IE
# ::snt I was injured while I was skiing .
∃ REF2[2] REF1[1] EVENT[3] EVENT[4] (
 REF1[1] = i ∧
  REF2[2] = i ∧
   past(EVENT[3]) ∧ past(EVENT[4]) ∧ CRD_while(was_skiing(EVENT[3], REF2[2]), was_injured(EVENT[4], REF1[1])))

# ::id 403_textbook_TANAKA;006_ID_139620;IE
# ::snt She is in a bad mood .
∃ ATTRIB[3] REF1[1] EVENT[4] ENTITY[2] (
 REF1[1] = she ∧
  bad(ATTRIB[3]) ∧
   is_mood_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ copula(EVENT[4], REF1[1]) ∧ in(EVENT[4]) = ENTITY[2])

# ::id 404_textbook_TANAKA;006_ID_105465;IE
# ::snt Copper and silver are both metals .
∃ GROUP[1] (
 ∃ ENTITY[2] (Copper(ENTITY[2]) ∧ is_element_of(ENTITY[2], GROUP[1])) ∧
  ∃ ENTITY[3] (silver(ENTITY[3]) ∧ is_element_of(ENTITY[3], GROUP[1])) ∧
  BOTH GROUP[4] (metals(GROUP[4]), ∃ EVENT[5] copula(EVENT[5], GROUP[1], GROUP[4])))

# ::id 405_textbook_TANAKA;006_ID_84048;IE
# ::snt I got the information from him directly .
∃ REF2[3] REF1[1] EVENT[4] ENTITY[2] (
 information(ENTITY[2]) ∧
  REF1[1] = i ∧
   REF2[3] = him ∧
    ADV_directly(EVENT[4]) ∧
     past(EVENT[4]) ∧ got(EVENT[4], REF1[1], ENTITY[2]) ∧ from(EVENT[4]) = REF2[3])

# ::id 406_textbook_TANAKA;006_ID_151080;IE
# ::snt Let 's play a game of baseball .
IMPERATIVE(∃ REF1[2] EVENT[5] EVENT[1] ENTITY[4] ENTITY[3] (
      REF1[2] = 's ∧
       baseball(ENTITY[4]) ∧
        is_game_of(ENTITY[3], ENTITY[4]) ∧ let(EVENT[1], play(EVENT[5], REF1[2], ENTITY[3]))))

# ::id 407_textbook_TANAKA;006_ID_57248;IE
# ::snt A man of industry will succeed in life .
∃ ENTITY[2] ENTITY[1] (
 industry(ENTITY[2]) ∧
  is_man_of(ENTITY[1], ENTITY[2]) ∧
   MD_will(∃ EVENT[4] ENTITY[3] (life(ENTITY[3]) ∧ succeed(EVENT[4], ENTITY[1]) ∧ in(EVENT[4]) = ENTITY[3])))

# ::id 408_textbook_TANAKA;006_ID_99134;IE
# ::snt His son 's criminal activities caused him great pain .
∃ ATTRIB[7] REF2[5] ATTRIB[4] REF1[3] EVENT[8] ENTITY[2] ENTITY[6] GROUP[1] (
 REF1[3] = his ∧
  is_son_POS(ENTITY[2], REF1[3]) ∧
   criminal(ATTRIB[4]) ∧
    is_activities_ATTRIBUTE(GROUP[1], ATTRIB[4]) ∧ is_activities_POS(GROUP[1], ENTITY[2]) ∧
     REF2[5] = him ∧
      great(ATTRIB[7]) ∧
       is_pain_ATTRIBUTE(ENTITY[6], ATTRIB[7]) ∧ past(EVENT[8]) ∧ caused(EVENT[8], GROUP[1], ENTITY[6], REF2[5]))

# ::id 409_textbook_TANAKA;006_ID_79590;IE
# ::snt I decided to try again .
∃ REF1[1] EVENT[3] EVENT[2] (
 REF1[1] = i ∧
  TMP_again(EVENT[3]) ∧ past(EVENT[2]) ∧ decided(EVENT[2], REF1[1], try(EVENT[3], REF1[1])))

# ::id 410_textbook_TANAKA;006_ID_143593;IE
# ::snt She went out of her study .
∃ REF2[3] REF1[1] EVENT[4] ENTITY[2] (
 REF1[1] = she ∧
  REF2[3] = her ∧
   is_study_POS(ENTITY[2], REF2[3]) ∧
    past(EVENT[4]) ∧ went(EVENT[4], REF1[1]) ∧ out_of(EVENT[4]) = ENTITY[2])

# ::id 411_textbook_TANAKA;006_ID_57290;IE
# ::snt In case of emergency , call the police .
∃ ENTITY[3] (
 police(ENTITY[3]) ∧
  IMPERATIVE(∃ EVENT[4] ENTITY[2] ENTITY[1] (
        emergency(ENTITY[2]) ∧
         is_case_of(ENTITY[1], ENTITY[2]) ∧
          call(EVENT[4], _, ENTITY[3]) ∧ In(EVENT[4]) = ENTITY[1])))

# ::id 412_textbook_TANAKA;006_ID_132634;IE
# ::snt They gave no heed to the warning .
∃ REF1[1] ENTITY[3] (
 warning(ENTITY[3]) ∧
  REF1[1] = they ∧
   ¬ ∃ EVENT[4] ENTITY[2] (heed(ENTITY[2]) ∧ past(EVENT[4]) ∧ gave(EVENT[4], REF1[1], ENTITY[2], ENTITY[3])))

# ::id 413_textbook_TANAKA;006_ID_22374;IE
# ::snt Susan really takes after her mother .
∃ REF1[2] EVENT[3] ENTITY[1] (
 REF1[2] = her ∧
  is_mother_POS(ENTITY[1], REF1[2]) ∧
   ADV_really(EVENT[3]) ∧ takes(EVENT[3], ENTITY[Susan]) ∧ after(EVENT[3]) = ENTITY[1])

# ::id 414_textbook_TANAKA;006_ID_35113;IE
# ::snt Let me have a look at your video camera .
IMPERATIVE(∃ ATTRIB[6] REF2[5] REF1[2] EVENT[7] EVENT[1] ENTITY[4] ENTITY[3] (
      REF1[2] = me ∧
       REF2[5] = your ∧
        video(ATTRIB[6]) ∧
         is_camera_ATTRIBUTE(ENTITY[4], ATTRIB[6]) ∧ is_camera_POS(ENTITY[4], REF2[5]) ∧
          is_look_at(ENTITY[3], ENTITY[4]) ∧ let(EVENT[1], have(EVENT[7], REF1[2], ENTITY[3]))))

# ::id 415_textbook_TANAKA;006_ID_107214;IE
# ::snt Years passed .
∃ EVENT[2] GROUP[1] (Years(GROUP[1]) ∧ past(EVENT[2]) ∧ passed(EVENT[2], GROUP[1]))

# ::id 416_textbook_TANAKA;006_ID_59590;IE
# ::snt Did you tape that concert ?
∃ ENTITY[2] (
 concert(ENTITY[2]) ∧
  QUEST(∃ REF1[1] EVENT[3] (REF1[1] = you ∧ past(EVENT[3]) ∧ did_tape(EVENT[3], REF1[1], ENTITY[2]))))

# ::id 417_textbook_TANAKA;006_ID_42123;IE
# ::snt Most scientists think little of his finding .
MOST GROUP[1] (scientists(GROUP[1]),
 ∃ REF1[5] ATTRIB[3] EVENT[6] ENTITY[4] ENTITY[2] (
  little(ATTRIB[3]) ∧
   REF1[5] = his ∧
    is_finding_POS(ENTITY[4], REF1[5]) ∧
     is_of(ENTITY[2], ENTITY[4]) ∧ is_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ think(EVENT[6], GROUP[1], ENTITY[2])))

# ::id 418_textbook_TANAKA;006_ID_30553;IE
# ::snt It is worth while to visit that museum .
∃ ATTRIB[4] SITUATION[1] ENTITY[5] EVENT[3] EVENT[6] ENTITY[2] (
 museum(ENTITY[2]) ∧
  is_FACT_THAT(SITUATION[1], visit(EVENT[3], _, ENTITY[2])) ∧
   while(ENTITY[5]) ∧ is_worth_comp(ATTRIB[4], ENTITY[5]) ∧ copula(EVENT[6], SITUATION[1], ATTRIB[4]))

# ::id 419_textbook_TANAKA;006_ID_129029;IE
# ::snt He left cost out of account .
∃ REF1[1] EVENT[4] ENTITY[3] ENTITY[2] (
 REF1[1] = he ∧
  cost(ENTITY[2]) ∧
   account(ENTITY[3]) ∧
    past(EVENT[4]) ∧ left(EVENT[4], REF1[1], ENTITY[2]) ∧ out_of(EVENT[4]) = ENTITY[3])

# ::id 420_textbook_TANAKA;006_ID_70199;IE
# ::snt This is the only book I have .
∃ REF1[5] EVENT[6] ENTITY[3] ENTITY[1] (
 REF1[5] = i ∧
  have(EVENT[6], REF1[5], ENTITY[3]) ∧ book(ENTITY[3]) ∧
   ONLY ENTITY[2] (is_of(ENTITY[2], ENTITY[3]), ∃ EVENT[7] copula(EVENT[7], ENTITY[1], ENTITY[2])))

# ::id 421_textbook_TANAKA;006_ID_29182;IE
# ::snt His explanation of the problem adds up to nonsense .
∃ REF1[2] EVENT[5] ENTITY[4] ENTITY[1] ENTITY[3] (
 problem(ENTITY[3]) ∧
  REF1[2] = his ∧
   is_explanation_of(ENTITY[1], ENTITY[3]) ∧ is_explanation_POS(ENTITY[1], REF1[2]) ∧
    nonsense(ENTITY[4]) ∧ adds_up(EVENT[5], ENTITY[1]) ∧ to(EVENT[5]) = ENTITY[4])

# ::id 422_textbook_TANAKA;006_ID_118331;IE
# ::snt He earns his living as a hotel boy .
∃ REF2[3] REF1[1] EVENT[5] ENTITY[4] ENTITY[2] (
 REF1[1] = he ∧
  REF2[3] = his ∧
   is_living_POS(ENTITY[2], REF2[3]) ∧
    hotel_boy(ENTITY[4]) ∧ earns(EVENT[5], REF1[1], ENTITY[2]) ∧ as(EVENT[5]) = ENTITY[4])

# ::id 423_textbook_TANAKA;006_ID_40801;IE
# ::snt He might be out now .
∃ REF1[1] (REF1[1] = he ∧ MD_might(∃ EVENT[2] (TMP_now(EVENT[2]) ∧ copula_out(EVENT[2], REF1[1]))))

# ::id 424_textbook_TANAKA;006_ID_54134;IE
# ::snt As a rule , the inhabitants of warm countries keep early hours .
∃ ATTRIB[6] ATTRIB[4] EVENT[7] GROUP[5] ENTITY[1] GROUP[3] GROUP[2] (
 warm(ATTRIB[4]) ∧
  is_countries_ATTRIBUTE(GROUP[3], ATTRIB[4]) ∧
   is_inhabitants_of(GROUP[2], GROUP[3]) ∧
    rule(ENTITY[1]) ∧
     early(ATTRIB[6]) ∧
      is_hours_ATTRIBUTE(GROUP[5], ATTRIB[6]) ∧ keep(EVENT[7], GROUP[2], GROUP[5]) ∧ As(EVENT[7]) = ENTITY[1])

# ::id 425_textbook_TANAKA;006_ID_62353;IE
# ::snt If you are found out , you 'll catch it .
∀ REF1[1] EVENT[2] CND_If(REF1[1] = you ∧ are_found_out(EVENT[2], REF1[1]), ∃ REF2[3] (REF2[3] = you ∧ MD'll(∃ REF3[4] EVENT[5] (REF3[4] = it ∧ catch(EVENT[5], REF2[3], REF3[4])))))

# ::id 426_textbook_TANAKA;006_ID_143683;IE
# ::snt She thanked us for our help .
∃ REF3[4] REF2[2] REF1[1] EVENT[5] ENTITY[3] (
 REF1[1] = she ∧
  REF2[2] = us ∧
   REF3[4] = our ∧
    is_help_POS(ENTITY[3], REF3[4]) ∧
     past(EVENT[5]) ∧ thanked(EVENT[5], REF1[1], REF2[2]) ∧ for(EVENT[5]) = ENTITY[3])

# ::id 427_textbook_TANAKA;006_ID_35130;IE
# ::snt What do you say to having a coffee break ?
QUEST(∃ SITUATION[3] REF1[2] EVENT[5] EVENT[6] ENTITY[4] ? ENTITY[1] (
      REF1[2] = you ∧
       coffee_break(ENTITY[4]) ∧
        is_FACT_THAT(SITUATION[3], having(EVENT[5], ENTITY[1], ENTITY[4])) ∧
         do_say(EVENT[6], REF1[2], ENTITY[1]) ∧ to(EVENT[6]) = SITUATION[3]))

# ::id 428_textbook_TANAKA;006_ID_134883;IE
# ::snt I began a meeting with her .
∃ REF2[3] REF1[1] EVENT[4] ENTITY[2] (
 REF1[1] = i ∧
  meeting(ENTITY[2]) ∧
   REF2[3] = her ∧
    past(EVENT[4]) ∧ began(EVENT[4], REF1[1], ENTITY[2]) ∧ with(EVENT[4]) = REF2[3])

# ::id 429_textbook_TANAKA;006_ID_47188;IE
# ::snt For safety purposes , remove the plastic casing before use .
∃ ATTRIB[3] ENTITY[2] (
 plastic(ATTRIB[3]) ∧
  is_casing_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
   IMPERATIVE(∃ EVENT[5] ENTITY[4] GROUP[1] (
         safety_purposes(GROUP[1]) ∧
          use(ENTITY[4]) ∧
           remove(EVENT[5], _, ENTITY[2]) ∧ before(EVENT[5]) = ENTITY[4] ∧
            For(EVENT[5]) = GROUP[1])))

# ::id 430_textbook_TANAKA;006_ID_147907;IE
# ::snt The more laws , the more offenders .
MORE GROUP[1] (laws(GROUP[1]),
 MORE GROUP[2] (offenders(GROUP[2]),
  ∃ EVENT[3] (xxx(EVENT[3]) ∧ LINK(EVENT[3]) = GROUP[1] ∧ LINK(EVENT[3]) = GROUP[2])))

# ::id 431_textbook_TANAKA;006_ID_118559;IE
# ::snt Because he was just like a child he yeilded to temptation .
∃ REF2[5] ATTRIB[2] REF1[1] EVENT[4] EVENT[7] ENTITY[3] ENTITY[6] (
 REF1[1] = he ∧
  child(ENTITY[3]) ∧
   is_just_like_comp(ATTRIB[2], ENTITY[3]) ∧
    REF2[5] = he ∧
     temptation(ENTITY[6]) ∧
      past(EVENT[4]) ∧
       past(EVENT[7]) ∧
        CRD_Because(copula(EVENT[4], REF1[1], ATTRIB[2]),
         yeilded(EVENT[7], REF2[5]) ∧ to(EVENT[7]) = ENTITY[6]))

# ::id 432_textbook_TANAKA;006_ID_69315;IE
# ::snt The child cried herself to sleep .
∃ REF1[3] EVENT[4] EVENT[2] ENTITY[1] (
 child(ENTITY[1]) ∧
  REF1[3] = herself ∧ past(EVENT[2]) ∧ cried(EVENT[2], ENTITY[1], sleep(EVENT[4], REF1[3])))

# ::id 433_textbook_TANAKA;006_ID_75169;IE
# ::snt My brother takes great delight in his stamp collection .
∃ REF2[6] ATTRIB[4] REF1[2] EVENT[7] ENTITY[5] ENTITY[3] ENTITY[1] (
 REF1[2] = my ∧
  is_brother_POS(ENTITY[1], REF1[2]) ∧
   great(ATTRIB[4]) ∧
    is_delight_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
     REF2[6] = his ∧
      is_stamp_collection_POS(ENTITY[5], REF2[6]) ∧ takes(EVENT[7], ENTITY[1], ENTITY[3]) ∧ in(EVENT[7]) = ENTITY[5])

# ::id 434_textbook_TANAKA;006_ID_135165;IE
# ::snt Hardly a day went by when he did not meet her .
∃ REF1[3] SITUATION[2] EVENT[6] ENTITY[1] (
 ADV_hardly(ENTITY[1]) ∧ day(ENTITY[1]) ∧
  REF1[3] = he ∧
   is_FACT_THAT(SITUATION[2],
    ¬ ∃ REF2[4] EVENT[5] (REF2[4] = her ∧ past(EVENT[5]) ∧ did_meet(EVENT[5], REF1[3], REF2[4]))) ∧
    past(EVENT[6]) ∧ went_by(EVENT[6], ENTITY[1]) ∧ when(EVENT[6]) = SITUATION[2])

# ::id 435_textbook_TANAKA;006_ID_6234;IE
# ::snt Who is that man ?
∃ ENTITY[2] (man(ENTITY[2]) ∧ QUEST(∃ EVENT[3] ? ENTITY[1] copula(EVENT[3], ENTITY[2], ENTITY[1])))

# ::id 436_textbook_TANAKA;006_ID_28532;IE
# ::snt The girl smiled at me .
∃ REF1[2] EVENT[3] ENTITY[1] (
 girl(ENTITY[1]) ∧
  REF1[2] = me ∧ past(EVENT[3]) ∧ smiled(EVENT[3], ENTITY[1]) ∧ at(EVENT[3]) = REF1[2])

# ::id 437_textbook_TANAKA;006_ID_22536;IE
# ::snt I found it difficult to solve the problem at once .
∃ ATTRIB[7] SITUATION[3] REF1[1] EVENT[5] EVENT[8] EVENT[2] ENTITY[4] (
 problem(ENTITY[4]) ∧
  REF1[1] = i ∧
   is_FACT_THAT(SITUATION[3], solve(EVENT[5], _, ENTITY[4])) ∧
    difficult(ATTRIB[7]) ∧
     at(EVENT[5]) ∧ TMP_once(EVENT[5]) ∧
      past(EVENT[2]) ∧ found(EVENT[2], REF1[1], xxx(EVENT[8], SITUATION[3], ATTRIB[7])))

# ::id 438_textbook_TANAKA;006_ID_58645;IE
# ::snt I can 't hide the fact from you .
∃ REF1[1] ENTITY[2] (
 fact(ENTITY[2]) ∧
  REF1[1] = i ∧
   MD_can(¬ ∃ REF2[3] EVENT[4] (
              REF2[3] = you ∧
               hide(EVENT[4], REF1[1], ENTITY[2]) ∧ from(EVENT[4]) = REF2[3])))

# ::id 439_textbook_TANAKA;006_ID_31039;IE
# ::snt There was much argument against the bill .
∃ ENTITY[2] (bill(ENTITY[2]) ∧ MUCH ENTITY[1] (is_argument_against(ENTITY[1], ENTITY[2]), ∃ EVENT[3] (past(EVENT[3]) ∧ copula(EVENT[3], ENTITY[1]))))

# ::id 440_textbook_TANAKA;006_ID_47797;IE
# ::snt Please call me a doctor .
∃ EVENT[1] please(EVENT[1],
 IMPERATIVE(∃ REF1[2] EVENT[4] ENTITY[3] (REF1[2] = me ∧ doctor(ENTITY[3]) ∧ call(EVENT[4], _, ENTITY[3], REF1[2]))))

# ::id 441_textbook_TANAKA;006_ID_98503;IE
# ::snt It looks like we have everything .
∃ REF1[2] ATTRIB[1] EVENT[5] (
 REF1[2] = we ∧
  is_like_THAT(ATTRIB[1], ∀ ENTITY[3] (thing(ENTITY[3]) → ∃ EVENT[4] have(EVENT[4], REF1[2], ENTITY[3]))) ∧
   looks(EVENT[5], _, ATTRIB[1]))

# ::id 442_textbook_TANAKA;006_ID_4594;IE
# ::snt You do n't have to stay home .
∃ REF1[1] (REF1[1] = you ∧ ¬ ∃ EVENT[3] EVENT[2] (ADV_home(EVENT[3]) ∧ do_have(EVENT[2], REF1[1], stay(EVENT[3], REF1[1]))))

# ::id 443_textbook_TANAKA;006_ID_137089;IE
# ::snt She died of cancer .
∃ REF1[1] EVENT[3] ENTITY[2] (
 REF1[1] = she ∧
  cancer(ENTITY[2]) ∧ past(EVENT[3]) ∧ died(EVENT[3], REF1[1]) ∧ of(EVENT[3]) = ENTITY[2])

# ::id 444_textbook_TANAKA;006_ID_118913;IE
# ::snt He often eats out on Saturday nights .
∃ REF1[1] EVENT[3] GROUP[2] (
 REF1[1] = he ∧
  Saturday_nights(GROUP[2]) ∧ TMP_often(EVENT[3]) ∧ eats_out(EVENT[3], REF1[1]) ∧ on(EVENT[3]) = GROUP[2])

# ::id 445_textbook_TANAKA;006_ID_102172;IE
# ::snt Sooner or later she 'll get over the shock .
∃ SITUATION[4] REF1[1] ENTITY[2] (
 shock(ENTITY[2]) ∧
  REF1[1] = she ∧
   TMP_sooner_later(SITUATION[4]) ∧
    is_FACT_THAT(SITUATION[4], MD'll(∃ EVENT[3] (get(EVENT[3], REF1[1]) ∧ over(EVENT[3]) = ENTITY[2]))))

# ::id 446_textbook_TANAKA;006_ID_93652;IE
# ::snt He was tense with his new business .
∃ ATTRIB[5] REF2[4] ATTRIB[2] REF1[1] EVENT[6] ENTITY[3] (
 REF1[1] = he ∧
  REF2[4] = his ∧
   new(ATTRIB[5]) ∧
    is_business_ATTRIBUTE(ENTITY[3], ATTRIB[5]) ∧ is_business_POS(ENTITY[3], REF2[4]) ∧
     is_tense_with(ATTRIB[2], ENTITY[3]) ∧
      past(EVENT[6]) ∧ copula(EVENT[6], REF1[1]) ∧ ATTRIBUTE(EVENT[6]) = ATTRIB[2])

# ::id 447_textbook_TANAKA;006_ID_78805;IE
# ::snt I have just finished breakfast .
∃ REF1[1] EVENT[3] ENTITY[2] (REF1[1] = i ∧ breakfast(ENTITY[2]) ∧ ADV_just(EVENT[3]) ∧ have_finished(EVENT[3], REF1[1], ENTITY[2]))

# ::id 448_textbook_TANAKA;006_ID_47754;IE
# ::snt His doctor ordered him to rest .
∃ REF2[3] REF1[2] EVENT[5] EVENT[4] ENTITY[1] (
 REF1[2] = his ∧
  is_doctor_POS(ENTITY[1], REF1[2]) ∧
   REF2[3] = him ∧ past(EVENT[4]) ∧ ordered(EVENT[4], ENTITY[1], REF2[3], rest(EVENT[5], REF2[3])))

# ::id 449_textbook_TANAKA;006_ID_97686;IE
# ::snt The teacher amused the pupils .
∃ EVENT[3] GROUP[2] ENTITY[1] (teacher(ENTITY[1]) ∧ pupils(GROUP[2]) ∧ amused(EVENT[3], ENTITY[1], GROUP[2]))

# ::id 450_textbook_TANAKA;006_ID_138042;IE
# ::snt She easily takes offence at trifles .
∃ REF1[1] EVENT[4] GROUP[3] ENTITY[2] (
 REF1[1] = she ∧
  offence(ENTITY[2]) ∧
   trifles(GROUP[3]) ∧
    ADV_easily(EVENT[4]) ∧ takes(EVENT[4], REF1[1], ENTITY[2]) ∧ at(EVENT[4]) = GROUP[3])

# ::id 451_textbook_TANAKA;006_ID_93367;IE
# ::snt You may as well as go to bed now .
∃ REF1[1] (
 REF1[1] = you ∧
  MD_may(∃ EVENT[3] ENTITY[2] (
        bed(ENTITY[2]) ∧
         as(EVENT[3]) ∧ ADV_as_well(EVENT[3]) ∧
          TMP_now(EVENT[3]) ∧ go(EVENT[3], REF1[1]) ∧ to(EVENT[3]) = ENTITY[2])))

# ::id 452_textbook_TANAKA;006_ID_129815;IE
# ::snt He adjusted the telescope to his sight .
∃ REF2[4] REF1[1] EVENT[5] ENTITY[3] ENTITY[2] (
 telescope(ENTITY[2]) ∧
  REF1[1] = he ∧
   REF2[4] = his ∧
    is_sight_POS(ENTITY[3], REF2[4]) ∧
     past(EVENT[5]) ∧ adjusted(EVENT[5], REF1[1], ENTITY[2]) ∧ to(EVENT[5]) = ENTITY[3])

# ::id 453_textbook_TANAKA;006_ID_98745;IE
# ::snt I 'm used to getting up early .
∃ SITUATION[2] REF1[1] EVENT[3] EVENT[5] (
 REF1[1] = i ∧
  is_FACT_THAT(SITUATION[2], getting_up(EVENT[3], REF1[1])) ∧
   TMP_early(EVENT[3]) ∧ 'm_used(EVENT[5], REF1[1]) ∧ to(EVENT[5]) = SITUATION[2])

# ::id 454_textbook_TANAKA;006_ID_100692;IE
# ::snt The president shall be selected by majority vote .
∃ ENTITY[1] (
 president(ENTITY[1]) ∧
  MD_shall(∃ EVENT[3] ENTITY[2] (majority_vote(ENTITY[2]) ∧ be_selected(EVENT[3], ENTITY[1]) ∧ by(EVENT[3]) = ENTITY[2])))

# ::id 455_textbook_TANAKA;006_ID_46461;IE
# ::snt I 've got a pain in my side .
∃ REF2[4] REF1[1] EVENT[5] ENTITY[3] ENTITY[2] (
 REF1[1] = i ∧
  pain(ENTITY[2]) ∧
   REF2[4] = my ∧
    is_side_POS(ENTITY[3], REF2[4]) ∧ 've_got(EVENT[5], REF1[1], ENTITY[2]) ∧ in(EVENT[5]) = ENTITY[3])

# ::id 456_textbook_TANAKA;006_ID_92592;IE
# ::snt I worked hard in expectation of promotion .
∃ REF1[1] EVENT[4] ENTITY[3] ENTITY[2] (
 REF1[1] = i ∧
  promotion(ENTITY[3]) ∧
   is_expectation_of(ENTITY[2], ENTITY[3]) ∧
    ADV_hard(EVENT[4]) ∧ past(EVENT[4]) ∧ worked(EVENT[4], REF1[1]) ∧ in(EVENT[4]) = ENTITY[2])

# ::id 457_textbook_TANAKA;006_ID_7175;IE
# ::snt That is the picture that he painted .
∃ REF1[4] EVENT[6] EVENT[5] ENTITY[2] ENTITY[1] (
 REF1[4] = he ∧
  painted(EVENT[5], REF1[4], ENTITY[2]) ∧ picture(ENTITY[2]) ∧
   past(EVENT[5]) ∧ copula(EVENT[6], ENTITY[1], ENTITY[2]))

# ::id 458_textbook_TANAKA;006_ID_96420;IE
# ::snt All the students like holidays .
ALL GROUP[1] (students(GROUP[1]), ∃ EVENT[3] GROUP[2] (holidays(GROUP[2]) ∧ like(EVENT[3], GROUP[1], GROUP[2])))

# ::id 459_textbook_TANAKA;006_ID_91998;IE
# ::snt Life is very flat in a small village .
∃ ATTRIB[4] ATTRIB[2] EVENT[5] ENTITY[3] ENTITY[1] (
 Life(ENTITY[1]) ∧
  very_flat(ATTRIB[2]) ∧
   small(ATTRIB[4]) ∧
    is_village_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
     copula(EVENT[5], ENTITY[1]) ∧ in(EVENT[5]) = ENTITY[3] ∧ ATTRIBUTE(EVENT[5]) = ATTRIB[2])

# ::id 460_textbook_TANAKA;006_ID_51960;IE
# ::snt Hum baby to sleep .
IMPERATIVE(∃ EVENT[3] EVENT[2] ENTITY[1] (baby(ENTITY[1]) ∧ hum(EVENT[2], _, ENTITY[1], sleep(EVENT[3], ENTITY[1]))))

# ::id 461_textbook_TANAKA;006_ID_67180;IE
# ::snt Justice will prevail in the end .
∃ ENTITY[1] ENTITY[2] (
 end(ENTITY[2]) ∧
  Justice(ENTITY[1]) ∧ MD_will(∃ EVENT[3] (prevail(EVENT[3], ENTITY[1]) ∧ in(EVENT[3]) = ENTITY[2])))

# ::id 462_textbook_TANAKA;006_ID_84787;IE
# ::snt I never read his novels without being deeply moved .
∃ SITUATION[7] ATTRIB[4] REF2[3] REF1[1] EVENT[5] EVENT[6] GROUP[2] (
 REF1[1] = i ∧
  REF2[3] = his ∧
   is_novels_POS(GROUP[2], REF2[3]) ∧
    deeply_moved(ATTRIB[4]) ∧
     TMP_never(SITUATION[7]) ∧
      past(EVENT[6]) ∧
       is_FACT_THAT(SITUATION[7], CRD_without(being(EVENT[5], GROUP[2], ATTRIB[4]), read(EVENT[6], REF1[1], GROUP[2]))))

# ::id 463_textbook_TANAKA;006_ID_95146;IE
# ::snt Life is at best very short .
∃ ATTRIB[2] EVENT[3] ENTITY[1] (
 Life(ENTITY[1]) ∧
  very_short(ATTRIB[2]) ∧ at(EVENT[3]) ∧ ADV_best(EVENT[3]) ∧ copula(EVENT[3], ENTITY[1], ATTRIB[2]))

# ::id 464_textbook_TANAKA;006_ID_114212;IE
# ::snt He comes into contact with all kinds of people .
∃ REF1[1] EVENT[5] ENTITY[2] (
 REF1[1] = he ∧
  ALL GROUP[4] GROUP[3] ((people(GROUP[4]) ∧ is_kinds_of(GROUP[3], GROUP[4])), is_contact_with(ENTITY[2], GROUP[3])) ∧
   comes(EVENT[5], REF1[1]) ∧ into(EVENT[5]) = ENTITY[2])

# ::id 465_textbook_TANAKA;006_ID_43664;IE
# ::snt We are having fish for our main course .
∃ ATTRIB[5] REF2[4] REF1[1] EVENT[6] ENTITY[3] ENTITY[2] (
 REF1[1] = we ∧
  fish(ENTITY[2]) ∧
   REF2[4] = our ∧
    main(ATTRIB[5]) ∧
     is_course_ATTRIBUTE(ENTITY[3], ATTRIB[5]) ∧ is_course_POS(ENTITY[3], REF2[4]) ∧
      copula_having(EVENT[6], REF1[1], ENTITY[2]) ∧ for(EVENT[6]) = ENTITY[3])

# ::id 466_textbook_TANAKA;006_ID_109846;IE
# ::snt He made a careless mistake , as is often the case with him .
∃ REF2[6] SITUATION[4] ATTRIB[3] REF1[1] EVENT[7] EVENT[9] ENTITY[2] ENTITY[5] (
 case(ENTITY[5]) ∧
  REF1[1] = he ∧
   careless(ATTRIB[3]) ∧
    is_mistake_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
     REF2[6] = him ∧
      is_FACT_THAT(SITUATION[4], copula(EVENT[7], ENTITY[2], ENTITY[5]) ∧ with(EVENT[7]) = REF2[6]) ∧
       TMP_often(EVENT[7]) ∧
        past(EVENT[9]) ∧ made(EVENT[9], REF1[1], ENTITY[2]) ∧ as(EVENT[9]) = SITUATION[4])

# ::id 467_textbook_TANAKA;006_ID_15763;IE
# ::snt Please repair the car .
∃ EVENT[1] ENTITY[2] (car(ENTITY[2]) ∧ please(EVENT[1], IMPERATIVE(∃ EVENT[3] repair(EVENT[3], _, ENTITY[2]))))

# ::id 468_textbook_TANAKA;006_ID_110555;IE
# ::snt His project was funded by grants .
∃ REF1[2] EVENT[4] GROUP[3] ENTITY[1] (
 REF1[2] = his ∧
  is_project_POS(ENTITY[1], REF1[2]) ∧ grants(GROUP[3]) ∧ past(EVENT[4]) ∧ funded(EVENT[4], GROUP[3], ENTITY[1]))

# ::id 469_textbook_TANAKA;006_ID_6362;IE
# ::snt What did you do with those books ?
∃ GROUP[3] (
 books(GROUP[3]) ∧
  QUEST(∃ REF1[2] EVENT[4] ? ENTITY[1] (
        REF1[2] = you ∧
         past(EVENT[4]) ∧ did_do(EVENT[4], REF1[2], ENTITY[1]) ∧ with(EVENT[4]) = GROUP[3])))

# ::id 470_textbook_TANAKA;006_ID_64091;IE
# ::snt Three persons are missing with the flood .
∃ EVENT[3] GROUP[1] ENTITY[2] (
 flood(ENTITY[2]) ∧
  (CD_three(GROUP[1]), persons(GROUP[1])) ∧ are_missing(EVENT[3], GROUP[1]) ∧ with(EVENT[3]) = ENTITY[2])

# ::id 471_textbook_TANAKA;006_ID_26042;IE
# ::snt How much were the glasses ?
∃ GROUP[2] (
 glasses(GROUP[2]) ∧
  QUEST(∃ EVENT[3] ? ENTITY[1] (how_much(ENTITY[1]) ∧ past(EVENT[3]) ∧ copula(EVENT[3], GROUP[2], ENTITY[1]))))

# ::id 472_textbook_TANAKA;006_ID_5889;IE
# ::snt That copy differs from the original .
∃ EVENT[3] ENTITY[2] ENTITY[1] (copy(ENTITY[1]) ∧ original(ENTITY[2]) ∧ differs(EVENT[3], ENTITY[1]) ∧ from(EVENT[3]) = ENTITY[2])

# ::id 473_textbook_TANAKA;006_ID_25980;IE
# ::snt The student failed to account for the mistake .
∃ EVENT[4] EVENT[2] ENTITY[3] ENTITY[1] (
 student(ENTITY[1]) ∧
  mistake(ENTITY[3]) ∧
   past(EVENT[2]) ∧ failed(EVENT[2], ENTITY[1], account(EVENT[4], ENTITY[1]) ∧ for(EVENT[4]) = ENTITY[3]))

# ::id 474_textbook_TANAKA;006_ID_49917;IE
# ::snt Do n't be a copycat .
IMPERATIVE(¬ ∃ EVENT[2] ENTITY[1] (copycat(ENTITY[1]) ∧ do_copula(EVENT[2], _, ENTITY[1])))

# ::id 475_textbook_TANAKA;006_ID_64699;IE
# ::snt A bone stuck in my throat .
∃ REF1[3] EVENT[4] ENTITY[2] ENTITY[1] (
 bone(ENTITY[1]) ∧
  REF1[3] = my ∧
   is_throat_POS(ENTITY[2], REF1[3]) ∧
    past(EVENT[4]) ∧ stuck(EVENT[4], ENTITY[1]) ∧ in(EVENT[4]) = ENTITY[2])

# ::id 476_textbook_TANAKA;006_ID_136882;IE
# ::snt She is what is called a learned fool .
∃ ATTRIB[5] REF1[1] EVENT[6] EVENT[7] ENTITY[4] ENTITY[2] (
 REF1[1] = she ∧
  learned(ATTRIB[5]) ∧
   is_fool_ATTRIBUTE(ENTITY[4], ATTRIB[5]) ∧ is_called(EVENT[6], ENTITY[2], ENTITY[4]) ∧ copula(EVENT[7], REF1[1], ENTITY[2]))

# ::id 477_textbook_TANAKA;006_ID_30883;IE
# ::snt The dress is newly designed .
∃ EVENT[2] ENTITY[1] (dress(ENTITY[1]) ∧ ADV_newly(EVENT[2]) ∧ designed(EVENT[2], _, ENTITY[1]))

# ::id 478_textbook_TANAKA;006_ID_12685;IE
# ::snt You can not park your car here .
∃ REF1[1] (
 REF1[1] = you ∧
  MD_can(¬ ∃ REF2[3] EVENT[4] ENTITY[2] (
             REF2[3] = your ∧
              is_car_POS(ENTITY[2], REF2[3]) ∧ LOC_here(EVENT[4]) ∧ park(EVENT[4], REF1[1], ENTITY[2]))))

# ::id 479_textbook_TANAKA;006_ID_61973;IE
# ::snt It goes without saying that health is above wealth .
∃ SITUATION[1] EVENT[4] EVENT[6] ENTITY[3] ENTITY[2] ENTITY[5] (
 health(ENTITY[2]) ∧
  wealth(ENTITY[3]) ∧
   is_FACT_THAT(SITUATION[1], copula(EVENT[4], ENTITY[2]) ∧ above(EVENT[4]) = ENTITY[3]) ∧
    saying(ENTITY[5]) ∧ goes(EVENT[6], SITUATION[1]) ∧ without(EVENT[6]) = ENTITY[5])

# ::id 480_textbook_TANAKA;006_ID_69453;IE
# ::snt Children like playing more than studying .
∃ SITUATION[2] EVENT[3] GROUP[1] (
 Children(GROUP[1]) ∧
  is_FACT_THAT(SITUATION[2], playing(EVENT[3], GROUP[1])) ∧
   MORE SITUATION[5] EVENT[6] DEGREE[4] ((is_FACT_THAT(SITUATION[5], studying(EVENT[6])) ∧ is_than(DEGREE[4], SITUATION[5])),
    ∃ EVENT[7] (like(EVENT[7], GROUP[1], SITUATION[2]) ∧ MSR(EVENT[7]) = DEGREE[4])))

# ::id 481_textbook_TANAKA;006_ID_134603;IE
# ::snt She can not have forgotten my address .
∃ REF1[1] (
 REF1[1] = she ∧
  MD_can(¬ ∃ REF2[3] EVENT[4] ENTITY[2] (REF2[3] = my ∧ is_address_POS(ENTITY[2], REF2[3]) ∧ have_forgotten(EVENT[4], REF1[1], ENTITY[2]))))

# ::id 482_textbook_TANAKA;006_ID_107122;IE
# ::snt Heat turned ice into water .
∃ EVENT[4] ENTITY[3] ENTITY[2] ENTITY[1] (
 Heat(ENTITY[1]) ∧
  ice(ENTITY[2]) ∧
   water(ENTITY[3]) ∧ turned(EVENT[4], ENTITY[1], ENTITY[2]) ∧ into(EVENT[4]) = ENTITY[3])

# ::id 483_textbook_TANAKA;006_ID_18058;IE
# ::snt I am going to substantiate this theory .
∃ REF1[1] EVENT[4] EVENT[2] ENTITY[3] (theory(ENTITY[3]) ∧ REF1[1] = i ∧ am_going(EVENT[2], REF1[1], substantiate(EVENT[4], REF1[1], ENTITY[3])))

# ::id 484_textbook_TANAKA;006_ID_90254;IE
# ::snt You must not lose sight of your main object .
∃ REF1[1] (
 REF1[1] = you ∧
  MD_must(¬ ∃ ATTRIB[5] REF2[4] EVENT[6] ENTITY[3] ENTITY[2] (
             REF2[4] = your ∧
              main(ATTRIB[5]) ∧
               is_object_ATTRIBUTE(ENTITY[3], ATTRIB[5]) ∧ is_object_POS(ENTITY[3], REF2[4]) ∧
                is_sight_of(ENTITY[2], ENTITY[3]) ∧ lose(EVENT[6], REF1[1], ENTITY[2]))))

# ::id 485_textbook_TANAKA;006_ID_89038;IE
# ::snt You should make the most of this rare opportunity to demonstrate your talent .
∃ REF1[1] REF2[6] ATTRIB[4] EVENT[7] ENTITY[5] ENTITY[3] (
 rare(ATTRIB[4]) ∧
  REF2[6] = your ∧
   is_talent_POS(ENTITY[5], REF2[6]) ∧
    is_opportunity_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧ is_opportunity_to(ENTITY[3], demonstrate(EVENT[7], _, ENTITY[5])) ∧
     REF1[1] = you ∧ MD_should(MOST ENTITY[2] (is_of(ENTITY[2], ENTITY[3]), ∃ EVENT[8] make(EVENT[8], REF1[1], ENTITY[2]))))

# ::id 486_textbook_TANAKA;006_ID_94543;IE
# ::snt No matter how old one may be , one can learn .
¬ ∃ REF2[5] ENTITY[1] (
      is_matter_THAT(ENTITY[1],
       QUEST(∃ REF1[3] ? ATTRIB[2] (
             old(ATTRIB[2]) ∧
              REF1[3] = one ∧ MD_may(∃ EVENT[4] copula(EVENT[4], REF1[3], ATTRIB[2]))))) ∧
       REF2[5] = one ∧ MD_can(∃ EVENT[6] (learn(EVENT[6], REF2[5]) ∧ ADV(EVENT[6]) = ENTITY[1])))

# ::id 487_textbook_TANAKA;006_ID_104650;IE
# ::snt It is difficult to have one 's own house in Tokyo .
∃ ATTRIB[6] ATTRIB[4] SITUATION[1] EVENT[5] EVENT[7] ENTITY[3] ENTITY[2] (
 CD_one(ENTITY[3]) ∧
  own(ATTRIB[4]) ∧
   is_house_in(ENTITY[2], ENTITY[Tokyo]) ∧ is_house_ATTRIBUTE(ENTITY[2], ATTRIB[4]) ∧ is_house_POS(ENTITY[2], ENTITY[3]) ∧
    is_FACT_THAT(SITUATION[1], have(EVENT[5], _, ENTITY[2])) ∧
     difficult(ATTRIB[6]) ∧ copula(EVENT[7], SITUATION[1], ATTRIB[6]))

# ::id 488_textbook_TANAKA;006_ID_105247;IE
# ::snt No two men are of a mind .
∃ EVENT[3] ENTITY[2] GROUP[1] (
 (CD_no_two(GROUP[1]), men(GROUP[1])) ∧
  mind(ENTITY[2]) ∧ copula(EVENT[3], GROUP[1]) ∧ of(EVENT[3]) = ENTITY[2])

# ::id 489_textbook_TANAKA;006_ID_66749;IE
# ::snt When he got into trouble , he turned to his parents for help .
∀ REF1[1] EVENT[3] ENTITY[2] CND_When(
    REF1[1] = he ∧ trouble(ENTITY[2]) ∧ past(EVENT[3]) ∧
     got(EVENT[3], REF1[1]) ∧ into(EVENT[3]) = ENTITY[2],
    ∃ REF3[6] REF2[4] EVENT[8] ENTITY[7] GROUP[5] (
     REF2[4] = he ∧
      REF3[6] = his ∧
       is_parents_POS(GROUP[5], REF3[6]) ∧
        help(ENTITY[7]) ∧
         past(EVENT[8]) ∧
          turned(EVENT[8], REF2[4]) ∧ for(EVENT[8]) = ENTITY[7] ∧ to(EVENT[8]) = GROUP[5]))

# ::id 490_textbook_TANAKA;006_ID_62909;IE
# ::snt Keep on swimming up to your limit .
IMPERATIVE(∃ REF1[4] SITUATION[1] ENTITY[3] EVENT[2] EVENT[5] (
      is_FACT_THAT(SITUATION[1], swimming(EVENT[2])) ∧
       REF1[4] = your ∧
        is_limit_POS(ENTITY[3], REF1[4]) ∧ keep_on(EVENT[5], _, SITUATION[1]) ∧ up_to(EVENT[5]) = ENTITY[3]))

# ::id 491_textbook_TANAKA;006_ID_42252;IE
# ::snt Bob seldom writes to his parents .
∃ REF1[2] EVENT[3] GROUP[1] (
 REF1[2] = his ∧
  is_parents_POS(GROUP[1], REF1[2]) ∧
   TMP_seldom(EVENT[3]) ∧ writes(EVENT[3], ENTITY[Bob]) ∧ to(EVENT[3]) = GROUP[1])

# ::id 492_textbook_TANAKA;006_ID_39587;IE
# ::snt The mouse ran and the cat ran after him .
∃ REF1[4] EVENT[2] EVENT[5] ENTITY[1] ENTITY[3] (
 mouse(ENTITY[1]) ∧
  cat(ENTITY[3]) ∧
   past(EVENT[2]) ∧
    past(EVENT[5]) ∧
     REF1[4] = him ∧
      CONJ_and(ran(EVENT[2], ENTITY[1]), ran(EVENT[5], ENTITY[3]) ∧ after(EVENT[5]) = REF1[4]))

# ::id 493_textbook_TANAKA;006_ID_12613;IE
# ::snt I hereby declare the opening of the Olympic Games .
∃ REF1[1] ENTITY[2] (is_opening_of(ENTITY[2], GROUP[Olympic_Games]) ∧ REF1[1] = i ∧ MD_hereby(∃ EVENT[3] declare(EVENT[3], REF1[1], ENTITY[2])))

# ::id 494_textbook_TANAKA;006_ID_55285;IE
# ::snt If it gets dangerous , give me a call .
IMPERATIVE(∀ ATTRIB[2] REF1[1] EVENT[3] CND_If(REF1[1] = it ∧ dangerous(ATTRIB[2]) ∧ gets(EVENT[3], REF1[1], ATTRIB[2]), ∃ REF2[4] EVENT[6] ENTITY[5] (REF2[4] = me ∧ call(ENTITY[5]) ∧ give(EVENT[6], _, ENTITY[5], REF2[4]))))

# ::id 495_textbook_TANAKA;006_ID_109337;IE
# ::snt They say he is guilty , but I believe the contrary .
∃ REF3[6] ATTRIB[4] REF2[3] REF1[1] EVENT[5] EVENT[2] EVENT[8] ENTITY[7] (
 contrary(ENTITY[7]) ∧
  REF1[1] = they ∧
   REF2[3] = he ∧
    guilty(ATTRIB[4]) ∧
     REF3[6] = i ∧
      CONJ_but(say(EVENT[2], REF1[1], copula(EVENT[5], REF2[3], ATTRIB[4])),
       believe(EVENT[8], REF3[6], ENTITY[7])))

# ::id 496_textbook_TANAKA;006_ID_90270;IE
# ::snt Do n't make a promise which you can not keep .
IMPERATIVE(¬ ∃ REF1[3] EVENT[5] ENTITY[1] (
           REF1[3] = you ∧
            MD_can(¬ ∃ EVENT[4] keep(EVENT[4], REF1[3], ENTITY[1])) ∧ promise(ENTITY[1]) ∧
             do_make(EVENT[5], _, ENTITY[1])))

# ::id 497_textbook_TANAKA;006_ID_38249;IE
# ::snt Tom is more clever than honest .
∃ ATTRIB[2] ATTRIB[1] EVENT[3] (honest(ATTRIB[2]) ∧ is_more_clever_than(ATTRIB[1], ATTRIB[2]) ∧ copula(EVENT[3], ENTITY[Tom], ATTRIB[1]))

# ::id 498_textbook_TANAKA;006_ID_119788;IE
# ::snt He watched from away .
∃ ATTRIB[2] REF1[1] EVENT[3] (
 REF1[1] = he ∧
  ADV_away(ATTRIB[2]) ∧ past(EVENT[3]) ∧ watched(EVENT[3], REF1[1]) ∧ from(EVENT[3]) = ATTRIB[2])

# ::id 499_textbook_TANAKA;006_ID_135981;IE
# ::snt Her smile convinced me of her trust in me .
∃ REF4[6] REF3[5] REF2[3] REF1[2] EVENT[7] ENTITY[4] ENTITY[1] (
 REF1[2] = her ∧
  is_smile_POS(ENTITY[1], REF1[2]) ∧
   REF2[3] = me ∧
    REF3[5] = her ∧
     REF4[6] = me ∧
      is_trust_in(ENTITY[4], REF4[6]) ∧ is_trust_POS(ENTITY[4], REF3[5]) ∧
       convinced(EVENT[7], ENTITY[1], REF2[3]) ∧ of(EVENT[7]) = ENTITY[4])

# ::id 500_textbook_TANAKA;006_ID_12419;IE
# ::snt Let 's get off the bus here .
∃ ENTITY[3] (
 bus(ENTITY[3]) ∧
  IMPERATIVE(∃ REF1[2] EVENT[4] EVENT[1] (
        REF1[2] = 's ∧
         LOC_here(EVENT[4]) ∧
          let(EVENT[1], get(EVENT[4], REF1[2]) ∧ off(EVENT[4]) = ENTITY[3]))))

# ::id 501_textbook_TANAKA;006_ID_148784;IE
# ::snt I belong to the swimming club .
∃ REF1[1] EVENT[3] ENTITY[2] (swimming_club(ENTITY[2]) ∧ REF1[1] = i ∧ belong(EVENT[3], REF1[1]) ∧ to(EVENT[3]) = ENTITY[2])

# ::id 502_textbook_TANAKA;006_ID_38382;IE
# ::snt The truck bumped into a car .
∃ EVENT[3] ENTITY[2] ENTITY[1] (
 truck(ENTITY[1]) ∧
  car(ENTITY[2]) ∧ past(EVENT[3]) ∧ bumped(EVENT[3], ENTITY[1]) ∧ into(EVENT[3]) = ENTITY[2])

# ::id 503_textbook_TANAKA;006_ID_39935;IE
# ::snt Never go across the street without looking for cars first .
∃ ENTITY[1] (
 street(ENTITY[1]) ∧
  IMPERATIVE(∃ SITUATION[7] SITUATION[2] EVENT[4] EVENT[6] GROUP[3] (
        cars(GROUP[3]) ∧
         is_FACT_THAT(SITUATION[2], looking(EVENT[4]) ∧ for(EVENT[4]) = GROUP[3]) ∧
          TMP_never(SITUATION[7]) ∧
           TMP_first(EVENT[4]) ∧
            is_FACT_THAT(SITUATION[7],
             go(EVENT[6]) ∧ without(EVENT[6]) = SITUATION[2] ∧ across(EVENT[6]) = ENTITY[1]))))

# ::id 504_textbook_TANAKA;006_ID_124586;IE
# ::snt He put down his thoughts in his notebook .
∃ REF3[5] REF2[3] REF1[1] EVENT[6] ENTITY[4] GROUP[2] (
 REF1[1] = he ∧
  REF2[3] = his ∧
   is_thoughts_POS(GROUP[2], REF2[3]) ∧
    REF3[5] = his ∧
     is_notebook_POS(ENTITY[4], REF3[5]) ∧
      past(EVENT[6]) ∧ put_down(EVENT[6], REF1[1], GROUP[2]) ∧ in(EVENT[6]) = ENTITY[4])

# ::id 505_textbook_TANAKA;006_ID_82852;IE
# ::snt I do n't agree with violation of human rights .
∃ REF1[1] (
 REF1[1] = i ∧
  ¬ ∃ ATTRIB[4] EVENT[5] GROUP[3] ENTITY[2] (
        human(ATTRIB[4]) ∧
         is_rights_ATTRIBUTE(GROUP[3], ATTRIB[4]) ∧
          is_violation_of(ENTITY[2], GROUP[3]) ∧ do_agree(EVENT[5], REF1[1]) ∧ with(EVENT[5]) = ENTITY[2]))

# ::id 506_textbook_TANAKA;006_ID_12381;IE
# ::snt I have a pain here .
∃ REF1[1] EVENT[3] ENTITY[2] (REF1[1] = i ∧ pain(ENTITY[2]) ∧ LOC_here(EVENT[3]) ∧ have(EVENT[3], REF1[1], ENTITY[2]))

# ::id 507_textbook_TANAKA;006_ID_103317;IE
# ::snt There is no sugar left in the pot .
∃ ENTITY[3] (
 pot(ENTITY[3]) ∧
  ¬ ∃ ENTITY[1] EVENT[4] EVENT[5] (
        left(EVENT[4], _, ENTITY[1]) ∧ in(EVENT[4]) = ENTITY[3] ∧ sugar(ENTITY[1]) ∧
         copula(EVENT[5], ENTITY[1])))

# ::id 508_textbook_TANAKA;006_ID_121107;IE
# ::snt He lay on his back .
∃ REF2[3] REF1[1] EVENT[4] ENTITY[2] (
 REF1[1] = he ∧
  REF2[3] = his ∧
   is_back_POS(ENTITY[2], REF2[3]) ∧
    past(EVENT[4]) ∧ lay(EVENT[4], REF1[1]) ∧ on(EVENT[4]) = ENTITY[2])

# ::id 509_textbook_TANAKA;006_ID_111424;IE
# ::snt Humor is absent in his way of thinking .
∃ REF1[4] ATTRIB[2] EVENT[6] ENTITY[5] ENTITY[3] ENTITY[1] (
 Humor(ENTITY[1]) ∧
  REF1[4] = his ∧
   thinking(ENTITY[5]) ∧
    is_way_of(ENTITY[3], ENTITY[5]) ∧ is_way_POS(ENTITY[3], REF1[4]) ∧
     is_absent_in(ATTRIB[2], ENTITY[3]) ∧ copula(EVENT[6], ENTITY[1], ATTRIB[2]))

# ::id 510_textbook_TANAKA;006_ID_153639;IE
# ::snt Will you make a list of issues to discuss ?
QUEST(MD_will(∃ REF1[1] EVENT[5] EVENT[4] GROUP[3] ENTITY[2] (
           REF1[1] = you ∧
            issues(GROUP[3]) ∧
             is_list_of(ENTITY[2], GROUP[3]) ∧
              make(EVENT[4], REF1[1], ENTITY[2], discuss(EVENT[5], ENTITY[2])))))

# ::id 511_textbook_TANAKA;006_ID_118968;IE
# ::snt He took the first place in the race .
∃ REF1[1] ATTRIB[3] EVENT[5] ENTITY[4] ENTITY[2] (
 first(ATTRIB[3]) ∧
  is_place_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
   race(ENTITY[4]) ∧
    REF1[1] = he ∧
     past(EVENT[5]) ∧ took(EVENT[5], REF1[1], ENTITY[2]) ∧ in(EVENT[5]) = ENTITY[4])

# ::id 512_textbook_TANAKA;006_ID_126899;IE
# ::snt He held his breath .
∃ REF2[3] REF1[1] EVENT[4] ENTITY[2] (
 REF1[1] = he ∧
  REF2[3] = his ∧ is_breath_POS(ENTITY[2], REF2[3]) ∧ past(EVENT[4]) ∧ held(EVENT[4], REF1[1], ENTITY[2]))

# ::id 513_textbook_TANAKA;006_ID_97507;IE
# ::snt You should act on your teacher 's advice .
∃ REF1[1] (
 REF1[1] = you ∧
  MD_should(∃ REF2[4] EVENT[5] ENTITY[3] ENTITY[2] (
        REF2[4] = your ∧
         is_teacher_POS(ENTITY[3], REF2[4]) ∧
          is_advice_POS(ENTITY[2], ENTITY[3]) ∧ act(EVENT[5], REF1[1]) ∧ on(EVENT[5]) = ENTITY[2])))

# ::id 514_textbook_TANAKA;006_ID_93662;IE
# ::snt Please send us more information .
∃ EVENT[1] please(EVENT[1],
 IMPERATIVE(∃ REF1[2] (REF1[2] = us ∧ MORE ENTITY[3] (information(ENTITY[3]), ∃ EVENT[4] send(EVENT[4], _, ENTITY[3], REF1[2])))))

# ::id 515_textbook_TANAKA;006_ID_123777;IE
# ::snt He stood godfather to my first son .
∃ ATTRIB[5] REF2[4] REF1[1] EVENT[6] ENTITY[3] ENTITY[2] (
 REF1[1] = he ∧
  REF2[4] = my ∧
   first(ATTRIB[5]) ∧
    is_son_ATTRIBUTE(ENTITY[3], ATTRIB[5]) ∧ is_son_POS(ENTITY[3], REF2[4]) ∧
     is_godfather_to(ENTITY[2], ENTITY[3]) ∧ past(EVENT[6]) ∧ stood(EVENT[6], REF1[1], ENTITY[2]))

# ::id 516_textbook_TANAKA;006_ID_12397;IE
# ::snt Between ourselves , this article is selling slowly .
∃ REF1[1] EVENT[3] ENTITY[2] (
 article(ENTITY[2]) ∧
  REF1[1] = ourselves ∧ ADV_slowly(EVENT[3]) ∧ is_selling(EVENT[3], ENTITY[2]) ∧ Between(EVENT[3]) = REF1[1])

# ::id 517_textbook_TANAKA;006_ID_15098;IE
# ::snt Please take charge of this key .
∃ EVENT[1] ENTITY[3] (
 key(ENTITY[3]) ∧
  please(EVENT[1], IMPERATIVE(∃ EVENT[4] ENTITY[2] (is_charge_of(ENTITY[2], ENTITY[3]) ∧ take(EVENT[4], _, ENTITY[2])))))

# ::id 518_textbook_TANAKA;006_ID_140304;IE
# ::snt She came last .
∃ REF1[1] EVENT[2] (REF1[1] = she ∧ ADV_last(EVENT[2]) ∧ past(EVENT[2]) ∧ came(EVENT[2], REF1[1]))

# ::id 519_textbook_TANAKA;006_ID_109069;IE
# ::snt The bigger words he used , the harder it was to find anything inside of them .
∃ REF2[10] SITUATION[8] ATTRIB[7] REF1[4] ATTRIB[2] EVENT[14] EVENT[5] EVENT[11] EVENT[13] ENTITY[6] GROUP[1] (
 bigger(ATTRIB[2]) ∧
  REF1[4] = he ∧
   used(EVENT[5], REF1[4], GROUP[1]) ∧ is_words_ATTRIBUTE(GROUP[1], ATTRIB[2]) ∧
    harder(ATTRIB[7]) ∧
     REF2[10] = them ∧
      is_FACT_THAT(SITUATION[8], ANY ENTITY[9] (thing(ENTITY[9]), find(EVENT[11], _, ENTITY[9]))) ∧
       is_ATTRIBUTE(ENTITY[6], ATTRIB[7]) ∧ is_THAT(ENTITY[6], copula(EVENT[13], SITUATION[8])) ∧
        past(EVENT[5]) ∧
         is_LOC_inside_of(EVENT[11], REF2[10]) ∧
          past(EVENT[13]) ∧
           xxx(EVENT[14]) ∧ LINK(EVENT[14]) = GROUP[1] ∧ LINK(EVENT[14]) = ENTITY[6])

# ::id 520_textbook_TANAKA;006_ID_99677;IE
# ::snt The world has seen a lot of changes in many fields .
∃ GROUP[3] ENTITY[2] ENTITY[1] (
 world(ENTITY[1]) ∧
  changes(GROUP[3]) ∧
   is_lot_of(ENTITY[2], GROUP[3]) ∧
    MANY GROUP[4] (fields(GROUP[4]), ∃ EVENT[5] (has_seen(EVENT[5], ENTITY[1], ENTITY[2]) ∧ in(EVENT[5]) = GROUP[4])))

# ::id 521_textbook_TANAKA;006_ID_25318;IE
# ::snt The exercise took years off me .
∃ REF1[3] EVENT[4] GROUP[2] ENTITY[1] (
 exercise(ENTITY[1]) ∧
  years(GROUP[2]) ∧
   REF1[3] = me ∧
    past(EVENT[4]) ∧ took(EVENT[4], ENTITY[1], GROUP[2]) ∧ off(EVENT[4]) = REF1[3])

# ::id 522_textbook_TANAKA;006_ID_139208;IE
# ::snt She drew a circle on a piece of paper with a pencil .
∃ REF1[1] EVENT[6] ENTITY[4] ENTITY[5] ENTITY[3] ENTITY[2] (
 REF1[1] = she ∧
  circle(ENTITY[2]) ∧
   paper(ENTITY[4]) ∧
    is_piece_of(ENTITY[3], ENTITY[4]) ∧
     pencil(ENTITY[5]) ∧
      past(EVENT[6]) ∧
       drew(EVENT[6], REF1[1], ENTITY[2]) ∧ with(EVENT[6]) = ENTITY[5] ∧ on(EVENT[6]) = ENTITY[3])

# ::id 523_textbook_TANAKA;006_ID_140158;IE
# ::snt She is very becoming in a black party dress .
∃ ATTRIB[3] REF1[1] EVENT[4] ENTITY[2] (
 REF1[1] = she ∧
  black(ATTRIB[3]) ∧
   is_party_dress_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
    ADV_very(EVENT[4]) ∧ is_becoming(EVENT[4], REF1[1]) ∧ in(EVENT[4]) = ENTITY[2])

# ::id 524_textbook_TANAKA;006_ID_98862;IE
# ::snt We have a good view of the sea from the window .
∃ ATTRIB[3] REF1[1] EVENT[6] ENTITY[2] ENTITY[5] ENTITY[4] (
 sea(ENTITY[4]) ∧
  window(ENTITY[5]) ∧
   REF1[1] = we ∧
    good(ATTRIB[3]) ∧
     is_view_from(ENTITY[2], ENTITY[5]) ∧ is_view_of(ENTITY[2], ENTITY[4]) ∧ is_view_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
      have(EVENT[6], REF1[1], ENTITY[2]))

# ::id 525_textbook_TANAKA;006_ID_124104;IE
# ::snt He is making every possible effort to pass the examination .
∃ REF1[1] ENTITY[4] (
 examination(ENTITY[4]) ∧
  REF1[1] = he ∧
   ∀ ATTRIB[3] EVENT[5] ENTITY[2] (
    (possible(ATTRIB[3]) ∧
     is_effort_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ is_effort_to(ENTITY[2], pass(EVENT[5], _, ENTITY[4]))) →
    ∃ EVENT[6] is_making(EVENT[6], REF1[1], ENTITY[2])))

# ::id 526_textbook_TANAKA;006_ID_20774;IE
# ::snt From San Francisco to New York .
∃ EVENT[1] (xxx(EVENT[1]) ∧ to(EVENT[1]) = ENTITY[New_York] ∧ From(EVENT[1]) = ENTITY[San_Francisco])

# ::id 527_textbook_TANAKA;006_ID_28815;IE
# ::snt War broke out when the treaty was ignored .
∃ EVENT[3] EVENT[4] ENTITY[1] ENTITY[2] (
 treaty(ENTITY[2]) ∧
  War(ENTITY[1]) ∧
   past(EVENT[3]) ∧ past(EVENT[4]) ∧ CRD_when(was_ignored(EVENT[3], ENTITY[2]), broke_out(EVENT[4], ENTITY[1])))

# ::id 528_textbook_TANAKA;006_ID_129969;IE
# ::snt He puts ten dollars aside every week .
∀ TIME[1] (week(TIME[1]) →
 ∃ REF1[2] EVENT[4] GROUP[3] (
  REF1[2] = he ∧
   (CD_ten(GROUP[3]), dollars(GROUP[3])) ∧
    ADV_aside(EVENT[4]) ∧ puts(EVENT[4], REF1[2], GROUP[3]) ∧ is_contained_in(TMP(EVENT[4]), TIME[1])))

# ::id 529_textbook_TANAKA;006_ID_65696;IE
# ::snt It is not easy to be an umpire today .
∃ SITUATION[1] EVENT[4] TIME[3] ENTITY[2] (
 umpire(ENTITY[2]) ∧
  today(TIME[3]) ∧
   is_FACT_THAT(SITUATION[1], copula(EVENT[4], _, ENTITY[2]) ∧ is_contained_in(TMP(EVENT[4]), TIME[3])) ∧
    ¬ ∃ ATTRIB[5] EVENT[6] (easy(ATTRIB[5]) ∧ copula(EVENT[6], SITUATION[1], ATTRIB[5])))

# ::id 530_textbook_TANAKA;006_ID_24965;IE
# ::snt The boxer lost his weight for the match .
∃ REF1[3] EVENT[5] ENTITY[2] ENTITY[4] ENTITY[1] (
 boxer(ENTITY[1]) ∧
  match(ENTITY[4]) ∧
   REF1[3] = his ∧
    is_weight_POS(ENTITY[2], REF1[3]) ∧
     past(EVENT[5]) ∧ lost(EVENT[5], ENTITY[1], ENTITY[2]) ∧ for(EVENT[5]) = ENTITY[4])

# ::id 531_textbook_TANAKA;006_ID_109916;IE
# ::snt He has as many as five brothers .
∃ REF1[1] (
 REF1[1] = he ∧
  AS_MANY GROUP[3] ENTITY[2] (((CD_five(GROUP[3]), brothers(GROUP[3])) ∧ is_as(ENTITY[2], GROUP[3])),
   ∃ EVENT[4] has(EVENT[4], REF1[1], ENTITY[2])))

# ::id 532_textbook_TANAKA;006_ID_143006;IE
# ::snt She spoke up for him .
∃ REF2[2] REF1[1] EVENT[3] (
 REF1[1] = she ∧
  REF2[2] = him ∧ past(EVENT[3]) ∧ spoke_up(EVENT[3], REF1[1]) ∧ for(EVENT[3]) = REF2[2])

# ::id 533_textbook_TANAKA;006_ID_143941;IE
# ::snt She kept all medicine away from children .
∃ REF1[1] (
 REF1[1] = she ∧
  ALL ENTITY[2] (medicine(ENTITY[2]),
   ∃ EVENT[4] GROUP[3] (
    children(GROUP[3]) ∧
     DIR_away(EVENT[4]) ∧
      past(EVENT[4]) ∧ kept(EVENT[4], REF1[1], ENTITY[2]) ∧ from(EVENT[4]) = GROUP[3])))

# ::id 534_textbook_TANAKA;006_ID_71706;IE
# ::snt We had a good time playing cards .
∃ ATTRIB[3] REF1[1] EVENT[6] EVENT[5] GROUP[4] ENTITY[2] (
 REF1[1] = we ∧
  good(ATTRIB[3]) ∧
   is_time_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
    cards(GROUP[4]) ∧
     past(EVENT[6]) ∧ CONJ_and(had(EVENT[6], REF1[1], ENTITY[2]), playing(EVENT[5], ENTITY[2], GROUP[4])))

# ::id 535_textbook_TANAKA;006_ID_137632;IE
# ::snt She likes the design on the plate .
∃ REF1[1] EVENT[4] ENTITY[3] ENTITY[2] (
 design(ENTITY[2]) ∧
  plate(ENTITY[3]) ∧
   REF1[1] = she ∧ likes(EVENT[4], REF1[1], ENTITY[2]) ∧ on(EVENT[4]) = ENTITY[3])

# ::id 536_textbook_TANAKA;006_ID_137600;IE
# ::snt She is anxious to know the results .
∃ ATTRIB[2] REF1[1] EVENT[4] EVENT[5] GROUP[3] (
 results(GROUP[3]) ∧
  REF1[1] = she ∧
   is_anxious_to(ATTRIB[2], know(EVENT[4], _, GROUP[3])) ∧ copula(EVENT[5], REF1[1], ATTRIB[2]))

# ::id 537_textbook_TANAKA;006_ID_43176;IE
# ::snt She looks as if she were drunk .
∃ ATTRIB[4] REF2[3] SITUATION[2] REF1[1] EVENT[5] EVENT[6] (
 REF1[1] = she ∧
  REF2[3] = she ∧
   drunk(ATTRIB[4]) ∧
    is_FACT_THAT(SITUATION[2], copula(EVENT[5], REF2[3], ATTRIB[4])) ∧
     past(EVENT[5]) ∧ looks(EVENT[6], REF1[1]) ∧ as_if(EVENT[6]) = SITUATION[2])

# ::id 538_textbook_TANAKA;006_ID_99573;IE
# ::snt A number of countries have strict laws against drugs .
∃ ATTRIB[4] EVENT[6] GROUP[2] GROUP[5] GROUP[3] ENTITY[1] (
 countries(GROUP[2]) ∧
  is_number_of(ENTITY[1], GROUP[2]) ∧
   strict(ATTRIB[4]) ∧
    drugs(GROUP[5]) ∧
     is_laws_against(GROUP[3], GROUP[5]) ∧ is_laws_ATTRIBUTE(GROUP[3], ATTRIB[4]) ∧ have(EVENT[6], ENTITY[1], GROUP[3]))

# ::id 539_textbook_TANAKA;006_ID_42687;IE
# ::snt It 's getting warmer and warmer .
∃ ATTRIB[3] ATTRIB[2] REF1[1] EVENT[4] EVENT[4] (
 REF1[1] = it ∧
  warmer(ATTRIB[2]) ∧
   warmer(ATTRIB[3]) ∧ CONJ_and('s_getting(EVENT[4], REF1[1], ATTRIB[2]), 's_getting(EVENT[4], REF1[1], ATTRIB[3])))

# ::id 540_textbook_TANAKA;006_ID_105175;IE
# ::snt Animal bodies are made up of cells .
∃ EVENT[3] GROUP[2] GROUP[1] (
 Animal_bodies(GROUP[1]) ∧
  cells(GROUP[2]) ∧ made_up(EVENT[3], _, GROUP[1]) ∧ of(EVENT[3]) = GROUP[2])

# ::id 541_textbook_TANAKA;006_ID_42507;IE
# ::snt Mike has a few friends in Florida .
FEW GROUP[1] (is_friends_in(GROUP[1], ENTITY[Florida]), ∃ EVENT[2] has(EVENT[2], ENTITY[Mike], GROUP[1]))

# ::id 542_textbook_TANAKA;006_ID_142952;IE
# ::snt She felt regret for having been rude to him .
∃ REF2[5] ATTRIB[4] SITUATION[3] REF1[1] EVENT[6] EVENT[7] ENTITY[2] (
 REF1[1] = she ∧
  REF2[5] = him ∧
   is_rude_to(ATTRIB[4], REF2[5]) ∧
    is_FACT_THAT(SITUATION[3], having_copula(EVENT[6], _, ATTRIB[4])) ∧
     is_regret_for(ENTITY[2], SITUATION[3]) ∧ past(EVENT[7]) ∧ felt(EVENT[7], REF1[1], ENTITY[2]))

# ::id 543_textbook_TANAKA;006_ID_141093;IE
# ::snt She advanced the hands on the clock .
∃ REF1[1] EVENT[4] ENTITY[3] GROUP[2] (
 hands(GROUP[2]) ∧
  clock(ENTITY[3]) ∧
   REF1[1] = she ∧
    past(EVENT[4]) ∧ advanced(EVENT[4], REF1[1], GROUP[2]) ∧ on(EVENT[4]) = ENTITY[3])

# ::id 544_textbook_TANAKA;006_ID_21998;IE
# ::snt John 's mother looks so young that she is often mistaken for his elder sister .
∃ ATTRIB[6] REF2[5] REF1[3] ATTRIB[2] EVENT[7] EVENT[9] ENTITY[4] ENTITY[1] (
 is_mother_POS(ENTITY[1], ENTITY[John]) ∧
  REF1[3] = she ∧
   REF2[5] = his ∧
    elder(ATTRIB[6]) ∧
     is_sister_ATTRIBUTE(ENTITY[4], ATTRIB[6]) ∧ is_sister_POS(ENTITY[4], REF2[5]) ∧
      is_so_young_THAT(ATTRIB[2], mistaken(EVENT[7], _, REF1[3]) ∧ for(EVENT[7]) = ENTITY[4]) ∧
       TMP_often(EVENT[7]) ∧ looks(EVENT[9], ENTITY[1], ATTRIB[2]))

# ::id 545_textbook_TANAKA;006_ID_162573;IE
# ::snt Secondly , the literacy rate in Europe of that time was low .
∃ ATTRIB[3] EVENT[4] ENTITY[2] ENTITY[1] (
 time(ENTITY[2]) ∧
  is_literacy_rate_of(ENTITY[1], ENTITY[2]) ∧ is_literacy_rate_in(ENTITY[1], ENTITY[Europe]) ∧
   low(ATTRIB[3]) ∧ ADV_secondly(EVENT[4]) ∧ past(EVENT[4]) ∧ copula(EVENT[4], ENTITY[1], ATTRIB[3]))

# ::id 546_textbook_TANAKA;006_ID_72553;IE
# ::snt We saw the sun sink below the horizon .
∃ REF1[1] EVENT[5] EVENT[2] ENTITY[4] ENTITY[3] (
 sun(ENTITY[3]) ∧
  horizon(ENTITY[4]) ∧
   REF1[1] = we ∧
    past(EVENT[2]) ∧
     saw(EVENT[2], REF1[1], sink(EVENT[5], ENTITY[3]) ∧ below(EVENT[5]) = ENTITY[4]))

# ::id 547_textbook_TANAKA;006_ID_90285;IE
# ::snt My hands are stained with paint .
∃ REF1[2] EVENT[4] ENTITY[3] GROUP[1] (
 REF1[2] = my ∧
  is_hands_POS(GROUP[1], REF1[2]) ∧
   paint(ENTITY[3]) ∧ are_stained(EVENT[4], GROUP[1]) ∧ with(EVENT[4]) = ENTITY[3])

# ::id 548_textbook_TANAKA;006_ID_138368;IE
# ::snt She made elaborate preparations for the party .
∃ ATTRIB[3] REF1[1] EVENT[5] GROUP[2] ENTITY[4] (
 party(ENTITY[4]) ∧
  REF1[1] = she ∧
   elaborate(ATTRIB[3]) ∧
    is_preparations_ATTRIBUTE(GROUP[2], ATTRIB[3]) ∧
     past(EVENT[5]) ∧ made(EVENT[5], REF1[1], GROUP[2]) ∧ for(EVENT[5]) = ENTITY[4])

# ::id 549_textbook_TANAKA;006_ID_162572;IE
# ::snt Recently my haemorrhoids , which I 've had from before , are painful .
∃ SITUATION[9] ATTRIB[7] REF2[4] REF1[2] EVENT[5] EVENT[8] GROUP[1] (
 REF1[2] = my ∧
  REF2[4] = i ∧
   've_had(EVENT[5], REF2[4]) ∧ from(EVENT[5]) = GROUP[1] ∧ is_haemorrhoids_POS(GROUP[1], REF1[2]) ∧
    painful(ATTRIB[7]) ∧
     TMP_recently(SITUATION[9]) ∧ TMP_before(EVENT[5]) ∧ is_FACT_THAT(SITUATION[9], copula(EVENT[8], GROUP[1], ATTRIB[7])))

# ::id 550_textbook_TANAKA;006_ID_98700;IE
# ::snt Come home early , Bill .
IMPERATIVE(∃ EVENT[2] ENTITY[1] (
      home(ENTITY[1]) ∧
       TMP_early(EVENT[2]) ∧
        come(EVENT[2]) ∧ DIR(EVENT[2]) = ENTITY[1] ∧ VOC(EVENT[2]) = ENTITY[Bill]))

# ::id 551_textbook_TANAKA;006_ID_54267;IE
# ::snt He is not handsome , to be sure , but he is good-natured .
∃ ATTRIB[8] REF2[7] ATTRIB[4] ADT[3] ATTRIB[2] REF1[1] EVENT[5] EVENT[9] (
 REF1[1] = he ∧
  handsome(ATTRIB[2]) ∧
   sure(ATTRIB[4]) ∧
    is_FACT_THAT(ADT[3], copula(EVENT[5], REF1[1], ATTRIB[4])) ∧
     REF2[7] = he ∧
      good-natured(ATTRIB[8]) ∧
       CONJ_but(¬ ∃ EVENT[6] (copula(EVENT[6], REF1[1], ATTRIB[2]) ∧ ADT(EVENT[6]) = ADT[3]),
        copula(EVENT[9], REF2[7], ATTRIB[8])))

# ::id 552_textbook_TANAKA;006_ID_21399;IE
# ::snt Jim pulled a muscle in his leg while skiing .
∃ REF1[3] EVENT[4] EVENT[5] ENTITY[2] ENTITY[1] (
 muscle(ENTITY[1]) ∧
  REF1[3] = his ∧
   is_leg_POS(ENTITY[2], REF1[3]) ∧
    past(EVENT[5]) ∧
     CRD_while(skiing(EVENT[4], ENTITY[1]), pulled(EVENT[5], ENTITY[Jim], ENTITY[1]) ∧ in(EVENT[5]) = ENTITY[2]))

# ::id 553_textbook_TANAKA;006_ID_25456;IE
# ::snt It was getting louder and louder .
∃ ATTRIB[3] ATTRIB[2] REF1[1] EVENT[4] EVENT[4] (
 REF1[1] = it ∧
  louder(ATTRIB[2]) ∧
   louder(ATTRIB[3]) ∧
    past(EVENT[4]) ∧
     past(EVENT[4]) ∧ CONJ_and(was_getting(EVENT[4], REF1[1], ATTRIB[2]), was_getting(EVENT[4], REF1[1], ATTRIB[3])))

# ::id 554_textbook_TANAKA;006_ID_61074;IE
# ::snt The police roped off the street near the spot .
∃ ATTRIB[3] EVENT[5] ENTITY[4] ENTITY[2] ENTITY[1] (
 police(ENTITY[1]) ∧
  street(ENTITY[2]) ∧
   spot(ENTITY[4]) ∧
    is_near_comp(ATTRIB[3], ENTITY[4]) ∧
     past(EVENT[5]) ∧
      roped(EVENT[5], ENTITY[1]) ∧ LOC(EVENT[5]) = ATTRIB[3] ∧ off(EVENT[5]) = ENTITY[2])

# ::id 555_textbook_TANAKA;006_ID_103506;IE
# ::snt The thief ran away and the policeman ran after him .
∃ REF1[5] EVENT[2] EVENT[6] ENTITY[1] ENTITY[4] (
 thief(ENTITY[1]) ∧
  policeman(ENTITY[4]) ∧
   DIR_away(EVENT[2]) ∧
    past(EVENT[2]) ∧
     past(EVENT[6]) ∧
      REF1[5] = him ∧
       CONJ_and(ran(EVENT[2], ENTITY[1]), ran(EVENT[6], ENTITY[4]) ∧ after(EVENT[6]) = REF1[5]))

# ::id 556_textbook_TANAKA;006_ID_47546;IE
# ::snt Although there are various differences , Joan and Ann are friends .
∃ ATTRIB[3] SITUATION[1] EVENT[4] EVENT[7] GROUP[2] GROUP[6] GROUP[5] (
 various(ATTRIB[3]) ∧
  is_differences_ATTRIBUTE(GROUP[2], ATTRIB[3]) ∧
   is_FACT_THAT(SITUATION[1], copula(EVENT[4], GROUP[2])) ∧
    is_element_of(ENTITY[Joan], GROUP[5]) ∧ is_element_of(ENTITY[Ann], GROUP[5]) ∧
     friends(GROUP[6]) ∧ copula(EVENT[7], GROUP[5], GROUP[6]) ∧ Although(EVENT[7]) = SITUATION[1])

# ::id 557_textbook_TANAKA;006_ID_103636;IE
# ::snt Iron is harder than gold .
∃ ATTRIB[2] EVENT[4] ENTITY[3] ENTITY[1] (Iron(ENTITY[1]) ∧ gold(ENTITY[3]) ∧ is_harder_than(ATTRIB[2], ENTITY[3]) ∧ copula(EVENT[4], ENTITY[1], ATTRIB[2]))

# ::id 558_textbook_TANAKA;006_ID_131594;IE
# ::snt They are both school children .
∃ REF1[1] (REF1[1] = they ∧ BOTH GROUP[2] (school_children(GROUP[2]), ∃ EVENT[3] copula(EVENT[3], REF1[1], GROUP[2])))

# ::id 559_textbook_TANAKA;006_ID_45191;IE
# ::snt You must learn to be more careful .
∃ REF1[1] (
 REF1[1] = you ∧
  MD_must(∃ ATTRIB[3] EVENT[4] EVENT[2] (more_careful(ATTRIB[3]) ∧ learn(EVENT[2], REF1[1], copula(EVENT[4], REF1[1], ATTRIB[3])))))

# ::id 560_textbook_TANAKA;006_ID_3930;IE
# ::snt When did you visit New York ?
QUEST(∃ REF1[2] EVENT[3] ? TIME[1] (
      REF1[2] = you ∧
       is_TMP(EVENT[3], TIME[1]) ∧ past(EVENT[3]) ∧ did_visit(EVENT[3], REF1[2], ENTITY[New_York])))

# ::id 561_textbook_TANAKA;006_ID_97000;IE
# ::snt A baby comes to chew foods .
∃ PRP[2] EVENT[4] EVENT[5] GROUP[3] ENTITY[1] (
 baby(ENTITY[1]) ∧
  foods(GROUP[3]) ∧
   is_FACT_THAT(PRP[2], chew(EVENT[4], ENTITY[1], GROUP[3])) ∧
    comes(EVENT[5], ENTITY[1]) ∧ PRP(EVENT[5]) = PRP[2])

# ::id 562_textbook_TANAKA;006_ID_10717;IE
# ::snt There were quite a few passengers on board the ship .
∃ ENTITY[3] (
 ship(ENTITY[3]) ∧
  QUITE_A_FEW ENTITY[2] GROUP[1] ((is_board_COM(ENTITY[2], ENTITY[3]) ∧ is_passengers_on(GROUP[1], ENTITY[2])),
   ∃ EVENT[4] (past(EVENT[4]) ∧ copula(EVENT[4], GROUP[1]))))

# ::id 563_textbook_TANAKA;006_ID_131557;IE
# ::snt They go to shop .
∃ PRP[2] REF1[1] EVENT[3] EVENT[4] (
 REF1[1] = they ∧
  is_FACT_THAT(PRP[2], shop(EVENT[3], REF1[1])) ∧ go(EVENT[4], REF1[1]) ∧ PRP(EVENT[4]) = PRP[2])

# ::id 564_textbook_TANAKA;006_ID_29801;IE
# ::snt The news hit me like a bolt from the blue .
∃ ATTRIB[3] REF1[2] EVENT[7] EVENT[6] ENTITY[4] ENTITY[5] ENTITY[1] (
 news(ENTITY[1]) ∧
  blue(ENTITY[5]) ∧
   REF1[2] = me ∧
    is_bolt_from(ENTITY[4], ENTITY[5]) ∧
     is_like_comp(ATTRIB[3], ENTITY[4]) ∧
      past(EVENT[7]) ∧ CONJ_and(hit(EVENT[7], ENTITY[1], REF1[2]), xxx(EVENT[6], REF1[2], ATTRIB[3])))

# ::id 565_textbook_TANAKA;006_ID_46988;IE
# ::snt Aoi is a very good dancer .
∃ ATTRIB[2] EVENT[3] ENTITY[1] (very_good(ATTRIB[2]) ∧ is_dancer_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧ copula(EVENT[3], ENTITY[Aoi], ENTITY[1]))

# ::id 566_textbook_TANAKA;006_ID_144115;IE
# ::snt She returned from a trip .
∃ REF1[1] EVENT[3] ENTITY[2] (
 REF1[1] = she ∧
  trip(ENTITY[2]) ∧ past(EVENT[3]) ∧ returned(EVENT[3], REF1[1]) ∧ from(EVENT[3]) = ENTITY[2])

# ::id 567_textbook_TANAKA;006_ID_99079;IE
# ::snt Hold your breath , please .
∃ EVENT[1] please(EVENT[1],
 IMPERATIVE(∃ REF1[3] EVENT[4] ENTITY[2] (REF1[3] = your ∧ is_breath_POS(ENTITY[2], REF1[3]) ∧ hold(EVENT[4], _, ENTITY[2]))))

# ::id 568_textbook_TANAKA;006_ID_3117;IE
# ::snt How old is your uncle ?
QUEST(∃ REF1[3] EVENT[4] ENTITY[2] ? ATTRIB[1] (
      old(ATTRIB[1]) ∧
       REF1[3] = your ∧ is_uncle_POS(ENTITY[2], REF1[3]) ∧ copula(EVENT[4], ENTITY[2], ATTRIB[1])))

# ::id 569_textbook_TANAKA;006_ID_9288;IE
# ::snt I can 't go along with what you said .
∃ REF1[1] (
 REF1[1] = i ∧
  MD_can(¬ ∃ REF2[4] EVENT[5] EVENT[6] ENTITY[2] (
             REF2[4] = you ∧
              said(EVENT[5], REF2[4], ENTITY[2]) ∧
               past(EVENT[5]) ∧ go_along(EVENT[6], REF1[1]) ∧ with(EVENT[6]) = ENTITY[2])))

# ::id 570_textbook_TANAKA;006_ID_105773;IE
# ::snt Where is the south terminal ?
∃ ATTRIB[3] ENTITY[2] (
 south(ATTRIB[3]) ∧
  is_terminal_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ QUEST(∃ EVENT[4] ? ENTITY[1] (is_ADV(EVENT[4], ENTITY[1]) ∧ copula(EVENT[4], ENTITY[2]))))

# ::id 571_textbook_TANAKA;006_ID_75135;IE
# ::snt There is a castle in my town .
∃ REF1[3] EVENT[4] ENTITY[2] ENTITY[1] (
 castle(ENTITY[1]) ∧
  REF1[3] = my ∧
   is_town_POS(ENTITY[2], REF1[3]) ∧ copula(EVENT[4], ENTITY[1]) ∧ in(EVENT[4]) = ENTITY[2])

# ::id 572_textbook_TANAKA;006_ID_122681;IE
# ::snt He was operated on yesterday .
∃ REF1[1] EVENT[3] TIME[2] (
 REF1[1] = he ∧
  yesterday(TIME[2]) ∧
   past(EVENT[3]) ∧ was_operated_on(EVENT[3], REF1[1]) ∧ is_contained_in(TMP(EVENT[3]), TIME[2]))

# ::id 573_textbook_TANAKA;006_ID_137593;IE
# ::snt She felt like giving up the plan .
∃ ATTRIB[2] REF1[1] EVENT[4] EVENT[5] ENTITY[3] (
 plan(ENTITY[3]) ∧
  REF1[1] = she ∧
   giving_up(EVENT[4], _, ENTITY[3]) ∧ like(ATTRIB[2]) ∧
    past(EVENT[5]) ∧ felt(EVENT[5], REF1[1], ATTRIB[2]))

# ::id 574_textbook_TANAKA;006_ID_126995;IE
# ::snt He can swim fast .
∃ REF1[1] (REF1[1] = he ∧ MD_can(∃ EVENT[2] (ADV_fast(EVENT[2]) ∧ swim(EVENT[2], REF1[1]))))

# ::id 575_textbook_TANAKA;006_ID_146515;IE
# ::snt It 's blowing very hard .
∃ REF1[1] EVENT[2] (REF1[1] = it ∧ ADV_very_hard(EVENT[2]) ∧ 's_blowing(EVENT[2], REF1[1]))

# ::id 576_textbook_TANAKA;006_ID_125919;IE
# ::snt He did not return home till midnight .
∃ REF1[1] (
 REF1[1] = he ∧
  ¬ ∃ EVENT[4] ENTITY[3] ENTITY[2] (
        home(ENTITY[2]) ∧
         midnight(ENTITY[3]) ∧
          past(EVENT[4]) ∧ did_return(EVENT[4], REF1[1], ENTITY[2]) ∧ till(EVENT[4]) = ENTITY[3]))

# ::id 577_textbook_TANAKA;006_ID_60058;IE
# ::snt You do your part and I shall do the rest .
∃ REF3[5] REF2[3] REF1[1] EVENT[4] ENTITY[2] ENTITY[6] (
 rest(ENTITY[6]) ∧
  REF1[1] = you ∧
   REF2[3] = your ∧
    is_part_POS(ENTITY[2], REF2[3]) ∧
     REF3[5] = i ∧
      CONJ_and(do(EVENT[4], REF1[1], ENTITY[2]), MD_shall(∃ EVENT[7] do(EVENT[7], REF3[5], ENTITY[6]))))

# ::id 578_textbook_TANAKA;006_ID_128825;IE
# ::snt He tried to attract her attention .
∃ REF2[4] REF1[1] EVENT[5] EVENT[2] ENTITY[3] (
 REF1[1] = he ∧
  REF2[4] = her ∧
   is_attention_POS(ENTITY[3], REF2[4]) ∧
    past(EVENT[2]) ∧ tried(EVENT[2], REF1[1], attract(EVENT[5], REF1[1], ENTITY[3])))

# ::id 579_textbook_TANAKA;006_ID_31055;IE
# ::snt The law is still in effect .
∃ EVENT[3] ENTITY[2] ENTITY[1] (
 law(ENTITY[1]) ∧
  effect(ENTITY[2]) ∧ TMP_still(EVENT[3]) ∧ copula(EVENT[3], ENTITY[1]) ∧ in(EVENT[3]) = ENTITY[2])

# ::id 580_textbook_TANAKA;006_ID_99317;IE
# ::snt The village people had to pump water from the well by hand .
∃ EVENT[6] EVENT[2] ENTITY[5] ENTITY[3] ENTITY[4] GROUP[1] (
 village_people(GROUP[1]) ∧
  well(ENTITY[4]) ∧
   water(ENTITY[3]) ∧
    hand(ENTITY[5]) ∧
     past(EVENT[2]) ∧
      had(EVENT[2], GROUP[1],
       pump(EVENT[6], GROUP[1], ENTITY[3]) ∧ by(EVENT[6]) = ENTITY[5] ∧
        from(EVENT[6]) = ENTITY[4]))

# ::id 581_textbook_TANAKA;006_ID_103182;IE
# ::snt Did I hurt you ?
QUEST(∃ REF2[2] REF1[1] EVENT[3] (
      REF1[1] = i ∧ REF2[2] = you ∧ past(EVENT[3]) ∧ did_hurt(EVENT[3], REF1[1], REF2[2])))

# ::id 582_textbook_TANAKA;006_ID_23534;IE
# ::snt Please forward this message along with the seminar information to the appropriate managers in your firm .
∃ REF1[7] ATTRIB[5] EVENT[1] ENTITY[6] GROUP[4] ENTITY[3] ENTITY[2] (
 message(ENTITY[2]) ∧
  seminar_information(ENTITY[3]) ∧
   appropriate(ATTRIB[5]) ∧
    REF1[7] = your ∧
     is_firm_POS(ENTITY[6], REF1[7]) ∧
      is_managers_in(GROUP[4], ENTITY[6]) ∧ is_managers_ATTRIBUTE(GROUP[4], ATTRIB[5]) ∧
       please(EVENT[1],
        IMPERATIVE(∃ EVENT[8] (
              forward(EVENT[8], _, ENTITY[2]) ∧
               to(EVENT[8]) = GROUP[4] ∧ along_with(EVENT[8]) = ENTITY[3]))))

# ::id 583_textbook_TANAKA;006_ID_124081;IE
# ::snt He tried writing a short story .
∃ ATTRIB[4] SITUATION[2] REF1[1] EVENT[5] EVENT[6] ENTITY[3] (
 REF1[1] = he ∧
  short(ATTRIB[4]) ∧
   is_story_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
    is_FACT_THAT(SITUATION[2], writing(EVENT[5], REF1[1], ENTITY[3])) ∧
     past(EVENT[6]) ∧ tried(EVENT[6], REF1[1], SITUATION[2]))

# ::id 584_textbook_TANAKA;006_ID_120722;IE
# ::snt He exposed himself to danger .
∃ REF2[2] REF1[1] EVENT[4] ENTITY[3] (
 REF1[1] = he ∧
  REF2[2] = himself ∧
   danger(ENTITY[3]) ∧
    past(EVENT[4]) ∧ exposed(EVENT[4], REF1[1], REF2[2]) ∧ to(EVENT[4]) = ENTITY[3])

# ::id 585_textbook_TANAKA;006_ID_42174;IE
# ::snt It was an argument of little substance .
∃ ATTRIB[4] REF1[1] EVENT[5] ENTITY[3] ENTITY[2] (
 REF1[1] = it ∧
  little(ATTRIB[4]) ∧
   is_substance_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
    is_argument_of(ENTITY[2], ENTITY[3]) ∧ past(EVENT[5]) ∧ copula(EVENT[5], REF1[1], ENTITY[2]))

# ::id 586_textbook_TANAKA;006_ID_9565;IE
# ::snt I 'm very glad to see you .
∃ REF2[3] ATTRIB[2] REF1[1] EVENT[4] EVENT[5] (
 REF1[1] = i ∧
  REF2[3] = you ∧
   is_very_glad_to(ATTRIB[2], see(EVENT[4], _, REF2[3])) ∧ copula(EVENT[5], REF1[1], ATTRIB[2]))

# ::id 587_textbook_TANAKA;006_ID_147955;IE
# ::snt The visitor left a message with his sister .
∃ REF1[4] EVENT[5] ENTITY[3] ENTITY[2] ENTITY[1] (
 visitor(ENTITY[1]) ∧
  message(ENTITY[2]) ∧
   REF1[4] = his ∧
    is_sister_POS(ENTITY[3], REF1[4]) ∧
     past(EVENT[5]) ∧ left(EVENT[5], ENTITY[1], ENTITY[2]) ∧ with(EVENT[5]) = ENTITY[3])

# ::id 588_textbook_TANAKA;006_ID_20019;IE
# ::snt I 've never had such a large sum of money .
∃ ATTRIB[4] ATTRIB[3] REF1[1] EVENT[6] ENTITY[5] ENTITY[2] (
 REF1[1] = i ∧
  such(ATTRIB[3]) ∧
   large(ATTRIB[4]) ∧
    money(ENTITY[5]) ∧
     is_sum_of(ENTITY[2], ENTITY[5]) ∧ is_sum_ATTRIBUTE(ENTITY[2], ATTRIB[4]) ∧ is_sum_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
      TMP_never(EVENT[6]) ∧ 've_had(EVENT[6], REF1[1], ENTITY[2]))

# ::id 589_textbook_TANAKA;006_ID_109074;IE
# ::snt Much to his surprise he found his dog dead .
MUCH REF1[3] ENTITY[2] ENTITY[1] ((REF1[3] = his ∧ is_surprise_POS(ENTITY[2], REF1[3]) ∧ is_to(ENTITY[1], ENTITY[2])), ∃ ATTRIB[8] REF3[7] REF2[4] EVENT[9] EVENT[5] ENTITY[6] (
  REF2[4] = he ∧
   REF3[7] = his ∧
    is_dog_POS(ENTITY[6], REF3[7]) ∧
     dead(ATTRIB[8]) ∧
      past(EVENT[5]) ∧
       found(EVENT[5], REF2[4], xxx(EVENT[9], ENTITY[6], ATTRIB[8])) ∧ ADV(EVENT[5]) = ENTITY[1]))

# ::id 590_textbook_TANAKA;006_ID_146983;IE
# ::snt I can swim on my front but not on my back .
∃ REF1[1] (
 REF1[1] = i ∧
  MD_can(∃ REF3[6] REF2[3] EVENT[7] ENTITY[2] ENTITY[5] (
        REF2[3] = my ∧
         is_front_POS(ENTITY[2], REF2[3]) ∧
          REF3[6] = my ∧
           is_back_POS(ENTITY[5], REF3[6]) ∧
            CONJ_but(swim(EVENT[7], REF1[1]) ∧ on(EVENT[7]) = ENTITY[2],
             NOT ENTITY[4] (is_of(ENTITY[4], ENTITY[5]),
              ∃ EVENT[7] (swim(EVENT[7], REF1[1]) ∧ on(EVENT[7]) = ENTITY[4]))))))

# ::id 591_textbook_TANAKA;006_ID_126978;IE
# ::snt He kicked the ball with his foot .
∃ REF2[4] REF1[1] EVENT[5] ENTITY[3] ENTITY[2] (
 ball(ENTITY[2]) ∧
  REF1[1] = he ∧
   REF2[4] = his ∧
    is_foot_POS(ENTITY[3], REF2[4]) ∧
     past(EVENT[5]) ∧ kicked(EVENT[5], REF1[1], ENTITY[2]) ∧ with(EVENT[5]) = ENTITY[3])

# ::id 592_textbook_TANAKA;006_ID_13826;IE
# ::snt This rose smells sweet .
∃ ATTRIB[2] EVENT[3] ENTITY[1] (rose(ENTITY[1]) ∧ sweet(ATTRIB[2]) ∧ smells(EVENT[3], ENTITY[1], ATTRIB[2]))

# ::id 593_textbook_TANAKA;006_ID_67165;IE
# ::snt Have you heard from her recently ?
QUEST(∃ REF2[2] REF1[1] EVENT[3] (
      REF1[1] = you ∧
       REF2[2] = her ∧
        TMP_recently(EVENT[3]) ∧ have_heard(EVENT[3], REF1[1]) ∧ from(EVENT[3]) = REF2[2]))

# ::id 594_textbook_TANAKA;006_ID_36810;IE
# ::snt Would you please tell me the way ?
∃ EVENT[1] ENTITY[4] (
 way(ENTITY[4]) ∧
  please(EVENT[1],
   QUEST(MD_would(∃ REF2[3] REF1[2] EVENT[5] (
              REF1[2] = you ∧
               REF2[3] = me ∧ tell(EVENT[5], REF1[2], ENTITY[4], REF2[3]))))))

# ::id 595_textbook_TANAKA;006_ID_153186;IE
# ::snt Mr Suzuki has three daughters .
∃ EVENT[2] GROUP[1] ((CD_three(GROUP[1]), daughters(GROUP[1])) ∧ has(EVENT[2], ENTITY[Mr_Suzuki], GROUP[1]))

# ::id 596_textbook_TANAKA;006_ID_100705;IE
# ::snt He was being groomed as a presidential candidate .
∃ ATTRIB[3] REF1[1] EVENT[4] ENTITY[2] (
 REF1[1] = he ∧
  presidential(ATTRIB[3]) ∧
   is_candidate_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
    past(EVENT[4]) ∧ was_being_groomed(EVENT[4], REF1[1]) ∧ as(EVENT[4]) = ENTITY[2])

# ::id 597_textbook_TANAKA;006_ID_67017;IE
# ::snt Recently , the dignity and importance of the Japanese father has diminished .
∃ ATTRIB[6] EVENT[7] ENTITY[3] ENTITY[4] ENTITY[5] GROUP[2] ENTITY[1] (
 dignity(ENTITY[3]) ∧
  importance(ENTITY[4]) ∧
   is_element_of(ENTITY[3], GROUP[2]) ∧ is_element_of(ENTITY[4], GROUP[2]) ∧
    japanese(ATTRIB[6]) ∧
     is_father_ATTRIBUTE(ENTITY[5], ATTRIB[6]) ∧
      is_of(ENTITY[1], ENTITY[5]) ∧ is_equals(ENTITY[1], GROUP[2]) ∧
       TMP_recently(EVENT[7]) ∧ has_diminished(EVENT[7], ENTITY[1]))

# ::id 598_textbook_TANAKA;006_ID_83796;IE
# ::snt My guess is that there will be a resignation of the cabinet .
∃ REF1[2] EVENT[3] ENTITY[4] ENTITY[1] ENTITY[5] (
 cabinet(ENTITY[5]) ∧
  REF1[2] = my ∧
   is_guess_POS(ENTITY[1], REF1[2]) ∧
    is_resignation_of(ENTITY[4], ENTITY[5]) ∧ copula(EVENT[3], ENTITY[1], MD_will(∃ EVENT[6] copula(EVENT[6], ENTITY[4]))))

# ::id 599_textbook_TANAKA;006_ID_56993;IE
# ::snt The church stands at the edge of the town .
∃ EVENT[4] ENTITY[3] ENTITY[2] ENTITY[1] (
 church(ENTITY[1]) ∧
  town(ENTITY[3]) ∧
   is_edge_of(ENTITY[2], ENTITY[3]) ∧ stands(EVENT[4], ENTITY[1]) ∧ at(EVENT[4]) = ENTITY[2])

# ::id 600_textbook_TANAKA;006_ID_65603;IE
# ::snt I will go there on foot or by bicycle next time .
∃ REF1[1] (
 REF1[1] = i ∧
  MD_will(∃ SITUATION[7] ATTRIB[5] ATTRIB[5] EVENT[6] EVENT[6] TIME[4] ENTITY[2] TIME[4] ENTITY[3] (
        foot(ENTITY[2]) ∧
         next(ATTRIB[5]) ∧
          is_time_ATTRIBUTE(TIME[4], ATTRIB[5]) ∧
           bicycle(ENTITY[3]) ∧
            next(ATTRIB[5]) ∧
             is_time_ATTRIBUTE(TIME[4], ATTRIB[5]) ∧
              LOC_there(SITUATION[7]) ∧
               is_FACT_THAT(SITUATION[7],
                CONJ_or(go(EVENT[6], REF1[1]) ∧ is_contained_in(TMP(EVENT[6]), TIME[4]) ∧
                      on(EVENT[6]) = ENTITY[2],
                 go(EVENT[6], REF1[1]) ∧ is_contained_in(TMP(EVENT[6]), TIME[4]) ∧
                  by(EVENT[6]) = ENTITY[3])))))

# ::id 601_textbook_TANAKA;006_ID_127953;IE
# ::snt He is something of an expert on oriental art .
∃ REF1[1] (
 REF1[1] = he ∧
  SOME ATTRIB[5] ENTITY[4] ENTITY[3] ENTITY[2] (
   (oriental(ATTRIB[5]) ∧ is_art_ATTRIBUTE(ENTITY[4], ATTRIB[5]) ∧ is_expert_on(ENTITY[3], ENTITY[4]) ∧
    is_thing_of(ENTITY[2], ENTITY[3])), ∃ EVENT[6] copula(EVENT[6], REF1[1], ENTITY[2])))

# ::id 602_textbook_TANAKA;006_ID_25329;IE
# ::snt How does the film end ?
∃ ENTITY[2] (film(ENTITY[2]) ∧ QUEST(∃ EVENT[3] ? ENTITY[1] (is_ADV(EVENT[3], ENTITY[1]) ∧ does_end(EVENT[3], ENTITY[2]))))

# ::id 603_textbook_TANAKA;006_ID_100925;IE
# ::snt It was apparent that someone had taken the money by mistake .
∃ ATTRIB[6] SITUATION[1] EVENT[7] ENTITY[3] (
 money(ENTITY[3]) ∧
  is_FACT_THAT(SITUATION[1],
   SOME ENTITY[2] (one(ENTITY[2]),
    ∃ EVENT[5] ENTITY[4] (
     mistake(ENTITY[4]) ∧
      past(EVENT[5]) ∧ had_taken(EVENT[5], ENTITY[2], ENTITY[3]) ∧ by(EVENT[5]) = ENTITY[4]))) ∧
   apparent(ATTRIB[6]) ∧ past(EVENT[7]) ∧ copula(EVENT[7], SITUATION[1], ATTRIB[6]))

# ::id 604_textbook_TANAKA;006_ID_117437;IE
# ::snt He opened the door .
∃ REF1[1] EVENT[3] ENTITY[2] (door(ENTITY[2]) ∧ REF1[1] = he ∧ past(EVENT[3]) ∧ opened(EVENT[3], REF1[1], ENTITY[2]))

# ::id 605_textbook_TANAKA;006_ID_4966;IE
# ::snt You 're the new secretary , are n't you ?
∃ REF1[1] ATTRIB[3] EVENT[4] ENTITY[2] (new(ATTRIB[3]) ∧ is_secretary_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ REF1[1] = you ∧ copula(EVENT[4], REF1[1], ENTITY[2]))

# ::id 606_textbook_TANAKA;006_ID_63494;IE
# ::snt The candidates thoroughly argued the point .
∃ EVENT[3] ENTITY[2] GROUP[1] (
 candidates(GROUP[1]) ∧
  point(ENTITY[2]) ∧ ADV_thoroughly(EVENT[3]) ∧ past(EVENT[3]) ∧ argued(EVENT[3], GROUP[1], ENTITY[2]))

# ::id 607_textbook_TANAKA;006_ID_86050;IE
# ::snt I listen to the radio every night .
∃ REF1[1] ENTITY[2] (
 radio(ENTITY[2]) ∧
  REF1[1] = i ∧
   ∀ TIME[3] (night(TIME[3]) →
    ∃ EVENT[4] (
     listen(EVENT[4], REF1[1]) ∧ is_contained_in(TMP(EVENT[4]), TIME[3]) ∧ to(EVENT[4]) = ENTITY[2])))

# ::id 608_textbook_TANAKA;006_ID_66195;IE
# ::snt Today is Sunday .
∃ EVENT[2] ENTITY[1] (Today(ENTITY[1]) ∧ copula(EVENT[2], ENTITY[1], ENTITY[Sunday]))

# ::id 609_textbook_TANAKA;006_ID_50833;IE
# ::snt How many languages can you speak ?
QUEST(? GROUP[1] (
      how_many(GROUP[1]) ∧ languages(GROUP[1]) ∧
       MD_can(∃ REF1[2] EVENT[3] (REF1[2] = you ∧ speak(EVENT[3], REF1[2], GROUP[1])))))

# ::id 610_textbook_TANAKA;006_ID_99749;IE
# ::snt Maybe she is coming .
∃ REF1[1] EVENT[2] (REF1[1] = she ∧ ADV_maybe(EVENT[2]) ∧ is_coming(EVENT[2], REF1[1]))

# ::id 611_textbook_TANAKA;006_ID_140815;IE
# ::snt She promised me to come .
∃ REF2[3] REF1[1] EVENT[4] EVENT[2] (
 REF1[1] = she ∧
  REF2[3] = me ∧ past(EVENT[2]) ∧ promised(EVENT[2], REF1[1], come(EVENT[4], REF2[3])))

# ::id 612_textbook_TANAKA;006_ID_79542;IE
# ::snt Each time I see Mary , I learn something new and important from her .
EACH REF1[2] EVENT[3] TIME[1] ((REF1[2] = i ∧ is_time_THAT(TIME[1], see(EVENT[3], REF1[2], ENTITY[Mary]))), ∃ REF2[4] (
  REF2[4] = i ∧
   SOME ATTRIB[7] ATTRIB[6] ENTITY[5] (
    (new(ATTRIB[6]) ∧ important(ATTRIB[7]) ∧
     CONJ_and(is_thing_ATTRIBUTE(ENTITY[5], ATTRIB[6]), is_thing_ATTRIBUTE(ENTITY[5], ATTRIB[7]))),
    ∃ REF3[8] EVENT[9] (
     REF3[8] = her ∧
      learn(EVENT[9], REF2[4], ENTITY[5]) ∧ from(EVENT[9]) = REF3[8] ∧
       is_contained_in(TMP(EVENT[9]), TIME[1])))))

# ::id 613_textbook_TANAKA;006_ID_53706;IE
# ::snt Letters from beyond the seas .
∃ EVENT[3] GROUP[1] GROUP[2] (seas(GROUP[2]) ∧ is_Letters_from_beyond(GROUP[1], GROUP[2]) ∧ xxx(EVENT[3]) ∧ LINK(EVENT[3]) = GROUP[1])

# ::id 614_textbook_TANAKA;006_ID_82543;IE
# ::snt I came to Japan for the first time .
∃ REF1[1] ATTRIB[3] EVENT[4] ENTITY[2] (
 first(ATTRIB[3]) ∧
  is_time_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
   REF1[1] = i ∧
    past(EVENT[4]) ∧
     came(EVENT[4], REF1[1]) ∧ for(EVENT[4]) = ENTITY[2] ∧ to(EVENT[4]) = ENTITY[Japan])

# ::id 615_textbook_TANAKA;006_ID_77613;IE
# ::snt I can 't get rid of a nasty cold .
∃ REF1[1] (
 REF1[1] = i ∧
  MD_can(¬ ∃ ATTRIB[4] ATTRIB[2] EVENT[5] ENTITY[3] (
             nasty(ATTRIB[4]) ∧
              is_cold_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
               is_rid_of(ATTRIB[2], ENTITY[3]) ∧
                get(EVENT[5], REF1[1]) ∧ ATTRIBUTE(EVENT[5]) = ATTRIB[2])))

# ::id 616_textbook_TANAKA;006_ID_129226;IE
# ::snt It seemed that he was sick .
∃ ATTRIB[3] REF1[2] EVENT[4] EVENT[1] (
 REF1[2] = he ∧
  sick(ATTRIB[3]) ∧
   is_before(EVENT[4], EVENT[1]) ∧ past(EVENT[1]) ∧ seemed(EVENT[1], copula(EVENT[4], REF1[2], ATTRIB[3])))

# ::id 617_textbook_TANAKA;006_ID_37439;IE
# ::snt It tastes very good .
∃ ATTRIB[2] REF1[1] EVENT[3] (REF1[1] = it ∧ very_good(ATTRIB[2]) ∧ tastes(EVENT[3], REF1[1], ATTRIB[2]))

# ::id 618_textbook_TANAKA;006_ID_74495;IE
# ::snt My idea went against his .
∃ REF2[4] REF1[2] EVENT[5] ENTITY[3] ENTITY[1] (
 REF1[2] = my ∧
  is_idea_POS(ENTITY[1], REF1[2]) ∧
   REF2[4] = his ∧
    is_POS(ENTITY[3], REF2[4]) ∧
     past(EVENT[5]) ∧ went(EVENT[5], ENTITY[1]) ∧ against(EVENT[5]) = ENTITY[3])

# ::id 619_textbook_TANAKA;006_ID_109049;IE
# ::snt There is little hope of his winning the election .
∃ REF1[4] ATTRIB[2] EVENT[6] EVENT[7] ENTITY[3] ENTITY[1] ENTITY[5] (
 election(ENTITY[5]) ∧
  little(ATTRIB[2]) ∧
   is_hope_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧
    REF1[4] = his ∧
     winning(EVENT[6], _, ENTITY[5]) ∧ is_POS(ENTITY[3], REF1[4]) ∧
      copula(EVENT[7], ENTITY[1]) ∧ of(EVENT[7]) = ENTITY[3])

# ::id 620_textbook_TANAKA;006_ID_64837;IE
# ::snt Need I go right now ?
QUEST(MD_need(∃ REF1[1] EVENT[2] (REF1[1] = i ∧ TMP_right_now(EVENT[2]) ∧ go(EVENT[2], REF1[1]))))

# ::id 621_textbook_TANAKA;006_ID_79304;IE
# ::snt I am afraid to go alone .
∃ ATTRIB[2] REF1[1] EVENT[3] EVENT[5] (
 REF1[1] = i ∧
  is_afraid_to(ATTRIB[2], go(EVENT[3])) ∧ ADV_alone(EVENT[3]) ∧ copula(EVENT[5], REF1[1], ATTRIB[2]))

# ::id 622_textbook_TANAKA;006_ID_162569;IE
# ::snt This game is a work of fiction .
∃ EVENT[4] ENTITY[3] ENTITY[2] ENTITY[1] (game(ENTITY[1]) ∧ fiction(ENTITY[3]) ∧ is_work_of(ENTITY[2], ENTITY[3]) ∧ copula(EVENT[4], ENTITY[1], ENTITY[2]))

# ::id 623_textbook_TANAKA;006_ID_53606;IE
# ::snt He went to France to brush up on his speaking ability .
∃ REF2[4] PRP[2] REF1[1] EVENT[5] EVENT[6] ENTITY[3] (
 REF1[1] = he ∧
  REF2[4] = his ∧
   is_speaking_ability_POS(ENTITY[3], REF2[4]) ∧
    is_FACT_THAT(PRP[2], brush_up(EVENT[5], REF1[1]) ∧ on(EVENT[5]) = ENTITY[3]) ∧
     past(EVENT[6]) ∧
      went(EVENT[6], REF1[1]) ∧ PRP(EVENT[6]) = PRP[2] ∧ to(EVENT[6]) = ENTITY[France])

# ::id 624_textbook_TANAKA;006_ID_13335;IE
# ::snt It follows from this that the company is not responsible for the accident .
∃ SITUATION[1] EVENT[7] ENTITY[4] ENTITY[2] ENTITY[6] (
 company(ENTITY[2]) ∧
  accident(ENTITY[4]) ∧
   is_FACT_THAT(SITUATION[1], ¬ ∃ ATTRIB[3] EVENT[5] (is_responsible_for(ATTRIB[3], ENTITY[4]) ∧ copula(EVENT[5], ENTITY[2], ATTRIB[3]))) ∧
    follows(EVENT[7], SITUATION[1]) ∧ from(EVENT[7]) = ENTITY[6])

# ::id 625_textbook_TANAKA;006_ID_55626;IE
# ::snt Whether you like it or not , you have to go .
∃ REF5[8] SITUATION[1] EVENT[10] EVENT[9] (
 is_FACT_THAT(SITUATION[1],
  QUEST(∃ REF3[5] REF2[3] REF1[2] EVENT[4] (
        REF1[2] = you ∧
         REF2[3] = it ∧
          REF3[5] = you ∧
           CONJ_or(like(EVENT[4], REF1[2], REF2[3]),
            ¬ ∃ REF4[6] EVENT[7] (REF4[6] = it ∧ like(EVENT[7], REF3[5], REF4[6])))))) ∧
  REF5[8] = you ∧ have(EVENT[9], REF5[8], go(EVENT[10], REF5[8])) ∧ ADV(EVENT[9]) = SITUATION[1])

# ::id 626_textbook_TANAKA;006_ID_121901;IE
# ::snt He was roused by a loud knocking at the door .
∃ ATTRIB[3] REF1[1] EVENT[5] ENTITY[2] ENTITY[4] (
 door(ENTITY[4]) ∧
  REF1[1] = he ∧
   loud(ATTRIB[3]) ∧
    is_knocking_at(ENTITY[2], ENTITY[4]) ∧ is_knocking_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
     past(EVENT[5]) ∧ was_roused(EVENT[5], REF1[1]) ∧ by(EVENT[5]) = ENTITY[2])

# ::id 627_textbook_TANAKA;006_ID_19721;IE
# ::snt I 'll take it .
∃ REF1[1] (REF1[1] = i ∧ MD'll(∃ REF2[2] EVENT[3] (REF2[2] = it ∧ take(EVENT[3], REF1[1], REF2[2]))))

# ::id 628_textbook_TANAKA;006_ID_113187;IE
# ::snt His story departed from his main theme .
∃ ATTRIB[5] REF2[4] REF1[2] EVENT[6] ENTITY[3] ENTITY[1] (
 REF1[2] = his ∧
  is_story_POS(ENTITY[1], REF1[2]) ∧
   REF2[4] = his ∧
    main(ATTRIB[5]) ∧
     is_theme_ATTRIBUTE(ENTITY[3], ATTRIB[5]) ∧ is_theme_POS(ENTITY[3], REF2[4]) ∧
      past(EVENT[6]) ∧ departed(EVENT[6], ENTITY[1]) ∧ from(EVENT[6]) = ENTITY[3])

# ::id 629_textbook_TANAKA;006_ID_50443;IE
# ::snt Go downstairs and have a wash .
CONJ_and(IMPERATIVE(∃ EVENT[2] ENTITY[1] (go(EVENT[2]) ∧ down(EVENT[2]) = ENTITY[1])),
 IMPERATIVE(∃ EVENT[4] ENTITY[3] (wash(ENTITY[3]) ∧ have(EVENT[4], _, ENTITY[3]))))

# ::id 630_textbook_TANAKA;006_ID_112961;IE
# ::snt His promise can not be relied on .
∃ REF1[2] ENTITY[1] (REF1[2] = his ∧ is_promise_POS(ENTITY[1], REF1[2]) ∧ MD_can(¬ ∃ EVENT[3] be_relied_on(EVENT[3], ENTITY[1])))

# ::id 631_textbook_TANAKA;006_ID_43864;IE
# ::snt I can bear this broken heart no longer .
∃ REF1[1] ATTRIB[3] ENTITY[2] (
 broken(ATTRIB[3]) ∧
  is_heart_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
   REF1[1] = i ∧ MD_can(∃ EVENT[4] (TMP_no_longer(EVENT[4]) ∧ bear(EVENT[4], REF1[1], ENTITY[2]))))

# ::id 632_textbook_TANAKA;006_ID_50441;IE
# ::snt Sign at the bottom , please .
∃ EVENT[1] ENTITY[2] (bottom(ENTITY[2]) ∧ please(EVENT[1], IMPERATIVE(∃ EVENT[3] (sign(EVENT[3]) ∧ at(EVENT[3]) = ENTITY[2]))))

# ::id 633_textbook_TANAKA;006_ID_24782;IE
# ::snt On hearing the news , she turned pale .
∃ ATTRIB[5] SITUATION[2] REF1[1] EVENT[4] EVENT[6] ENTITY[3] (
 news(ENTITY[3]) ∧
  REF1[1] = she ∧
   is_FACT_THAT(SITUATION[2], hearing(EVENT[4], REF1[1], ENTITY[3])) ∧
    pale(ATTRIB[5]) ∧
     past(EVENT[6]) ∧ turned(EVENT[6], REF1[1], ATTRIB[5]) ∧ On(EVENT[6]) = SITUATION[2])

# ::id 634_textbook_TANAKA;006_ID_66941;IE
# ::snt Time after time I 've invited them to come over and visit us but time and time again they 've never come .
∃ REF4[13] REF3[7] PRP[5] REF2[4] REF1[3] EVENT[6] EVENT[8] EVENT[9] EVENT[14] ENTITY[2] TIME[1] GROUP[10] (
 time(ENTITY[2]) ∧
  is_Time_after(TIME[1], ENTITY[2]) ∧
   REF1[3] = i ∧
    REF2[4] = them ∧
     REF3[7] = us ∧
      is_FACT_THAT(PRP[5], CONJ_and(come_over(EVENT[6], REF2[4]), visit(EVENT[8], REF2[4], REF3[7]))) ∧
       ∃ ENTITY[11] (time(ENTITY[11]) ∧ is_element_of(ENTITY[11], GROUP[10])) ∧
        ∃ ENTITY[12] (ADV_again(ENTITY[12]) ∧ time(ENTITY[12]) ∧ is_element_of(ENTITY[12], GROUP[10])) ∧
        REF4[13] = they ∧
         TMP_never(EVENT[14]) ∧
          CONJ_but('ve_invited(EVENT[9], REF1[3], REF2[4]) ∧ PRP(EVENT[9]) = PRP[5] ∧
                is_contained_in(TMP(EVENT[9]), TIME[1]),
           've_come(EVENT[14], REF4[13]) ∧ TMP(EVENT[14]) = GROUP[10]))

# ::id 635_textbook_TANAKA;006_ID_31114;IE
# ::snt Orders for the book poured in .
∃ EVENT[3] GROUP[1] ENTITY[2] (book(ENTITY[2]) ∧ is_Orders_for(GROUP[1], ENTITY[2]) ∧ past(EVENT[3]) ∧ poured_in(EVENT[3], GROUP[1]))

# ::id 636_textbook_TANAKA;006_ID_97586;IE
# ::snt Our teacher seemed surprised .
∃ ATTRIB[3] REF1[2] EVENT[4] ENTITY[1] (
 REF1[2] = our ∧
  is_teacher_POS(ENTITY[1], REF1[2]) ∧ surprised(ATTRIB[3]) ∧ past(EVENT[4]) ∧ seemed(EVENT[4], ENTITY[1], ATTRIB[3]))

# ::id 637_textbook_TANAKA;006_ID_152079;IE
# ::snt I 'll be very busy next month .
∃ REF1[1] (
 REF1[1] = i ∧
  MD'll(∃ ATTRIB[4] ATTRIB[2] EVENT[5] TIME[3] (
        very_busy(ATTRIB[2]) ∧
         next(ATTRIB[4]) ∧
          is_month_ATTRIBUTE(TIME[3], ATTRIB[4]) ∧
           copula(EVENT[5], REF1[1]) ∧ is_contained_in(TMP(EVENT[5]), TIME[3]) ∧
            ATTRIBUTE(EVENT[5]) = ATTRIB[2])))

# ::id 638_textbook_TANAKA;006_ID_20794;IE
# ::snt Please fasten your seat belt .
∃ EVENT[1] please(EVENT[1],
 IMPERATIVE(∃ REF1[3] EVENT[4] ENTITY[2] (REF1[3] = your ∧ is_seat_belt_POS(ENTITY[2], REF1[3]) ∧ fasten(EVENT[4], _, ENTITY[2]))))

# ::id 639_textbook_TANAKA;006_ID_2490;IE
# ::snt You were fortunate to be here .
∃ ATTRIB[2] REF1[1] EVENT[3] EVENT[5] (
 REF1[1] = you ∧
  is_fortunate_to(ATTRIB[2], copula(EVENT[3])) ∧
   LOC_here(EVENT[3]) ∧ past(EVENT[5]) ∧ copula(EVENT[5], REF1[1], ATTRIB[2]))

# ::id 640_textbook_TANAKA;006_ID_57820;IE
# ::snt Countless stars were twinkling in the sky .
∃ ATTRIB[2] EVENT[4] GROUP[1] ENTITY[3] (
 sky(ENTITY[3]) ∧
  countless(ATTRIB[2]) ∧
   is_stars_ATTRIBUTE(GROUP[1], ATTRIB[2]) ∧
    past(EVENT[4]) ∧ were_twinkling(EVENT[4], GROUP[1]) ∧ in(EVENT[4]) = ENTITY[3])

# ::id 641_textbook_TANAKA;006_ID_143863;IE
# ::snt She had to part with her fur coat .
∃ REF2[4] REF1[1] EVENT[5] EVENT[2] ENTITY[3] (
 REF1[1] = she ∧
  REF2[4] = her ∧
   is_fur_coat_POS(ENTITY[3], REF2[4]) ∧
    past(EVENT[2]) ∧
     had(EVENT[2], REF1[1], part(EVENT[5], REF1[1]) ∧ with(EVENT[5]) = ENTITY[3]))

# ::id 642_textbook_TANAKA;006_ID_25772;IE
# ::snt The rapid growth of the firm was attributed to its unique strategy .
∃ ATTRIB[6] REF1[5] ATTRIB[2] EVENT[7] ENTITY[4] ENTITY[3] ENTITY[1] (
 rapid(ATTRIB[2]) ∧
  firm(ENTITY[3]) ∧
   is_growth_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧ is_growth_of(ENTITY[1], ENTITY[3]) ∧
    REF1[5] = its ∧
     unique(ATTRIB[6]) ∧
      is_strategy_ATTRIBUTE(ENTITY[4], ATTRIB[6]) ∧ is_strategy_POS(ENTITY[4], REF1[5]) ∧
       past(EVENT[7]) ∧ attributed(EVENT[7], _, ENTITY[1]) ∧ to(EVENT[7]) = ENTITY[4])

# ::id 643_textbook_TANAKA;006_ID_24567;IE
# ::snt Hand me the wrench .
∃ ENTITY[2] (wrench(ENTITY[2]) ∧ IMPERATIVE(∃ REF1[1] EVENT[3] (REF1[1] = me ∧ hand(EVENT[3], _, ENTITY[2], REF1[1]))))

# ::id 644_textbook_TANAKA;006_ID_18627;IE
# ::snt This may not suit your taste .
∃ ENTITY[1] MD_may(¬ ∃ REF1[3] EVENT[4] ENTITY[2] (REF1[3] = your ∧ is_taste_POS(ENTITY[2], REF1[3]) ∧ suit(EVENT[4], ENTITY[1], ENTITY[2])))

# ::id 645_textbook_TANAKA;006_ID_18681;IE
# ::snt This has gone out of use here .
∃ EVENT[3] ENTITY[2] ENTITY[1] (use(ENTITY[2]) ∧ LOC_here(EVENT[3]) ∧ has_gone(EVENT[3], ENTITY[1]) ∧ out_of(EVENT[3]) = ENTITY[2])

# ::id 646_textbook_TANAKA;006_ID_134545;IE
# ::snt I found it difficult to make out what she was saying .
∃ ATTRIB[9] REF2[6] SITUATION[3] REF1[1] EVENT[7] EVENT[8] EVENT[10] EVENT[2] ENTITY[4] (
 REF1[1] = i ∧
  REF2[6] = she ∧
   was_saying(EVENT[7], REF2[6], ENTITY[4]) ∧
    is_FACT_THAT(SITUATION[3], make_out(EVENT[8], _, ENTITY[4])) ∧
     difficult(ATTRIB[9]) ∧
      is_before(EVENT[7], EVENT[2]) ∧
       past(EVENT[2]) ∧ found(EVENT[2], REF1[1], xxx(EVENT[10], SITUATION[3], ATTRIB[9])))

# ::id 647_textbook_TANAKA;006_ID_29839;IE
# ::snt The news made my hair stand on end .
∃ REF1[4] EVENT[6] EVENT[2] ENTITY[5] ENTITY[3] ENTITY[1] (
 news(ENTITY[1]) ∧
  REF1[4] = my ∧
   is_hair_POS(ENTITY[3], REF1[4]) ∧
    end(ENTITY[5]) ∧
     past(EVENT[2]) ∧
      made(EVENT[2], ENTITY[1], stand(EVENT[6], ENTITY[3]) ∧ on(EVENT[6]) = ENTITY[5]))

# ::id 648_textbook_TANAKA;006_ID_58941;IE
# ::snt What you say is quite different from what I heard from him .
∃ REF3[9] REF2[8] ATTRIB[5] REF1[3] EVENT[4] EVENT[10] EVENT[11] ENTITY[6] ENTITY[1] (
 REF1[3] = you ∧
  say(EVENT[4], REF1[3], ENTITY[1]) ∧
   REF2[8] = i ∧
    REF3[9] = him ∧
     heard(EVENT[10], REF2[8], ENTITY[6]) ∧ from(EVENT[10]) = REF3[9] ∧
      is_quite_different_from(ATTRIB[5], ENTITY[6]) ∧ past(EVENT[10]) ∧ copula(EVENT[11], ENTITY[1], ATTRIB[5]))

# ::id 649_textbook_TANAKA;006_ID_134180;IE
# ::snt It was wise of you to keep away from him .
∃ REF2[6] ATTRIB[5] REF1[2] SITUATION[1] EVENT[3] EVENT[7] (
 REF1[2] = him ∧
  is_FACT_THAT(SITUATION[1], keep(EVENT[3]) ∧ from(EVENT[3]) = REF1[2]) ∧
   REF2[6] = you ∧
    is_wise_of(ATTRIB[5], REF2[6]) ∧
     DIR_away(EVENT[3]) ∧ past(EVENT[7]) ∧ copula(EVENT[7], SITUATION[1], ATTRIB[5]))

# ::id 650_textbook_TANAKA;006_ID_40617;IE
# ::snt A businessman is working out some figures with a calculator .
∃ ENTITY[1] (
 businessman(ENTITY[1]) ∧
  SOME GROUP[2] (figures(GROUP[2]),
   ∃ EVENT[4] ENTITY[3] (calculator(ENTITY[3]) ∧ is_working_out(EVENT[4], ENTITY[1], GROUP[2]) ∧ with(EVENT[4]) = ENTITY[3])))

# ::id 651_textbook_TANAKA;006_ID_25864;IE
# ::snt It does n't require a scholar to interpret .
∃ SITUATION[1] EVENT[2] (is_FACT_THAT(SITUATION[1], interpret(EVENT[2])) ∧ ¬ ∃ ENTITY[3] EVENT[4] (scholar(ENTITY[3]) ∧ does_require(EVENT[4], SITUATION[1], ENTITY[3])))

# ::id 652_textbook_TANAKA;006_ID_119724;IE
# ::snt He is qualified as an English teacher .
∃ ATTRIB[3] REF1[1] EVENT[4] ENTITY[2] (
 REF1[1] = he ∧
  english(ATTRIB[3]) ∧
   is_teacher_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ qualified(EVENT[4], _, REF1[1]) ∧ as(EVENT[4]) = ENTITY[2])

# ::id 653_textbook_TANAKA;006_ID_99635;IE
# ::snt Many a man has made the same mistake .
∃ ATTRIB[3] ENTITY[2] (
 same(ATTRIB[3]) ∧ is_mistake_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ MANY ENTITY[1] (man(ENTITY[1]), ∃ EVENT[4] has_made(EVENT[4], ENTITY[1], ENTITY[2])))

# ::id 654_textbook_TANAKA;006_ID_89327;IE
# ::snt I 'm sorry to say I do n't remember your name .
∃ REF2[4] ATTRIB[2] REF1[1] EVENT[3] EVENT[8] (
 REF1[1] = i ∧
  REF2[4] = i ∧
   is_sorry_to(ATTRIB[2],
    say(EVENT[3],
     ¬ ∃ REF3[6] EVENT[7] ENTITY[5] (
           REF3[6] = your ∧
            is_name_POS(ENTITY[5], REF3[6]) ∧ do_remember(EVENT[7], REF2[4], ENTITY[5])))) ∧
    copula(EVENT[8], REF1[1], ATTRIB[2]))

# ::id 655_textbook_TANAKA;006_ID_105351;IE
# ::snt A broken-down car was standing in the middle of the road .
∃ ATTRIB[2] EVENT[5] ENTITY[1] ENTITY[4] ENTITY[3] (
 road(ENTITY[4]) ∧
  is_middle_of(ENTITY[3], ENTITY[4]) ∧
   broken-down(ATTRIB[2]) ∧
    is_car_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧
     past(EVENT[5]) ∧ was_standing(EVENT[5], ENTITY[1]) ∧ in(EVENT[5]) = ENTITY[3])

# ::id 656_textbook_TANAKA;006_ID_149708;IE
# ::snt Get the dream .
∃ ENTITY[1] (dream(ENTITY[1]) ∧ IMPERATIVE(∃ EVENT[2] get(EVENT[2], _, ENTITY[1])))

# ::id 657_textbook_TANAKA;006_ID_54309;IE
# ::snt The revolutionary council met to plan strategy .
∃ PRP[3] ATTRIB[2] EVENT[5] EVENT[6] ENTITY[4] ENTITY[1] (
 revolutionary(ATTRIB[2]) ∧
  is_council_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧
   strategy(ENTITY[4]) ∧
    is_FACT_THAT(PRP[3], plan(EVENT[5], ENTITY[1], ENTITY[4])) ∧
     past(EVENT[6]) ∧ met(EVENT[6], ENTITY[1]) ∧ PRP(EVENT[6]) = PRP[3])

# ::id 658_textbook_TANAKA;006_ID_28256;IE
# ::snt The practice has long been done away with .
∃ EVENT[2] ENTITY[1] (practice(ENTITY[1]) ∧ TMP_long(EVENT[2]) ∧ DIR_away(EVENT[2]) ∧ has_done_with(EVENT[2], _, ENTITY[1]))

# ::id 659_textbook_TANAKA;006_ID_72101;IE
# ::snt Let us give you a piece of advice .
IMPERATIVE(∃ REF2[3] REF1[2] EVENT[6] EVENT[1] ENTITY[5] ENTITY[4] (
      REF1[2] = us ∧
       REF2[3] = you ∧
        advice(ENTITY[5]) ∧
         is_piece_of(ENTITY[4], ENTITY[5]) ∧ let(EVENT[1], give(EVENT[6], REF1[2], ENTITY[4], REF2[3]))))

# ::id 660_textbook_TANAKA;006_ID_44466;IE
# ::snt If it had not been for your help , I would have lost the game .
∃ ENTITY[5] (
 game(ENTITY[5]) ∧
  CND_If(
      ¬ ∃ REF1[2] EVENT[3] ENTITY[1] (
            REF1[2] = your ∧
             is_help_POS(ENTITY[1], REF1[2]) ∧
              past(EVENT[3]) ∧ had_copula(EVENT[3]) ∧ for(EVENT[3]) = ENTITY[1]),
      ∃ REF2[4] (REF2[4] = i ∧ MD_would(∃ EVENT[6] have_lost(EVENT[6], REF2[4], ENTITY[5])))))

# ::id 661_textbook_TANAKA;006_ID_124171;IE
# ::snt He had to inquire into the record of the event .
∃ REF1[1] EVENT[5] EVENT[2] ENTITY[4] ENTITY[3] (
 event(ENTITY[4]) ∧
  is_record_of(ENTITY[3], ENTITY[4]) ∧
   REF1[1] = he ∧
    past(EVENT[2]) ∧
     had(EVENT[2], REF1[1], inquire(EVENT[5], REF1[1]) ∧ into(EVENT[5]) = ENTITY[3]))

# ::id 662_textbook_TANAKA;006_ID_123932;IE
# ::snt He hit me back .
∃ REF2[2] REF1[1] EVENT[3] (REF1[1] = he ∧ REF2[2] = me ∧ past(EVENT[3]) ∧ hit_back(EVENT[3], REF1[1], REF2[2]))

# ::id 663_textbook_TANAKA;006_ID_87784;IE
# ::snt As soon as the game started , it began to rain .
∃ SITUATION[6] SITUATION[9] TIME[1] EVENT[4] EVENT[7] EVENT[8] ENTITY[3] (
 game(ENTITY[3]) ∧
  is_TMP(EVENT[4], TIME[1]) ∧
   past(EVENT[4]) ∧
    is_TMP_as_soon_as(SITUATION[9], TIME[1]) ∧
     past(EVENT[8]) ∧
      started(EVENT[4], ENTITY[3]) ∧
       is_FACT_THAT(SITUATION[6], rain(EVENT[7])) ∧ is_FACT_THAT(SITUATION[9], began(EVENT[8], SITUATION[6])))

# ::id 664_textbook_TANAKA;006_ID_28275;IE
# ::snt The assembly voted to protest against any nuclear armament .
∃ EVENT[2] ENTITY[1] (
 assembly(ENTITY[1]) ∧
  past(EVENT[2]) ∧
   voted(EVENT[2], ENTITY[1],
    ANY ATTRIB[4] ENTITY[3] ((nuclear(ATTRIB[4]) ∧ is_armament_ATTRIBUTE(ENTITY[3], ATTRIB[4])),
     ∃ EVENT[5] (protest(EVENT[5], ENTITY[1]) ∧ against(EVENT[5]) = ENTITY[3]))))

# ::id 665_textbook_TANAKA;006_ID_76095;IE
# ::snt I allowed a margin of ten minutes .
∃ REF1[1] EVENT[4] GROUP[3] ENTITY[2] (
 REF1[1] = i ∧
  (CD_ten(GROUP[3]), minutes(GROUP[3])) ∧
   is_margin_of(ENTITY[2], GROUP[3]) ∧ past(EVENT[4]) ∧ allowed(EVENT[4], REF1[1], ENTITY[2]))

# ::id 666_textbook_TANAKA;006_ID_33452;IE
# ::snt I do n't know how such a rumor got about .
∃ REF1[1] (
 REF1[1] = i ∧
  ¬ ∃ EVENT[2] do_know(EVENT[2], REF1[1],
        QUEST(∃ ATTRIB[5] EVENT[6] ENTITY[4] ? ENTITY[3] (
              such(ATTRIB[5]) ∧
               is_rumor_ATTRIBUTE(ENTITY[4], ATTRIB[5]) ∧
                is_ADV(EVENT[6], ENTITY[3]) ∧
                 is_before(EVENT[6], EVENT[2]) ∧ got_about(EVENT[6], ENTITY[4])))))

# ::id 667_textbook_TANAKA;006_ID_64808;IE
# ::snt Do n't go into this drawing room now .
∃ ENTITY[1] (
 drawing_room(ENTITY[1]) ∧
  IMPERATIVE(¬ ∃ EVENT[2] (TMP_now(EVENT[2]) ∧ do_go(EVENT[2]) ∧ into(EVENT[2]) = ENTITY[1])))

# ::id 668_textbook_TANAKA;006_ID_131856;IE
# ::snt They immediately fell to work .
∃ SITUATION[4] REF1[1] EVENT[3] EVENT[2] (
 REF1[1] = they ∧
  TMP_immediately(SITUATION[4]) ∧
   past(EVENT[2]) ∧ is_FACT_THAT(SITUATION[4], fell(EVENT[2], REF1[1], work(EVENT[3], REF1[1]))))

# ::id 669_textbook_TANAKA;006_ID_96545;IE
# ::snt This is the first time for me to read the Bible .
∃ REF1[4] ATTRIB[3] EVENT[6] EVENT[5] ENTITY[2] ENTITY[1] (
 first(ATTRIB[3]) ∧
  REF1[4] = me ∧
   is_time_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ is_time_to(ENTITY[2], read(EVENT[5], REF1[4], ENTITY[Bible])) ∧
    copula(EVENT[6], ENTITY[1], ENTITY[2]))

# ::id 670_textbook_TANAKA;006_ID_120369;IE
# ::snt He has experience of foreign travel .
∃ ATTRIB[4] REF1[1] EVENT[5] ENTITY[3] ENTITY[2] (
 REF1[1] = he ∧
  foreign(ATTRIB[4]) ∧
   is_travel_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧ is_experience_of(ENTITY[2], ENTITY[3]) ∧ has(EVENT[5], REF1[1], ENTITY[2]))

# ::id 671_textbook_TANAKA;006_ID_126396;IE
# ::snt He has an innate love of adventure .
∃ ATTRIB[3] REF1[1] EVENT[5] ENTITY[4] ENTITY[2] (
 REF1[1] = he ∧
  innate(ATTRIB[3]) ∧
   adventure(ENTITY[4]) ∧
    is_love_of(ENTITY[2], ENTITY[4]) ∧ is_love_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ has(EVENT[5], REF1[1], ENTITY[2]))

# ::id 672_textbook_TANAKA;006_ID_30008;IE
# ::snt The bird 's wing was broken .
∃ EVENT[3] ENTITY[1] ENTITY[2] (bird(ENTITY[2]) ∧ is_wing_POS(ENTITY[1], ENTITY[2]) ∧ past(EVENT[3]) ∧ was_broken(EVENT[3], ENTITY[1]))

# ::id 673_textbook_TANAKA;006_ID_46146;IE
# ::snt A birthday cake with twelve candles on top .
∃ EVENT[4] ENTITY[3] GROUP[2] ENTITY[1] (
 top(ENTITY[3]) ∧
  (CD_twelve(GROUP[2]), is_candles_on(GROUP[2], ENTITY[3])) ∧
   is_birthday_cake_with(ENTITY[1], GROUP[2]) ∧ xxx(EVENT[4]) ∧ LINK(EVENT[4]) = ENTITY[1])

# ::id 674_textbook_TANAKA;006_ID_31686;IE
# ::snt The old man said something .
∃ ATTRIB[2] ENTITY[1] (
 old(ATTRIB[2]) ∧
  is_man_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧
   SOME ENTITY[3] (thing(ENTITY[3]), ∃ EVENT[4] (past(EVENT[4]) ∧ said(EVENT[4], ENTITY[1], ENTITY[3]))))

# ::id 675_textbook_TANAKA;006_ID_36309;IE
# ::snt Do n't forget to flush the toilet .
∃ ENTITY[2] (toilet(ENTITY[2]) ∧ IMPERATIVE(¬ ∃ EVENT[3] EVENT[1] do_forget(EVENT[1], flush(EVENT[3], _, ENTITY[2]))))

# ::id 676_textbook_TANAKA;006_ID_62200;IE
# ::snt Have you fed the dog ?
∃ ENTITY[2] (dog(ENTITY[2]) ∧ QUEST(∃ REF1[1] EVENT[3] (REF1[1] = you ∧ have_fed(EVENT[3], REF1[1], ENTITY[2]))))

# ::id 677_textbook_TANAKA;006_ID_34929;IE
# ::snt Would you teach me how to make cheese ?
QUEST(MD_would(∃ REF2[2] REF1[1] EVENT[3] (
           REF1[1] = you ∧
            REF2[2] = me ∧
             teach(EVENT[3], REF1[1], REF2[2],
              QUEST(∃ EVENT[6] ENTITY[5] ? ENTITY[4] (
                    cheese(ENTITY[5]) ∧
                     is_ADV(EVENT[6], ENTITY[4]) ∧ make(EVENT[6], REF2[2], ENTITY[5])))))))

# ::id 678_textbook_TANAKA;006_ID_34725;IE
# ::snt Who has torn the envelope open ?
∃ ENTITY[2] (envelope(ENTITY[2]) ∧ QUEST(∃ EVENT[3] ? ENTITY[1] has_torn_open(EVENT[3], ENTITY[1], ENTITY[2])))

# ::id 679_textbook_TANAKA;006_ID_106346;IE
# ::snt Japanese companies have built up a reputation for quality .
∃ ATTRIB[2] EVENT[5] ENTITY[4] ENTITY[3] GROUP[1] (
 japanese(ATTRIB[2]) ∧
  is_companies_ATTRIBUTE(GROUP[1], ATTRIB[2]) ∧
   quality(ENTITY[4]) ∧ is_reputation_for(ENTITY[3], ENTITY[4]) ∧ have_built_up(EVENT[5], GROUP[1], ENTITY[3]))

# ::id 680_textbook_TANAKA;006_ID_153660;IE
# ::snt The focus of the talk is put on the content .
∃ EVENT[4] ENTITY[2] ENTITY[3] ENTITY[1] (
 talk(ENTITY[2]) ∧
  is_focus_of(ENTITY[1], ENTITY[2]) ∧
   content(ENTITY[3]) ∧ is_put(EVENT[4], ENTITY[1]) ∧ on(EVENT[4]) = ENTITY[3])

# ::id 681_textbook_TANAKA;006_ID_12786;IE
# ::snt Refrain from smoking here .
IMPERATIVE(∃ SITUATION[1] EVENT[2] EVENT[4] (
      LOC_here(EVENT[2]) ∧
       is_FACT_THAT(SITUATION[1], smoking(EVENT[2])) ∧ refrain(EVENT[4]) ∧ from(EVENT[4]) = SITUATION[1]))

# ::id 682_textbook_TANAKA;006_ID_140398;IE
# ::snt She has three brothers .
∃ REF1[1] EVENT[3] GROUP[2] (REF1[1] = she ∧ (CD_three(GROUP[2]), brothers(GROUP[2])) ∧ has(EVENT[3], REF1[1], GROUP[2]))

# ::id 683_textbook_TANAKA;006_ID_123003;IE
# ::snt He is afraid of death .
∃ ATTRIB[2] REF1[1] EVENT[4] ENTITY[3] (REF1[1] = he ∧ death(ENTITY[3]) ∧ is_afraid_of(ATTRIB[2], ENTITY[3]) ∧ copula(EVENT[4], REF1[1], ATTRIB[2]))

# ::id 684_textbook_TANAKA;006_ID_50791;IE
# ::snt Do you have anything hot ?
QUEST(∃ REF1[1] (
      REF1[1] = you ∧
       ANY ATTRIB[3] ENTITY[2] ((hot(ATTRIB[3]) ∧ is_thing_ATTRIBUTE(ENTITY[2], ATTRIB[3])), ∃ EVENT[4] do_have(EVENT[4], REF1[1], ENTITY[2]))))

# ::id 685_textbook_TANAKA;006_ID_17616;IE
# ::snt This book is divided into four parts .
∃ EVENT[3] GROUP[2] ENTITY[1] (
 book(ENTITY[1]) ∧
  (CD_four(GROUP[2]), parts(GROUP[2])) ∧ is_divided(EVENT[3], ENTITY[1]) ∧ into(EVENT[3]) = GROUP[2])

# ::id 686_textbook_TANAKA;006_ID_71611;IE
# ::snt We should have paid attention to the announcement .
∃ REF1[1] ENTITY[3] (
 announcement(ENTITY[3]) ∧
  REF1[1] = we ∧
   MD_should(∃ EVENT[4] ENTITY[2] (attention(ENTITY[2]) ∧ have_paid(EVENT[4], REF1[1], ENTITY[2]) ∧ to(EVENT[4]) = ENTITY[3])))

# ::id 687_textbook_TANAKA;006_ID_136068;IE
# ::snt I can 't make head nor tail of her lecture on health and physical education .
∃ REF1[1] (
 REF1[1] = i ∧
  MD_can(¬ ∃ REF2[7] EVENT[12] GROUP[8] ENTITY[6] GROUP[3] ENTITY[2] (
             CONJ_nor(∃ ENTITY[4] (head(ENTITY[4]) ∧ is_element_of(ENTITY[4], GROUP[3])),
              ∃ ENTITY[5] (tail(ENTITY[5]) ∧ is_element_of(ENTITY[5], GROUP[3]))) ∧
              REF2[7] = her ∧
               ∃ ENTITY[9] (health(ENTITY[9]) ∧ is_element_of(ENTITY[9], GROUP[8])) ∧
                ∃ ATTRIB[11] ENTITY[10] (physical(ATTRIB[11]) ∧ is_education_ATTRIBUTE(ENTITY[10], ATTRIB[11]) ∧ is_element_of(ENTITY[10], GROUP[8])) ∧
                is_lecture_on(ENTITY[6], GROUP[8]) ∧ is_lecture_POS(ENTITY[6], REF2[7]) ∧
                 is_of(ENTITY[2], ENTITY[6]) ∧ is_equals(ENTITY[2], GROUP[3]) ∧
                  make(EVENT[12], REF1[1], ENTITY[2]))))

# ::id 688_textbook_TANAKA;006_ID_113167;IE
# ::snt His story made us laugh .
∃ REF2[4] REF1[2] EVENT[5] EVENT[3] ENTITY[1] (
 REF1[2] = his ∧
  is_story_POS(ENTITY[1], REF1[2]) ∧
   REF2[4] = us ∧ past(EVENT[3]) ∧ made(EVENT[3], ENTITY[1], laugh(EVENT[5], REF2[4])))

# ::id 689_textbook_TANAKA;006_ID_83864;IE
# ::snt I know an American girl who speaks Japanese very well .
∃ ATTRIB[3] REF1[1] EVENT[5] EVENT[7] ENTITY[2] (
 REF1[1] = i ∧
  american(ATTRIB[3]) ∧
   speaks(EVENT[5], ENTITY[2], ENTITY[Japanese]) ∧ is_girl_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
    ADV_very_well(EVENT[5]) ∧ know(EVENT[7], REF1[1], ENTITY[2]))

# ::id 690_textbook_TANAKA;006_ID_101186;IE
# ::snt Who taught them table manners ?
QUEST(∃ REF1[2] EVENT[4] GROUP[3] ? ENTITY[1] (
      REF1[2] = them ∧
       table_manners(GROUP[3]) ∧ past(EVENT[4]) ∧ taught(EVENT[4], ENTITY[1], GROUP[3], REF1[2])))

# ::id 691_textbook_TANAKA;006_ID_110948;IE
# ::snt The scar on his forehead is conspicuous .
∃ ATTRIB[4] REF1[3] EVENT[5] ENTITY[2] ENTITY[1] (
 REF1[3] = his ∧
  is_forehead_POS(ENTITY[2], REF1[3]) ∧
   is_scar_on(ENTITY[1], ENTITY[2]) ∧ conspicuous(ATTRIB[4]) ∧ copula(EVENT[5], ENTITY[1], ATTRIB[4]))

# ::id 692_textbook_TANAKA;006_ID_54866;IE
# ::snt I have a chill .
∃ REF1[1] EVENT[3] ENTITY[2] (REF1[1] = i ∧ chill(ENTITY[2]) ∧ have(EVENT[3], REF1[1], ENTITY[2]))

# ::id 693_textbook_TANAKA;006_ID_147811;IE
# ::snt I 'm breast-feeding my baby .
∃ REF2[3] REF1[1] EVENT[4] ENTITY[2] (REF1[1] = i ∧ REF2[3] = my ∧ is_baby_POS(ENTITY[2], REF2[3]) ∧ 'm_breast-feeding(EVENT[4], REF1[1], ENTITY[2]))

# ::id 694_textbook_TANAKA;006_ID_141458;IE
# ::snt She took much baggage with her .
∃ REF1[1] (
 REF1[1] = she ∧
  MUCH ENTITY[2] (baggage(ENTITY[2]),
   ∃ REF2[3] EVENT[4] (
    REF2[3] = her ∧
     past(EVENT[4]) ∧ took(EVENT[4], REF1[1], ENTITY[2]) ∧ with(EVENT[4]) = REF2[3])))

# ::id 695_textbook_TANAKA;006_ID_23075;IE
# ::snt It goes without saying that everybody is given the equal right to speak .
∃ SITUATION[1] ATTRIB[4] EVENT[8] ENTITY[7] EVENT[5] ENTITY[3] (
 equal(ATTRIB[4]) ∧
  is_right_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧ is_right_to(ENTITY[3], speak(EVENT[5])) ∧
   is_FACT_THAT(SITUATION[1], ∀ ENTITY[2] (body(ENTITY[2]) → ∃ EVENT[6] is_given(EVENT[6], ENTITY[2], ENTITY[3]))) ∧
    saying(ENTITY[7]) ∧ goes(EVENT[8], SITUATION[1]) ∧ without(EVENT[8]) = ENTITY[7])

# ::id 696_textbook_TANAKA;006_ID_76860;IE
# ::snt I dress lightly all the time .
∃ SITUATION[4] REF1[1] (
 REF1[1] = i ∧
  ADV_lightly(SITUATION[4]) ∧
   is_FACT_THAT(SITUATION[4],
    ALL TIME[2] (time(TIME[2]), ∃ EVENT[3] (dress(EVENT[3], REF1[1]) ∧ is_contained_in(TMP(EVENT[3]), TIME[2])))))

# ::id 697_textbook_TANAKA;006_ID_42179;IE
# ::snt She can hardly speak Japanese .
∃ REF1[1] (REF1[1] = she ∧ MD_can(∃ EVENT[2] (ADV_hardly(EVENT[2]) ∧ speak(EVENT[2], REF1[1], ENTITY[Japanese]))))

# ::id 698_textbook_TANAKA;006_ID_30999;IE
# ::snt The mother is very anxious about her children 's future .
∃ REF1[5] ATTRIB[2] EVENT[6] GROUP[4] ENTITY[3] ENTITY[1] (
 mother(ENTITY[1]) ∧
  REF1[5] = her ∧
   is_children_POS(GROUP[4], REF1[5]) ∧
    is_future_POS(ENTITY[3], GROUP[4]) ∧ is_very_anxious_about(ATTRIB[2], ENTITY[3]) ∧ copula(EVENT[6], ENTITY[1], ATTRIB[2]))

# ::id 699_textbook_TANAKA;006_ID_21303;IE
# ::snt After some hesitation , he laid the book on the desk .
∃ ENTITY[4] ENTITY[3] (
 book(ENTITY[3]) ∧
  desk(ENTITY[4]) ∧
   SOME ENTITY[1] (hesitation(ENTITY[1]),
    ∃ REF1[2] EVENT[5] (
     REF1[2] = he ∧
      past(EVENT[5]) ∧
       laid(EVENT[5], REF1[2], ENTITY[3]) ∧ on(EVENT[5]) = ENTITY[4] ∧
        After(EVENT[5]) = ENTITY[1])))

# ::id 700_textbook_TANAKA;006_ID_26149;IE
# ::snt The play was not well acted .
∃ ENTITY[1] (
 play(ENTITY[1]) ∧
  ¬ ∃ ATTRIB[2] EVENT[3] (well_acted(ATTRIB[2]) ∧ past(EVENT[3]) ∧ copula(EVENT[3], ENTITY[1], ATTRIB[2])))

# ::id 701_textbook_TANAKA;006_ID_149228;IE
# ::snt A photo of my sister 's .
∃ REF1[4] EVENT[5] ENTITY[3] ENTITY[2] ENTITY[1] (
 REF1[4] = my ∧
  is_sister_POS(ENTITY[3], REF1[4]) ∧
   is_POS(ENTITY[2], ENTITY[3]) ∧
    is_photo_of(ENTITY[1], ENTITY[2]) ∧ xxx(EVENT[5]) ∧ LINK(EVENT[5]) = ENTITY[1])

# ::id 702_textbook_TANAKA;006_ID_115911;IE
# ::snt He was all chocked up about it .
∃ REF2[2] REF1[1] EVENT[3] (
 REF1[1] = he ∧
  REF2[2] = it ∧
   ADV_all(EVENT[3]) ∧ past(EVENT[3]) ∧ was_chocked_up(EVENT[3], REF1[1]) ∧ about(EVENT[3]) = REF2[2])

# ::id 703_textbook_TANAKA;006_ID_9902;IE
# ::snt The servants tried to carry out their master 's order .
∃ REF1[5] EVENT[6] EVENT[2] ENTITY[4] ENTITY[3] GROUP[1] (
 servants(GROUP[1]) ∧
  REF1[5] = their ∧
   is_master_POS(ENTITY[4], REF1[5]) ∧
    is_order_POS(ENTITY[3], ENTITY[4]) ∧
     past(EVENT[2]) ∧ tried(EVENT[2], GROUP[1], carry_out(EVENT[6], GROUP[1], ENTITY[3])))

# ::id 704_textbook_TANAKA;006_ID_8696;IE
# ::snt Let 's cut down our expenses .
IMPERATIVE(∃ REF2[4] REF1[2] EVENT[5] EVENT[1] GROUP[3] (
      REF1[2] = 's ∧
       REF2[4] = our ∧
        is_expenses_POS(GROUP[3], REF2[4]) ∧ let(EVENT[1], cut_down(EVENT[5], REF1[2], GROUP[3]))))

# ::id 705_textbook_TANAKA;006_ID_130625;IE
# ::snt He studies his lessons after supper .
∃ REF2[3] REF1[1] EVENT[5] ENTITY[4] GROUP[2] (
 REF1[1] = he ∧
  REF2[3] = his ∧
   is_lessons_POS(GROUP[2], REF2[3]) ∧
    supper(ENTITY[4]) ∧ studies(EVENT[5], REF1[1], GROUP[2]) ∧ after(EVENT[5]) = ENTITY[4])

# ::id 706_textbook_TANAKA;006_ID_47332;IE
# ::snt You used to smoke did n't you ?
∃ REF1[1] EVENT[3] EVENT[2] (REF1[1] = you ∧ past(EVENT[2]) ∧ used(EVENT[2], REF1[1], smoke(EVENT[3], REF1[1])))

# ::id 707_textbook_TANAKA;006_ID_86331;IE
# ::snt I will be seventeen next week .
∃ REF1[1] (
 REF1[1] = i ∧
  MD_will(∃ ATTRIB[4] EVENT[5] TIME[3] ENTITY[2] (
        CD_seventeen(ENTITY[2]) ∧
         next(ATTRIB[4]) ∧
          is_week_ATTRIBUTE(TIME[3], ATTRIB[4]) ∧
           copula(EVENT[5], REF1[1], ENTITY[2]) ∧ is_contained_in(TMP(EVENT[5]), TIME[3]))))

# ::id 708_textbook_TANAKA;006_ID_149509;IE
# ::snt If I should come here , I will let you know at once .
∀ REF1[1] CND_If(REF1[1] = i ∧ MD_should(∃ EVENT[2] (LOC_here(EVENT[2]) ∧ come(EVENT[2], REF1[1]))), ∃ REF2[4] (
     REF2[4] = i ∧
      MD_will(∃ REF3[6] EVENT[7] EVENT[5] (
            REF3[6] = you ∧
             at(EVENT[7]) ∧ TMP_once(EVENT[7]) ∧
              let(EVENT[5], REF2[4], know(EVENT[7], REF3[6]))))))

# ::id 709_textbook_TANAKA;006_ID_80383;IE
# ::snt I have abandoned the idea of buying a house .
∃ REF1[1] SITUATION[3] EVENT[6] EVENT[5] ENTITY[4] ENTITY[2] (
 house(ENTITY[4]) ∧
  is_FACT_THAT(SITUATION[3], buying(EVENT[5], _, ENTITY[4])) ∧
   is_idea_of(ENTITY[2], SITUATION[3]) ∧ REF1[1] = i ∧ have_abandoned(EVENT[6], REF1[1], ENTITY[2]))

# ::id 710_textbook_TANAKA;006_ID_10313;IE
# ::snt Please respond .
∃ EVENT[1] please(EVENT[1], IMPERATIVE(∃ EVENT[2] respond(EVENT[2])))

# ::id 711_textbook_TANAKA;006_ID_162565;IE
# ::snt Changes of leadership have a great effect on the international political economy .
∃ ATTRIB[4] ATTRIB[6] EVENT[7] ENTITY[2] ENTITY[3] GROUP[1] ENTITY[5] (
 international(ATTRIB[6]) ∧
  is_political_economy_ATTRIBUTE(ENTITY[5], ATTRIB[6]) ∧
   leadership(ENTITY[2]) ∧
    is_Changes_of(GROUP[1], ENTITY[2]) ∧
     great(ATTRIB[4]) ∧
      is_effect_on(ENTITY[3], ENTITY[5]) ∧ is_effect_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧ have(EVENT[7], GROUP[1], ENTITY[3]))

# ::id 712_textbook_TANAKA;006_ID_67566;IE
# ::snt Reducing the budget deficit is a major concern of the government .
∃ ATTRIB[5] SITUATION[1] ENTITY[4] EVENT[3] EVENT[7] ENTITY[2] ENTITY[6] (
 budget_deficit(ENTITY[2]) ∧
  government(ENTITY[6]) ∧
   is_FACT_THAT(SITUATION[1], reducing(EVENT[3], _, ENTITY[2])) ∧
    major(ATTRIB[5]) ∧
     is_concern_of(ENTITY[4], ENTITY[6]) ∧ is_concern_ATTRIBUTE(ENTITY[4], ATTRIB[5]) ∧ copula(EVENT[7], SITUATION[1], ENTITY[4]))

# ::id 713_textbook_TANAKA;006_ID_17003;IE
# ::snt This cat is , so to speak , a member of our family .
∃ REF1[7] ADT[2] ENTITY[6] ENTITY[5] EVENT[3] EVENT[8] ENTITY[1] (
 cat(ENTITY[1]) ∧
  ADV_so(EVENT[3]) ∧
   is_NP-PRN-FACT_THAT(ADT[2], speak(EVENT[3], ENTITY[1])) ∧
    REF1[7] = our ∧
     is_family_POS(ENTITY[6], REF1[7]) ∧
      is_member_of(ENTITY[5], ENTITY[6]) ∧ copula(EVENT[8], ENTITY[1], ENTITY[5]) ∧ ADT(EVENT[8]) = ADT[2])

# ::id 714_textbook_TANAKA;006_ID_59268;IE
# ::snt Your father took all that trouble for your sake .
∃ REF1[2] ENTITY[1] (
 REF1[2] = your ∧
  is_father_POS(ENTITY[1], REF1[2]) ∧
   ALL ENTITY[3] (trouble(ENTITY[3]),
    ∃ REF2[5] EVENT[6] ENTITY[4] (
     REF2[5] = your ∧
      is_sake_POS(ENTITY[4], REF2[5]) ∧
       past(EVENT[6]) ∧ took(EVENT[6], ENTITY[1], ENTITY[3]) ∧ for(EVENT[6]) = ENTITY[4])))

# ::id 715_textbook_TANAKA;006_ID_112148;IE
# ::snt His success was a great satisfaction to me .
∃ REF2[5] ATTRIB[4] REF1[2] EVENT[6] ENTITY[3] ENTITY[1] (
 REF1[2] = his ∧
  is_success_POS(ENTITY[1], REF1[2]) ∧
   great(ATTRIB[4]) ∧
    REF2[5] = me ∧
     is_satisfaction_to(ENTITY[3], REF2[5]) ∧ is_satisfaction_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
      past(EVENT[6]) ∧ copula(EVENT[6], ENTITY[1], ENTITY[3]))

# ::id 716_textbook_TANAKA;006_ID_109413;IE
# ::snt Let 's wait till he comes .
IMPERATIVE(∃ REF2[4] SITUATION[3] REF1[2] EVENT[5] EVENT[6] EVENT[1] (
      REF1[2] = 's ∧
       REF2[4] = he ∧
        is_FACT_THAT(SITUATION[3], comes(EVENT[5], REF2[4])) ∧
         let(EVENT[1], wait(EVENT[6], REF1[2]) ∧ till(EVENT[6]) = SITUATION[3])))

# ::id 717_textbook_TANAKA;006_ID_17005;IE
# ::snt This cat does n't chase rats .
∃ ENTITY[1] (cat(ENTITY[1]) ∧ ¬ ∃ EVENT[3] GROUP[2] (rats(GROUP[2]) ∧ does_chase(EVENT[3], ENTITY[1], GROUP[2])))

# ::id 718_textbook_TANAKA;006_ID_117393;IE
# ::snt He likes to be a tennis player .
∃ REF1[1] EVENT[4] EVENT[2] ENTITY[3] (REF1[1] = he ∧ tennis_player(ENTITY[3]) ∧ likes(EVENT[2], REF1[1], copula(EVENT[4], REF1[1], ENTITY[3])))

# ::id 719_textbook_TANAKA;006_ID_4977;IE
# ::snt You must take life as it is .
∃ REF1[1] (
 REF1[1] = you ∧
  MD_must(∃ REF2[4] SITUATION[3] EVENT[5] EVENT[6] ENTITY[2] (
        life(ENTITY[2]) ∧
         REF2[4] = it ∧
          is_FACT_THAT(SITUATION[3], copula(EVENT[5], REF2[4])) ∧
           take(EVENT[6], REF1[1], ENTITY[2]) ∧ as(EVENT[6]) = SITUATION[3])))

# ::id 720_textbook_TANAKA;006_ID_136674;IE
# ::snt She has gone to America .
∃ REF1[1] EVENT[2] (REF1[1] = she ∧ has_gone(EVENT[2], REF1[1]) ∧ to(EVENT[2]) = ENTITY[America])

# ::id 721_textbook_TANAKA;006_ID_151771;IE
# ::snt Do you have an appointment ?
QUEST(∃ REF1[1] EVENT[3] ENTITY[2] (REF1[1] = you ∧ appointment(ENTITY[2]) ∧ do_have(EVENT[3], REF1[1], ENTITY[2])))

# ::id 722_textbook_TANAKA;006_ID_94861;IE
# ::snt Man learned early to use tools .
∃ SITUATION[5] EVENT[4] EVENT[2] GROUP[3] ENTITY[1] (
 Man(ENTITY[1]) ∧
  tools(GROUP[3]) ∧
   TMP_early(SITUATION[5]) ∧
    past(EVENT[2]) ∧ is_FACT_THAT(SITUATION[5], learned(EVENT[2], ENTITY[1], use(EVENT[4], ENTITY[1], GROUP[3]))))

# ::id 723_textbook_TANAKA;006_ID_59443;IE
# ::snt You are now among the elite .
∃ REF1[1] EVENT[3] GROUP[2] (
 elite(GROUP[2]) ∧
  REF1[1] = you ∧ TMP_now(EVENT[3]) ∧ copula(EVENT[3], REF1[1]) ∧ among(EVENT[3]) = GROUP[2])

# ::id 724_textbook_TANAKA;006_ID_97780;IE
# ::snt The other day I met an old friend on the street .
∃ ATTRIB[5] REF1[3] ATTRIB[2] EVENT[7] ENTITY[4] ENTITY[6] TIME[1] (
 other(ATTRIB[2]) ∧
  is_day_ATTRIBUTE(TIME[1], ATTRIB[2]) ∧
   street(ENTITY[6]) ∧
    REF1[3] = i ∧
     old(ATTRIB[5]) ∧
      is_friend_ATTRIBUTE(ENTITY[4], ATTRIB[5]) ∧
       past(EVENT[7]) ∧
        met(EVENT[7], REF1[3], ENTITY[4]) ∧ on(EVENT[7]) = ENTITY[6] ∧
         is_contained_in(TMP(EVENT[7]), TIME[1]))

# ::id 725_textbook_TANAKA;006_ID_92070;IE
# ::snt Do you have small change with you ?
QUEST(∃ REF2[4] ATTRIB[3] REF1[1] EVENT[5] ENTITY[2] (
      REF1[1] = you ∧
       small(ATTRIB[3]) ∧
        is_change_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
         REF2[4] = you ∧ do_have(EVENT[5], REF1[1], ENTITY[2]) ∧ with(EVENT[5]) = REF2[4]))

# ::id 726_textbook_TANAKA;006_ID_21801;IE
# ::snt George did business in the same manner as his father .
∃ REF1[5] ATTRIB[3] EVENT[6] ENTITY[1] ENTITY[4] ENTITY[2] (
 same(ATTRIB[3]) ∧
  REF1[5] = his ∧
   is_father_POS(ENTITY[4], REF1[5]) ∧
    is_manner_as(ENTITY[2], ENTITY[4]) ∧ is_manner_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
     business(ENTITY[1]) ∧
      past(EVENT[6]) ∧ did(EVENT[6], ENTITY[George], ENTITY[1]) ∧ in(EVENT[6]) = ENTITY[2])

# ::id 727_textbook_TANAKA;006_ID_18770;IE
# ::snt This is a genuine picture by Picasso .
∃ ATTRIB[3] EVENT[4] ENTITY[2] ENTITY[1] (
 genuine(ATTRIB[3]) ∧
  is_picture_by(ENTITY[2], ENTITY[Picasso]) ∧ is_picture_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ copula(EVENT[4], ENTITY[1], ENTITY[2]))

# ::id 728_textbook_TANAKA;006_ID_51483;IE
# ::snt In summer we used to go swimming in the river .
∃ REF1[2] EVENT[6] EVENT[3] ENTITY[4] ENTITY[1] ENTITY[5] (
 river(ENTITY[5]) ∧
  summer(ENTITY[1]) ∧
   REF1[2] = we ∧
    swimming(ENTITY[4]) ∧
     past(EVENT[3]) ∧
      used(EVENT[3], REF1[2], go(EVENT[6], REF1[2], ENTITY[4]) ∧ in(EVENT[6]) = ENTITY[5]) ∧
       In(EVENT[3]) = ENTITY[1])

# ::id 729_textbook_TANAKA;006_ID_137391;IE
# ::snt She has a good figure .
∃ ATTRIB[3] REF1[1] EVENT[4] ENTITY[2] (REF1[1] = she ∧ good(ATTRIB[3]) ∧ is_figure_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ has(EVENT[4], REF1[1], ENTITY[2]))

# ::id 730_textbook_TANAKA;006_ID_111371;IE
# ::snt His accent sounds a little quaint .
∃ ATTRIB[5] ATTRIB[3] REF1[2] EVENT[6] DEGREE[4] ENTITY[1] (
 REF1[2] = his ∧
  is_accent_POS(ENTITY[1], REF1[2]) ∧
   little(ATTRIB[5]) ∧
    is_ATTRIBUTE(DEGREE[4], ATTRIB[5]) ∧
     is_quaint_MSR(ATTRIB[3], DEGREE[4]) ∧ sounds(EVENT[6], ENTITY[1]) ∧ ATTRIBUTE(EVENT[6]) = ATTRIB[3])

# ::id 731_textbook_TANAKA;006_ID_26416;IE
# ::snt The plan is bound to succeed .
∃ EVENT[3] EVENT[2] ENTITY[1] (plan(ENTITY[1]) ∧ is_bound(EVENT[2], ENTITY[1], succeed(EVENT[3], ENTITY[1])))

# ::id 732_textbook_TANAKA;006_ID_44145;IE
# ::snt My brain gets blown away hearing words of lies .
∃ SITUATION[8] SITUATION[3] REF1[2] EVENT[6] EVENT[7] GROUP[5] GROUP[4] ENTITY[1] (
 REF1[2] = my ∧
  is_brain_POS(ENTITY[1], REF1[2]) ∧
   lies(GROUP[5]) ∧
    is_words_of(GROUP[4], GROUP[5]) ∧
     is_FACT_THAT(SITUATION[3], hearing(EVENT[6], ENTITY[1], GROUP[4])) ∧
      DIR_away(SITUATION[8]) ∧ is_FACT_THAT(SITUATION[8], gets_blown(EVENT[7], ENTITY[1], SITUATION[3])))

# ::id 733_textbook_TANAKA;006_ID_60224;IE
# ::snt You should learn how to use your dictionary .
∃ REF1[1] (
 REF1[1] = you ∧
  MD_should(∃ EVENT[2] learn(EVENT[2], REF1[1],
        QUEST(∃ REF2[5] EVENT[6] ENTITY[4] ? ENTITY[3] (
              REF2[5] = your ∧
               is_dictionary_POS(ENTITY[4], REF2[5]) ∧
                is_ADV(EVENT[6], ENTITY[3]) ∧ use(EVENT[6], REF1[1], ENTITY[4]))))))

# ::id 734_textbook_TANAKA;006_ID_81419;IE
# ::snt I am on holiday this week .
∃ REF1[1] EVENT[4] ENTITY[2] TIME[3] (
 week(TIME[3]) ∧
  REF1[1] = i ∧
   holiday(ENTITY[2]) ∧
    copula(EVENT[4], REF1[1]) ∧ is_contained_in(TMP(EVENT[4]), TIME[3]) ∧ on(EVENT[4]) = ENTITY[2])

# ::id 735_textbook_TANAKA;006_ID_18667;IE
# ::snt This was built some 500 years ago .
∃ EVENT[3] GROUP[2] ENTITY[1] (
 (CD_some_500(GROUP[2]), years(GROUP[2])) ∧
  is_TMP_ago_TMP(EVENT[3], GROUP[2]) ∧ past(EVENT[3]) ∧ was_built(EVENT[3], ENTITY[1]))

# ::id 736_textbook_TANAKA;006_ID_130955;IE
# ::snt Will he be able to catch the train ?
∃ ENTITY[3] (
 train(ENTITY[3]) ∧
  QUEST(MD_will(∃ ATTRIB[2] REF1[1] EVENT[4] EVENT[5] (
             REF1[1] = he ∧
              is_able_to(ATTRIB[2], catch(EVENT[4], _, ENTITY[3])) ∧
               copula(EVENT[5], REF1[1], ATTRIB[2])))))

# ::id 737_textbook_TANAKA;006_ID_34743;IE
# ::snt Who is in fault ?
QUEST(∃ EVENT[3] ENTITY[2] ? ENTITY[1] (fault(ENTITY[2]) ∧ copula(EVENT[3], ENTITY[1]) ∧ in(EVENT[3]) = ENTITY[2]))

# ::id 738_textbook_TANAKA;006_ID_129889;IE
# ::snt He seldom , if ever , reads a book .
∃ ATTRIB[2] REF1[1] EVENT[4] ENTITY[3] (
 REF1[1] = he ∧
  ADV_ever(ATTRIB[2]) ∧
   book(ENTITY[3]) ∧
    TMP_seldom(EVENT[4]) ∧ reads(EVENT[4], REF1[1], ENTITY[3]) ∧ if(EVENT[4]) = ATTRIB[2])

# ::id 739_textbook_TANAKA;006_ID_108009;IE
# ::snt He may well be proud of his father .
∃ REF1[1] (
 REF1[1] = he ∧
  MD_may(∃ REF2[4] ATTRIB[2] EVENT[5] ENTITY[3] (
        REF2[4] = his ∧
         is_father_POS(ENTITY[3], REF2[4]) ∧
          is_proud_of(ATTRIB[2], ENTITY[3]) ∧ ADV_well(EVENT[5]) ∧ copula(EVENT[5], REF1[1], ATTRIB[2]))))

# ::id 740_textbook_TANAKA;006_ID_56465;IE
# ::snt Do you need an ambulance ?
QUEST(∃ REF1[1] EVENT[3] ENTITY[2] (REF1[1] = you ∧ ambulance(ENTITY[2]) ∧ do_need(EVENT[3], REF1[1], ENTITY[2])))

# ::id 741_textbook_TANAKA;006_ID_58743;IE
# ::snt Is your apartment house maintained very well ?
QUEST(∃ REF1[2] EVENT[3] ENTITY[1] (
      REF1[2] = your ∧
       is_apartment_house_POS(ENTITY[1], REF1[2]) ∧ ADV_very_well(EVENT[3]) ∧ maintained(EVENT[3], _, ENTITY[1])))

# ::id 742_textbook_TANAKA;006_ID_130705;IE
# ::snt He promised me to come .
∃ REF2[3] REF1[1] EVENT[4] EVENT[2] (
 REF1[1] = he ∧
  REF2[3] = me ∧ past(EVENT[2]) ∧ promised(EVENT[2], REF1[1], come(EVENT[4], REF2[3])))

# ::id 743_textbook_TANAKA;006_ID_84309;IE
# ::snt I enjoyed talking with him .
∃ REF2[3] SITUATION[2] REF1[1] EVENT[4] EVENT[5] (
 REF1[1] = i ∧
  REF2[3] = him ∧
   is_FACT_THAT(SITUATION[2], talking(EVENT[4], REF1[1]) ∧ with(EVENT[4]) = REF2[3]) ∧
    past(EVENT[5]) ∧ enjoyed(EVENT[5], REF1[1], SITUATION[2]))

# ::id 744_textbook_TANAKA;006_ID_106754;IE
# ::snt Japanese people exchange gifts in order to communicate .
∃ ATTRIB[2] EVENT[5] EVENT[6] ENTITY[4] GROUP[3] GROUP[1] (
 japanese(ATTRIB[2]) ∧
  is_people_ATTRIBUTE(GROUP[1], ATTRIB[2]) ∧
   gifts(GROUP[3]) ∧
    is_order_to(ENTITY[4], communicate(EVENT[5])) ∧
     exchange(EVENT[6], GROUP[1], GROUP[3]) ∧ in(EVENT[6]) = ENTITY[4])

# ::id 745_textbook_TANAKA;006_ID_119001;IE
# ::snt He lives in a poor district of London .
∃ ATTRIB[3] REF1[1] EVENT[4] ENTITY[2] (
 REF1[1] = he ∧
  poor(ATTRIB[3]) ∧
   is_district_of(ENTITY[2], ENTITY[London]) ∧ is_district_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
    lives(EVENT[4], REF1[1]) ∧ in(EVENT[4]) = ENTITY[2])

# ::id 746_textbook_TANAKA;006_ID_121305;IE
# ::snt Fool as he is , he knows how to make money .
∃ REF2[5] REF1[3] SITUATION[2] EVENT[4] EVENT[6] ENTITY[1] (
 REF1[3] = he ∧
  is_FACT_THAT(SITUATION[2], copula(EVENT[4], REF1[3])) ∧
   is_Fool_as(ENTITY[1], SITUATION[2]) ∧
    REF2[5] = he ∧
     knows(EVENT[6], REF2[5],
      QUEST(∃ EVENT[9] ENTITY[8] ? ENTITY[7] (
            money(ENTITY[8]) ∧
             is_ADV(EVENT[9], ENTITY[7]) ∧ make(EVENT[9], REF2[5], ENTITY[8])))) ∧
      ADV(EVENT[6]) = ENTITY[1])

# ::id 747_textbook_TANAKA;006_ID_151604;IE
# ::snt I slept so well last night .
∃ ATTRIB[3] REF1[1] EVENT[4] TIME[2] (
 REF1[1] = i ∧
  last(ATTRIB[3]) ∧
   is_night_ATTRIBUTE(TIME[2], ATTRIB[3]) ∧
    ADV_so_well(EVENT[4]) ∧
     past(EVENT[4]) ∧ slept(EVENT[4], REF1[1]) ∧ is_contained_in(TMP(EVENT[4]), TIME[2]))

# ::id 748_textbook_TANAKA;006_ID_74457;IE
# ::snt I hope my mistake will escape his notice .
∃ REF2[4] REF1[1] EVENT[2] ENTITY[3] (
 REF1[1] = i ∧
  REF2[4] = my ∧
   is_mistake_POS(ENTITY[3], REF2[4]) ∧
    hope(EVENT[2], REF1[1],
     MD_will(∃ REF3[6] EVENT[7] ENTITY[5] (REF3[6] = his ∧ is_notice_POS(ENTITY[5], REF3[6]) ∧ escape(EVENT[7], ENTITY[3], ENTITY[5])))))

# ::id 749_textbook_TANAKA;006_ID_88133;IE
# ::snt Get your things together .
IMPERATIVE(∃ REF1[2] EVENT[3] GROUP[1] (
      REF1[2] = your ∧
       is_things_POS(GROUP[1], REF1[2]) ∧ ADV_together(EVENT[3]) ∧ get(EVENT[3], _, GROUP[1])))

# ::id 750_textbook_TANAKA;006_ID_123096;IE
# ::snt He is the only friend I can really trust .
∃ REF1[1] REF2[5] ENTITY[3] (
 REF2[5] = i ∧
  MD_can(∃ EVENT[6] (ADV_really(EVENT[6]) ∧ trust(EVENT[6], REF2[5], ENTITY[3]))) ∧ friend(ENTITY[3]) ∧
   REF1[1] = he ∧ ONLY ENTITY[2] (is_of(ENTITY[2], ENTITY[3]), ∃ EVENT[8] copula(EVENT[8], REF1[1], ENTITY[2])))

# ::id 751_textbook_TANAKA;006_ID_162561;IE
# ::snt Obstetric care is in crisis as the number of obstetricians continues to fall .
∃ SITUATION[4] ATTRIB[2] EVENT[8] EVENT[7] EVENT[9] ENTITY[3] ENTITY[1] GROUP[6] ENTITY[5] (
 obstetricians(GROUP[6]) ∧
  is_number_of(ENTITY[5], GROUP[6]) ∧
   obstetric(ATTRIB[2]) ∧
    is_care_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧
     crisis(ENTITY[3]) ∧
      is_FACT_THAT(SITUATION[4], continues(EVENT[7], ENTITY[5], fall(EVENT[8], ENTITY[5]))) ∧
       copula(EVENT[9], ENTITY[1]) ∧ as(EVENT[9]) = SITUATION[4] ∧ in(EVENT[9]) = ENTITY[3])

# ::id 752_textbook_TANAKA;006_ID_138260;IE
# ::snt She is Tom 's sister .
∃ REF1[1] EVENT[3] ENTITY[2] (REF1[1] = she ∧ is_sister_POS(ENTITY[2], ENTITY[Tom]) ∧ copula(EVENT[3], REF1[1], ENTITY[2]))

# ::id 753_textbook_TANAKA;006_ID_26624;IE
# ::snt The building is rotten inside and out .
∃ ATTRIB[2] EVENT[3] ENTITY[1] (building(ENTITY[1]) ∧ ADV_inside_out(ATTRIB[2]) ∧ rotten(ATTRIB[2]) ∧ copula(EVENT[3], ENTITY[1], ATTRIB[2]))

# ::id 754_textbook_TANAKA;006_ID_9738;IE
# ::snt All the money spent , we started looking for work .
∃ SITUATION[4] REF1[3] ENTITY[5] EVENT[6] EVENT[7] (
 past(EVENT[7]) ∧
  REF1[3] = we ∧
   work(ENTITY[5]) ∧
    is_FACT_THAT(SITUATION[4], looking(EVENT[6], REF1[3]) ∧ for(EVENT[6]) = ENTITY[5]) ∧
     CONJ_and(ALL ENTITY[1] (money(ENTITY[1]), ∃ EVENT[2] spent(EVENT[2], _, ENTITY[1])), started(EVENT[7], REF1[3], SITUATION[4])))

# ::id 755_textbook_TANAKA;006_ID_19122;IE
# ::snt This is a matter worthy of note .
∃ ATTRIB[3] EVENT[5] ENTITY[4] ENTITY[2] ENTITY[1] (
 note(ENTITY[4]) ∧
  is_worthy_of(ATTRIB[3], ENTITY[4]) ∧ is_matter_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ copula(EVENT[5], ENTITY[1], ENTITY[2]))

# ::id 756_textbook_TANAKA;006_ID_25518;IE
# ::snt The house deprived us of light .
∃ REF1[2] EVENT[4] ENTITY[3] ENTITY[1] (
 house(ENTITY[1]) ∧
  REF1[2] = us ∧
   light(ENTITY[3]) ∧
    past(EVENT[4]) ∧ deprived(EVENT[4], ENTITY[1], REF1[2]) ∧ of(EVENT[4]) = ENTITY[3])

# ::id 757_textbook_TANAKA;006_ID_111075;IE
# ::snt His brother is still taller .
∃ ATTRIB[3] REF1[2] EVENT[4] ENTITY[1] (
 REF1[2] = his ∧
  is_brother_POS(ENTITY[1], REF1[2]) ∧ taller(ATTRIB[3]) ∧ TMP_still(EVENT[4]) ∧ copula(EVENT[4], ENTITY[1], ATTRIB[3]))

# ::id 758_textbook_TANAKA;006_ID_142339;IE
# ::snt She was very busy .
∃ ATTRIB[2] REF1[1] EVENT[3] (REF1[1] = she ∧ very_busy(ATTRIB[2]) ∧ past(EVENT[3]) ∧ copula(EVENT[3], REF1[1], ATTRIB[2]))

# ::id 759_textbook_TANAKA;006_ID_64854;IE
# ::snt Go off right now !
IMPERATIVE(∃ EVENT[1] (TMP_right_now(EVENT[1]) ∧ go_off(EVENT[1])))

# ::id 760_textbook_TANAKA;006_ID_6161;IE
# ::snt The teacher handles his pupils well .
∃ REF1[3] EVENT[4] GROUP[2] ENTITY[1] (
 teacher(ENTITY[1]) ∧
  REF1[3] = his ∧ is_pupils_POS(GROUP[2], REF1[3]) ∧ ADV_well(EVENT[4]) ∧ handles(EVENT[4], ENTITY[1], GROUP[2]))

# ::id 761_textbook_TANAKA;006_ID_48070;IE
# ::snt I like to travel by myself .
∃ REF2[3] REF1[1] EVENT[4] EVENT[2] (
 REF1[1] = i ∧
  REF2[3] = myself ∧ like(EVENT[2], REF1[1], travel(EVENT[4], REF1[1]) ∧ by(EVENT[4]) = REF2[3]))

# ::id 762_textbook_TANAKA;006_ID_105172;IE
# ::snt Young animals adapt quickly to a new environment .
∃ ATTRIB[4] ATTRIB[2] EVENT[5] ENTITY[3] GROUP[1] (
 young(ATTRIB[2]) ∧
  is_animals_ATTRIBUTE(GROUP[1], ATTRIB[2]) ∧
   new(ATTRIB[4]) ∧
    is_environment_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
     ADV_quickly(EVENT[5]) ∧ adapt(EVENT[5], GROUP[1]) ∧ to(EVENT[5]) = ENTITY[3])

# ::id 763_textbook_TANAKA;006_ID_3501;IE
# ::snt Does your watch keep good time ?
QUEST(∃ ATTRIB[4] REF1[2] EVENT[5] ENTITY[3] ENTITY[1] (
      REF1[2] = your ∧
       is_watch_POS(ENTITY[1], REF1[2]) ∧
        good(ATTRIB[4]) ∧ is_time_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧ does_keep(EVENT[5], ENTITY[1], ENTITY[3])))

# ::id 764_textbook_TANAKA;006_ID_59020;IE
# ::snt Your conduct is beyond bearing .
∃ REF1[2] EVENT[4] ENTITY[3] ENTITY[1] (
 REF1[2] = your ∧
  is_conduct_POS(ENTITY[1], REF1[2]) ∧
   bearing(ENTITY[3]) ∧ copula(EVENT[4], ENTITY[1]) ∧ beyond(EVENT[4]) = ENTITY[3])

# ::id 765_textbook_TANAKA;006_ID_23377;IE
# ::snt May I trouble you for the pepper ?
∃ ENTITY[3] (
 pepper(ENTITY[3]) ∧
  QUEST(MD_may(∃ REF2[2] REF1[1] EVENT[4] (
             REF1[1] = i ∧
              REF2[2] = you ∧
               trouble(EVENT[4], REF1[1], REF2[2]) ∧ for(EVENT[4]) = ENTITY[3]))))

# ::id 766_textbook_TANAKA;006_ID_41696;IE
# ::snt The boat was cast ashore .
∃ EVENT[2] ENTITY[1] (boat(ENTITY[1]) ∧ DIR_ashore(EVENT[2]) ∧ past(EVENT[2]) ∧ cast(EVENT[2], _, ENTITY[1]))

# ::id 767_textbook_TANAKA;006_ID_69853;IE
# ::snt I take full responsibility for the action .
∃ ATTRIB[3] REF1[1] EVENT[5] ENTITY[2] ENTITY[4] (
 action(ENTITY[4]) ∧
  REF1[1] = i ∧
   full(ATTRIB[3]) ∧
    is_responsibility_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ take(EVENT[5], REF1[1], ENTITY[2]) ∧ for(EVENT[5]) = ENTITY[4])

# ::id 768_textbook_TANAKA;006_ID_21038;IE
# ::snt I 'd like to place a person-to-person call to Chicago .
∃ REF1[1] (
 REF1[1] = i ∧
  MD'd(∃ ATTRIB[4] EVENT[5] EVENT[2] ENTITY[3] (
        person-to-person(ATTRIB[4]) ∧
         is_call_to(ENTITY[3], ENTITY[Chicago]) ∧ is_call_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
          like(EVENT[2], REF1[1], place(EVENT[5], REF1[1], ENTITY[3])))))

# ::id 769_textbook_TANAKA;006_ID_88005;IE
# ::snt It was you that was responsible for the accident .
∃ ATTRIB[4] REF1[1] EVENT[6] EVENT[7] ENTITY[2] ENTITY[5] (
 accident(ENTITY[5]) ∧
  REF1[1] = you ∧
   is_responsible_for(ATTRIB[4], ENTITY[5]) ∧
    copula(EVENT[6], ENTITY[2], ATTRIB[4]) ∧
     past(EVENT[6]) ∧ past(EVENT[7]) ∧ copula(EVENT[7], ENTITY[2], REF1[1]))

# ::id 770_textbook_TANAKA;006_ID_51810;IE
# ::snt He has to work hard so as to support his family .
∃ REF2[4] SITUATION[2] REF1[1] EVENT[5] EVENT[7] EVENT[6] ENTITY[3] (
 REF1[1] = he ∧
  REF2[4] = his ∧
   is_family_POS(ENTITY[3], REF2[4]) ∧
    is_FACT_THAT(SITUATION[2], support(EVENT[5], REF1[1], ENTITY[3])) ∧
     ADV_hard(EVENT[7]) ∧
      has(EVENT[6], REF1[1], work(EVENT[7], REF1[1])) ∧ so_as(EVENT[6]) = SITUATION[2])

# ::id 771_textbook_TANAKA;006_ID_114338;IE
# ::snt In an emergency he had nothing to fall back upon .
∃ REF1[2] ENTITY[1] (
 emergency(ENTITY[1]) ∧
  REF1[2] = he ∧
   ¬ ∃ EVENT[5] EVENT[6] ENTITY[3] (
         fall_back_upon(EVENT[5], ENTITY[3]) ∧ thing(ENTITY[3]) ∧
          past(EVENT[6]) ∧ had(EVENT[6], REF1[2], ENTITY[3]) ∧ In(EVENT[6]) = ENTITY[1]))

# ::id 772_textbook_TANAKA;006_ID_90740;IE
# ::snt In fall they go back to school .
∃ REF1[2] EVENT[4] ENTITY[3] ENTITY[1] (
 fall(ENTITY[1]) ∧
  REF1[2] = they ∧
   school(ENTITY[3]) ∧
    is_ADV_back_to(EVENT[4], ENTITY[3]) ∧ go(EVENT[4], REF1[2]) ∧ In(EVENT[4]) = ENTITY[1])

# ::id 773_textbook_TANAKA;006_ID_66693;IE
# ::snt The trouble is that we are short of money .
∃ ATTRIB[4] REF1[3] EVENT[6] EVENT[2] ENTITY[5] ENTITY[1] (
 trouble(ENTITY[1]) ∧
  REF1[3] = we ∧
   money(ENTITY[5]) ∧
    is_short_of(ATTRIB[4], ENTITY[5]) ∧ copula(EVENT[2], ENTITY[1], copula(EVENT[6], REF1[3], ATTRIB[4])))

# ::id 774_textbook_TANAKA;006_ID_86241;IE
# ::snt I invited all my friends .
∃ REF1[1] (
 REF1[1] = i ∧
  ALL REF2[3] GROUP[2] ((REF2[3] = my ∧ is_friends_POS(GROUP[2], REF2[3])), ∃ EVENT[4] (past(EVENT[4]) ∧ invited(EVENT[4], REF1[1], GROUP[2]))))

# ::id 775_textbook_TANAKA;006_ID_120041;IE
# ::snt He tried again and again , but did n't succeed .
∃ REF1[1] EVENT[2] (
 REF1[1] = he ∧
  ADV_again_again(EVENT[2]) ∧
   past(EVENT[2]) ∧
    CONJ_but(tried(EVENT[2], REF1[1]), ¬ ∃ EVENT[4] (past(EVENT[4]) ∧ did_succeed(EVENT[4], REF1[1]))))

# ::id 776_textbook_TANAKA;006_ID_124543;IE
# ::snt He may well complain about his salary .
∃ REF1[1] (
 REF1[1] = he ∧
  MD_may(∃ REF2[3] EVENT[4] ENTITY[2] (
        REF2[3] = his ∧
         is_salary_POS(ENTITY[2], REF2[3]) ∧
          ADV_well(EVENT[4]) ∧ complain(EVENT[4], REF1[1]) ∧ about(EVENT[4]) = ENTITY[2])))

# ::id 777_textbook_TANAKA;006_ID_129313;IE
# ::snt He made a mistake through carelessness .
∃ REF1[1] EVENT[4] ENTITY[3] ENTITY[2] (
 REF1[1] = he ∧
  mistake(ENTITY[2]) ∧
   carelessness(ENTITY[3]) ∧
    past(EVENT[4]) ∧ made(EVENT[4], REF1[1], ENTITY[2]) ∧ through(EVENT[4]) = ENTITY[3])

# ::id 778_textbook_TANAKA;006_ID_78205;IE
# ::snt I thought the questions were easy .
∃ ATTRIB[4] REF1[1] EVENT[5] EVENT[2] GROUP[3] (
 questions(GROUP[3]) ∧
  REF1[1] = i ∧
   easy(ATTRIB[4]) ∧
    is_before(EVENT[5], EVENT[2]) ∧
     past(EVENT[2]) ∧ thought(EVENT[2], REF1[1], copula(EVENT[5], GROUP[3], ATTRIB[4])))

# ::id 779_textbook_TANAKA;006_ID_99515;IE
# ::snt Many Americans are interested in jazz .
MANY GROUP[1] (Americans(GROUP[1]),
 ∃ ATTRIB[2] EVENT[4] ENTITY[3] (jazz(ENTITY[3]) ∧ is_interested_in(ATTRIB[2], ENTITY[3]) ∧ copula(EVENT[4], GROUP[1], ATTRIB[2])))

# ::id 780_textbook_TANAKA;006_ID_162559;IE
# ::snt You can adjust the seat height by moving the adjustment lever up .
∃ REF1[1] ENTITY[3] ENTITY[2] (
 seat_height(ENTITY[2]) ∧
  adjustment_lever(ENTITY[3]) ∧
   REF1[1] = you ∧
    MD_can(∃ EVENT[4] EVENT[5] CRD_by(moving_up(EVENT[4], ENTITY[2], ENTITY[3]), adjust(EVENT[5], REF1[1], ENTITY[2]))))

# ::id 781_textbook_TANAKA;006_ID_57739;IE
# ::snt Find oneself in a difficult position .
IMPERATIVE(∃ ATTRIB[3] REF1[1] EVENT[4] ENTITY[2] (
      REF1[1] = oneself ∧
       difficult(ATTRIB[3]) ∧
        is_position_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ find(EVENT[4], _, REF1[1]) ∧ in(EVENT[4]) = ENTITY[2]))

# ::id 782_textbook_TANAKA;006_ID_138132;IE
# ::snt She managed to carry all the bags herself .
∃ REF1[1] EVENT[2] (
 REF1[1] = she ∧
  past(EVENT[2]) ∧
   managed(EVENT[2], REF1[1],
    ALL GROUP[3] (bags(GROUP[3]),
     ∃ REF2[4] EVENT[5] (REF2[4] = herself ∧ carry(EVENT[5], REF1[1], GROUP[3]) ∧ RFL(EVENT[5]) = REF2[4]))))

# ::id 783_textbook_TANAKA;006_ID_22210;IE
# ::snt John is too fat to run fast .
∃ ATTRIB[1] EVENT[3] EVENT[2] (too_fat(ATTRIB[1]) ∧ ADV_fast(EVENT[3]) ∧ copula(EVENT[2], ENTITY[John], ATTRIB[1], run(EVENT[3], ENTITY[John])))

# ::id 784_textbook_TANAKA;006_ID_118204;IE
# ::snt He translated French into Japanese .
∃ REF1[1] EVENT[2] (REF1[1] = he ∧ translated(EVENT[2], REF1[1], ENTITY[French]) ∧ into(EVENT[2]) = ENTITY[Japanese])

# ::id 785_textbook_TANAKA;006_ID_97731;IE
# ::snt The teacher made him stay after school .
∃ REF1[3] EVENT[5] EVENT[2] ENTITY[4] ENTITY[1] (
 teacher(ENTITY[1]) ∧
  REF1[3] = him ∧
   school(ENTITY[4]) ∧
    past(EVENT[2]) ∧
     made(EVENT[2], ENTITY[1], stay(EVENT[5], REF1[3]) ∧ after(EVENT[5]) = ENTITY[4]))

# ::id 786_textbook_TANAKA;006_ID_68942;IE
# ::snt My sister is playing with dolls .
∃ REF1[2] EVENT[4] GROUP[3] ENTITY[1] (
 REF1[2] = my ∧
  is_sister_POS(ENTITY[1], REF1[2]) ∧
   dolls(GROUP[3]) ∧ is_playing(EVENT[4], ENTITY[1]) ∧ with(EVENT[4]) = GROUP[3])

# ::id 787_textbook_TANAKA;006_ID_46408;IE
# ::snt Our team won in the intercollegiate tournament .
∃ REF1[2] ATTRIB[4] EVENT[5] ENTITY[1] ENTITY[3] (
 intercollegiate(ATTRIB[4]) ∧
  is_tournament_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
   REF1[2] = our ∧
    is_team_POS(ENTITY[1], REF1[2]) ∧
     past(EVENT[5]) ∧ won(EVENT[5], ENTITY[1]) ∧ in(EVENT[5]) = ENTITY[3])

# ::id 788_textbook_TANAKA;006_ID_28304;IE
# ::snt The document bore his signature .
∃ REF1[3] EVENT[4] ENTITY[2] ENTITY[1] (
 document(ENTITY[1]) ∧
  REF1[3] = his ∧ is_signature_POS(ENTITY[2], REF1[3]) ∧ past(EVENT[4]) ∧ bore(EVENT[4], ENTITY[1], ENTITY[2]))

# ::id 789_textbook_TANAKA;006_ID_138536;IE
# ::snt She bought a pair of boots .
∃ REF1[1] EVENT[4] GROUP[3] ENTITY[2] (
 REF1[1] = she ∧
  boots(GROUP[3]) ∧ is_pair_of(ENTITY[2], GROUP[3]) ∧ past(EVENT[4]) ∧ bought(EVENT[4], REF1[1], ENTITY[2]))

# ::id 790_textbook_TANAKA;006_ID_14414;IE
# ::snt This flower smells nice .
∃ ATTRIB[2] EVENT[3] ENTITY[1] (flower(ENTITY[1]) ∧ nice(ATTRIB[2]) ∧ smells(EVENT[3], ENTITY[1], ATTRIB[2]))

# ::id 791_textbook_TANAKA;006_ID_38882;IE
# ::snt You should not have lent the money to such a person .
∃ REF1[1] ENTITY[2] (
 money(ENTITY[2]) ∧
  REF1[1] = you ∧
   MD_should(¬ ∃ ATTRIB[4] EVENT[5] ENTITY[3] (
              such(ATTRIB[4]) ∧
               is_person_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧ have_lent(EVENT[5], REF1[1], ENTITY[2], ENTITY[3]))))

# ::id 792_textbook_TANAKA;006_ID_29568;IE
# ::snt She became scared when she noticed the man following her .
∃ REF2[3] ATTRIB[2] REF1[1] REF3[6] EVENT[8] EVENT[9] EVENT[7] ENTITY[4] (
 REF3[6] = her ∧
  following(EVENT[7], ENTITY[4], REF3[6]) ∧ man(ENTITY[4]) ∧
   REF1[1] = she ∧
    scared(ATTRIB[2]) ∧
     REF2[3] = she ∧
      past(EVENT[8]) ∧
       past(EVENT[9]) ∧ CRD_when(noticed(EVENT[8], REF2[3], ENTITY[4]), became(EVENT[9], REF1[1], ATTRIB[2])))

# ::id 793_textbook_TANAKA;006_ID_60732;IE
# ::snt The crowd gave way and let him pass .
∃ REF1[5] EVENT[2] EVENT[6] EVENT[4] ENTITY[1] (
 crowd(ENTITY[1]) ∧
  ADV_way(EVENT[2]) ∧
   past(EVENT[2]) ∧
    past(EVENT[4]) ∧
     REF1[5] = him ∧
      CONJ_and(gave(EVENT[2], ENTITY[1]), let(EVENT[4], ENTITY[1], pass(EVENT[6], REF1[5]))))

# ::id 794_textbook_TANAKA;006_ID_96120;IE
# ::snt The stars twinkled .
∃ EVENT[2] GROUP[1] (stars(GROUP[1]) ∧ past(EVENT[2]) ∧ twinkled(EVENT[2], GROUP[1]))

# ::id 795_textbook_TANAKA;006_ID_71614;IE
# ::snt We sat in the center of the room .
∃ REF1[1] EVENT[4] ENTITY[3] ENTITY[2] (
 room(ENTITY[3]) ∧
  is_center_of(ENTITY[2], ENTITY[3]) ∧
   REF1[1] = we ∧ past(EVENT[4]) ∧ sat(EVENT[4], REF1[1]) ∧ in(EVENT[4]) = ENTITY[2])

# ::id 796_textbook_TANAKA;006_ID_110659;IE
# ::snt His opinion is generally correct .
∃ ATTRIB[3] REF1[2] EVENT[4] ENTITY[1] (REF1[2] = his ∧ is_opinion_POS(ENTITY[1], REF1[2]) ∧ generally_correct(ATTRIB[3]) ∧ copula(EVENT[4], ENTITY[1], ATTRIB[3]))

# ::id 797_textbook_TANAKA;006_ID_34641;IE
# ::snt It happened that I knew her by sight .
∃ REF2[3] REF1[2] SITUATION[1] EVENT[5] EVENT[6] ENTITY[4] (
 REF1[2] = i ∧
  REF2[3] = her ∧
   sight(ENTITY[4]) ∧
    is_FACT_THAT(SITUATION[1], knew(EVENT[5], REF1[2], REF2[3]) ∧ by(EVENT[5]) = ENTITY[4]) ∧
     past(EVENT[5]) ∧ past(EVENT[6]) ∧ happened(EVENT[6], SITUATION[1]))

# ::id 798_textbook_TANAKA;006_ID_114588;IE
# ::snt When did he come back from Osaka ?
QUEST(∃ REF1[2] EVENT[3] ? TIME[1] (
      REF1[2] = he ∧
       is_TMP(EVENT[3], TIME[1]) ∧
        past(EVENT[3]) ∧ did_come_back(EVENT[3], REF1[2]) ∧ from(EVENT[3]) = ENTITY[Osaka]))

# ::id 799_textbook_TANAKA;006_ID_120650;IE
# ::snt I 'm sure he is holding back something from us .
∃ REF2[3] ATTRIB[2] REF1[1] EVENT[7] (
 REF1[1] = i ∧
  REF2[3] = he ∧
   is_sure_THAT(ATTRIB[2],
    SOME ENTITY[4] (thing(ENTITY[4]),
     ∃ REF3[5] EVENT[6] (REF3[5] = us ∧ is_holding_back(EVENT[6], REF2[3], ENTITY[4]) ∧ from(EVENT[6]) = REF3[5]))) ∧
    copula(EVENT[7], REF1[1], ATTRIB[2]))

# ::id 800_textbook_TANAKA;006_ID_86125;IE
# ::snt I 'll leave Osaka for Tokyo tomorrow .
∃ REF1[1] (
 REF1[1] = i ∧
  MD'll(∃ EVENT[3] TIME[2] (
        tomorrow(TIME[2]) ∧
         leave(EVENT[3], REF1[1], ENTITY[Osaka]) ∧ is_contained_in(TMP(EVENT[3]), TIME[2]) ∧
          for(EVENT[3]) = ENTITY[Tokyo])))

# ::id 801_textbook_TANAKA;006_ID_126661;IE
# ::snt He gave the same answer as before .
∃ REF1[1] ATTRIB[3] EVENT[4] ENTITY[2] (
 same(ATTRIB[3]) ∧
  is_answer_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
   REF1[1] = he ∧ TMP_as_before(EVENT[4]) ∧ past(EVENT[4]) ∧ gave(EVENT[4], REF1[1], ENTITY[2]))

# ::id 802_textbook_TANAKA;006_ID_83345;IE
# ::snt I have an open ticket to Osaka .
∃ ATTRIB[3] REF1[1] EVENT[4] ENTITY[2] (
 REF1[1] = i ∧
  open(ATTRIB[3]) ∧
   is_ticket_to(ENTITY[2], ENTITY[Osaka]) ∧ is_ticket_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ have(EVENT[4], REF1[1], ENTITY[2]))

# ::id 803_textbook_TANAKA;006_ID_44108;IE
# ::snt May I go home now ?
QUEST(MD_may(∃ REF1[1] EVENT[3] ENTITY[2] (
           REF1[1] = i ∧
            home(ENTITY[2]) ∧
             TMP_now(EVENT[3]) ∧ go(EVENT[3], REF1[1]) ∧ DIR(EVENT[3]) = ENTITY[2])))

# ::id 804_textbook_TANAKA;006_ID_78760;IE
# ::snt I study very little .
∃ ATTRIB[2] REF1[1] EVENT[3] (REF1[1] = i ∧ very_little(ATTRIB[2]) ∧ study(EVENT[3], REF1[1], ATTRIB[2]))

# ::id 805_textbook_TANAKA;006_ID_56714;IE
# ::snt A fish can swim .
∃ ENTITY[1] (fish(ENTITY[1]) ∧ MD_can(∃ EVENT[2] swim(EVENT[2], ENTITY[1])))

# ::id 806_textbook_TANAKA;006_ID_109403;IE
# ::snt He will blow our party .
∃ REF1[1] (
 REF1[1] = he ∧
  MD_will(∃ REF2[3] EVENT[4] ENTITY[2] (REF2[3] = our ∧ is_party_POS(ENTITY[2], REF2[3]) ∧ blow(EVENT[4], REF1[1], ENTITY[2]))))

# ::id 807_textbook_TANAKA;006_ID_114722;IE
# ::snt He is eager to succeed .
∃ ATTRIB[2] REF1[1] EVENT[3] EVENT[4] (REF1[1] = he ∧ is_eager_to(ATTRIB[2], succeed(EVENT[3])) ∧ copula(EVENT[4], REF1[1], ATTRIB[2]))

# ::id 808_textbook_TANAKA;006_ID_19572;IE
# ::snt Carry these books back to the bookshelf .
∃ ENTITY[2] GROUP[1] (
 books(GROUP[1]) ∧
  bookshelf(ENTITY[2]) ∧ IMPERATIVE(∃ EVENT[3] (is_ADV_back_to(EVENT[3], ENTITY[2]) ∧ carry(EVENT[3], _, GROUP[1]))))

# ::id 809_textbook_TANAKA;006_ID_30100;IE
# ::snt The railroad is now in the process of construction .
∃ EVENT[4] ENTITY[3] ENTITY[2] ENTITY[1] (
 railroad(ENTITY[1]) ∧
  construction(ENTITY[3]) ∧
   is_process_of(ENTITY[2], ENTITY[3]) ∧
    TMP_now(EVENT[4]) ∧ copula(EVENT[4], ENTITY[1]) ∧ in(EVENT[4]) = ENTITY[2])

# ::id 810_textbook_TANAKA;006_ID_123044;IE
# ::snt He robbed me of every cent I had .
∃ REF2[2] REF1[1] (
 REF1[1] = he ∧
  REF2[2] = me ∧
   ∀ REF3[5] EVENT[6] ENTITY[3] (
    (REF3[5] = i ∧ had(EVENT[6], REF3[5], ENTITY[3]) ∧ cent(ENTITY[3]) ∧
     past(EVENT[6])) → ∃ EVENT[7] (robbed(EVENT[7], REF1[1], REF2[2]) ∧ of(EVENT[7]) = ENTITY[3])))

# ::id 811_textbook_TANAKA;006_ID_51652;IE
# ::snt I 've left my watch at home .
∃ REF2[3] REF1[1] EVENT[5] ENTITY[4] ENTITY[2] (
 REF1[1] = i ∧
  REF2[3] = my ∧
   is_watch_POS(ENTITY[2], REF2[3]) ∧
    home(ENTITY[4]) ∧ 've_left(EVENT[5], REF1[1], ENTITY[2]) ∧ at(EVENT[5]) = ENTITY[4])

# ::id 812_textbook_TANAKA;006_ID_14425;IE
# ::snt How beautiful this flower is !
∃ ENTITY[2] (flower(ENTITY[2]) ∧ QUEST(∃ EVENT[3] ? ATTRIB[1] (beautiful(ATTRIB[1]) ∧ copula(EVENT[3], ENTITY[2], ATTRIB[1]))))

# ::id 813_textbook_TANAKA;006_ID_106675;IE
# ::snt Japanese has something in common with Korean .
SOME ENTITY[2] ENTITY[1] ((is_common_with(ENTITY[2], ENTITY[Korean]) ∧ is_thing_in(ENTITY[1], ENTITY[2])), ∃ EVENT[3] has(EVENT[3], GROUP[Japanese], ENTITY[1]))

# ::id 814_textbook_TANAKA;006_ID_112100;IE
# ::snt His life is full of trouble .
∃ ATTRIB[3] REF1[2] EVENT[5] ENTITY[4] ENTITY[1] (
 REF1[2] = his ∧
  is_life_POS(ENTITY[1], REF1[2]) ∧
   trouble(ENTITY[4]) ∧ is_full_of(ATTRIB[3], ENTITY[4]) ∧ copula(EVENT[5], ENTITY[1], ATTRIB[3]))

# ::id 815_textbook_TANAKA;006_ID_151189;IE
# ::snt Do n't fail to come here by the appointed time .
∃ ATTRIB[3] ENTITY[2] (
 appointed(ATTRIB[3]) ∧
  is_time_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
   IMPERATIVE(¬ ∃ EVENT[4] EVENT[1] (
              LOC_here(EVENT[4]) ∧
               do_fail(EVENT[1], come(EVENT[4]) ∧ by(EVENT[4]) = ENTITY[2]))))

# ::id 816_textbook_TANAKA;006_ID_88327;IE
# ::snt You should not waste your time .
∃ REF1[1] (
 REF1[1] = you ∧
  MD_should(¬ ∃ REF2[3] EVENT[4] ENTITY[2] (REF2[3] = your ∧ is_time_POS(ENTITY[2], REF2[3]) ∧ waste(EVENT[4], REF1[1], ENTITY[2]))))

# ::id 817_textbook_TANAKA;006_ID_11635;IE
# ::snt Do you accept credit cards ?
QUEST(∃ REF1[1] EVENT[3] GROUP[2] (REF1[1] = you ∧ credit_cards(GROUP[2]) ∧ do_accept(EVENT[3], REF1[1], GROUP[2])))

# ::id 818_textbook_TANAKA;006_ID_130244;IE
# ::snt He will set out for China tomorrow .
∃ REF1[1] (
 REF1[1] = he ∧
  MD_will(∃ EVENT[3] TIME[2] (
        tomorrow(TIME[2]) ∧
         set_out(EVENT[3], REF1[1]) ∧ is_contained_in(TMP(EVENT[3]), TIME[2]) ∧
          for(EVENT[3]) = ENTITY[China])))

# ::id 819_textbook_TANAKA;006_ID_120906;IE
# ::snt He dropped in on some old friends during his vacation trip to New York .
∃ REF1[1] (
 REF1[1] = he ∧
  SOME ATTRIB[3] GROUP[2] ((old(ATTRIB[3]) ∧ is_friends_ATTRIBUTE(GROUP[2], ATTRIB[3])),
   ∃ REF2[5] EVENT[6] ENTITY[4] (
    REF2[5] = his ∧
     is_vacation_trip_to(ENTITY[4], ENTITY[New_York]) ∧ is_vacation_trip_POS(ENTITY[4], REF2[5]) ∧
      past(EVENT[6]) ∧
       dropped_in(EVENT[6], REF1[1]) ∧ during(EVENT[6]) = ENTITY[4] ∧ on(EVENT[6]) = GROUP[2])))

# ::id 820_textbook_TANAKA;006_ID_119735;IE
# ::snt He is master of English literature .
∃ ATTRIB[4] REF1[1] EVENT[5] ENTITY[3] ENTITY[2] (
 REF1[1] = he ∧
  english(ATTRIB[4]) ∧
   is_literature_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧ is_master_of(ENTITY[2], ENTITY[3]) ∧ copula(EVENT[5], REF1[1], ENTITY[2]))

# ::id 821_textbook_TANAKA;006_ID_64287;IE
# ::snt I found the hotel crowded with foreign tourists .
∃ ATTRIB[5] REF1[1] EVENT[6] EVENT[2] GROUP[4] ENTITY[3] (
 hotel(ENTITY[3]) ∧
  REF1[1] = i ∧
   foreign(ATTRIB[5]) ∧
    is_tourists_ATTRIBUTE(GROUP[4], ATTRIB[5]) ∧
     past(EVENT[2]) ∧
      found(EVENT[2], REF1[1], crowded(EVENT[6], ENTITY[3]) ∧ with(EVENT[6]) = GROUP[4]))

# ::id 822_textbook_TANAKA;006_ID_83418;IE
# ::snt I 'm on a par with him in mental faculties .
∃ ATTRIB[5] REF2[3] REF1[1] EVENT[6] GROUP[4] ENTITY[2] (
 REF1[1] = i ∧
  REF2[3] = him ∧
   mental(ATTRIB[5]) ∧
    is_faculties_ATTRIBUTE(GROUP[4], ATTRIB[5]) ∧
     is_par_in(ENTITY[2], GROUP[4]) ∧ is_par_with(ENTITY[2], REF2[3]) ∧
      copula(EVENT[6], REF1[1]) ∧ on(EVENT[6]) = ENTITY[2])

# ::id 823_textbook_TANAKA;006_ID_41085;IE
# ::snt Football is an old game .
∃ ATTRIB[3] EVENT[4] ENTITY[2] ENTITY[1] (Football(ENTITY[1]) ∧ old(ATTRIB[3]) ∧ is_game_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ copula(EVENT[4], ENTITY[1], ENTITY[2]))

# ::id 824_textbook_TANAKA;006_ID_149036;IE
# ::snt It began to rain in earnest .
∃ SITUATION[1] EVENT[3] EVENT[4] ENTITY[2] (
 earnest(ENTITY[2]) ∧
  is_FACT_THAT(SITUATION[1], rain(EVENT[3]) ∧ in(EVENT[3]) = ENTITY[2]) ∧
   past(EVENT[4]) ∧ began(EVENT[4], SITUATION[1]))

# ::id 825_textbook_TANAKA;006_ID_52154;IE
# ::snt Happy are those who love flowers .
∃ ATTRIB[1] EVENT[6] EVENT[5] GROUP[4] GROUP[2] (
 flowers(GROUP[4]) ∧
  love(EVENT[5], GROUP[2], GROUP[4]) ∧ happy(ATTRIB[1]) ∧ copula(EVENT[6], GROUP[2], ATTRIB[1]))

# ::id 826_textbook_TANAKA;006_ID_139306;IE
# ::snt She gives the impression of not caring much about anything .
∃ REF1[1] SITUATION[3] EVENT[7] ENTITY[2] (
 is_FACT_THAT(SITUATION[3],
  ¬ MUCH DEGREE[4] ANY ENTITY[5] (thing(ENTITY[5]),
        ∃ EVENT[6] (caring(EVENT[6]) ∧ about(EVENT[6]) = ENTITY[5] ∧ MSR(EVENT[6]) = DEGREE[4]))) ∧
  is_impression_of(ENTITY[2], SITUATION[3]) ∧ REF1[1] = she ∧ gives(EVENT[7], REF1[1], ENTITY[2]))

# ::id 827_textbook_TANAKA;006_ID_145431;IE
# ::snt The price of real estate has been rising abnormally in Japan .
∃ ATTRIB[3] EVENT[4] ENTITY[2] ENTITY[1] (
 real(ATTRIB[3]) ∧
  is_estate_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
   is_price_of(ENTITY[1], ENTITY[2]) ∧
    ADV_abnormally(EVENT[4]) ∧ has_been_rising(EVENT[4], ENTITY[1]) ∧ in(EVENT[4]) = ENTITY[Japan])

# ::id 828_textbook_TANAKA;006_ID_160831;IE
# ::snt He shuddered at the terrible scene .
∃ REF1[1] ATTRIB[3] EVENT[4] ENTITY[2] (
 terrible(ATTRIB[3]) ∧
  is_scene_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
   REF1[1] = he ∧ past(EVENT[4]) ∧ shuddered(EVENT[4], REF1[1]) ∧ at(EVENT[4]) = ENTITY[2])

# ::id 829_textbook_TANAKA;006_ID_31785;IE
# ::snt I 've gadded enough of that story .
∃ ATTRIB[3] REF1[1] EVENT[5] ENTITY[2] ENTITY[4] (
 story(ENTITY[4]) ∧
  REF1[1] = i ∧
   enough(ATTRIB[3]) ∧
    is_of(ENTITY[2], ENTITY[4]) ∧ is_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ 've_gadded(EVENT[5], REF1[1], ENTITY[2]))

# ::id 830_textbook_TANAKA;006_ID_97871;IE
# ::snt The river bends slightly to the right here .
∃ EVENT[3] ENTITY[2] ENTITY[1] (
 river(ENTITY[1]) ∧
  right(ENTITY[2]) ∧
   ADV_slightly(EVENT[3]) ∧ LOC_here(EVENT[3]) ∧ bends(EVENT[3], ENTITY[1]) ∧ to(EVENT[3]) = ENTITY[2])

# ::id 831_textbook_TANAKA;006_ID_70262;IE
# ::snt You will see that I am right .
∃ REF1[1] (
 REF1[1] = you ∧
  MD_will(∃ ATTRIB[4] REF2[3] EVENT[5] EVENT[2] (
        REF2[3] = i ∧
         right(ATTRIB[4]) ∧ see(EVENT[2], REF1[1], copula(EVENT[5], REF2[3], ATTRIB[4])))))

# ::id 832_textbook_TANAKA;006_ID_86618;IE
# ::snt Seeing me , the baby began to cry .
∃ REF1[2] EVENT[3] EVENT[5] EVENT[4] ENTITY[1] (
 baby(ENTITY[1]) ∧
  REF1[2] = me ∧
   past(EVENT[4]) ∧
    CONJ_and(seeing(EVENT[3], ENTITY[1], REF1[2]), began(EVENT[4], ENTITY[1], cry(EVENT[5], ENTITY[1]))))

# ::id 833_textbook_TANAKA;006_ID_109285;IE
# ::snt We have every reason to believe him innocent .
∃ REF1[1] (
 REF1[1] = we ∧
  ∀ ATTRIB[5] REF2[4] EVENT[6] EVENT[3] ENTITY[2] (
   (REF2[4] = him ∧ innocent(ATTRIB[5]) ∧
    is_reason_to(ENTITY[2], believe(EVENT[3], xxx(EVENT[6], REF2[4], ATTRIB[5])))) →
   ∃ EVENT[7] have(EVENT[7], REF1[1], ENTITY[2])))

# ::id 834_textbook_TANAKA;006_ID_146250;IE
# ::snt It 's against the law to carry weapons .
∃ REF1[1] EVENT[5] EVENT[3] GROUP[4] ENTITY[2] (
 law(ENTITY[2]) ∧
  REF1[1] = it ∧
   weapons(GROUP[4]) ∧
    copula(EVENT[3], REF1[1], carry(EVENT[5], REF1[1], GROUP[4])) ∧ against(EVENT[3]) = ENTITY[2])

# ::id 835_textbook_TANAKA;006_ID_124345;IE
# ::snt He went by bicycle .
∃ REF1[1] EVENT[3] ENTITY[2] (
 REF1[1] = he ∧
  bicycle(ENTITY[2]) ∧ past(EVENT[3]) ∧ went(EVENT[3], REF1[1]) ∧ by(EVENT[3]) = ENTITY[2])

# ::id 836_textbook_TANAKA;006_ID_73022;IE
# ::snt We will visit our teacher next week .
∃ REF1[1] (
 REF1[1] = we ∧
  MD_will(∃ ATTRIB[5] REF2[3] EVENT[6] TIME[4] ENTITY[2] (
        REF2[3] = our ∧
         is_teacher_POS(ENTITY[2], REF2[3]) ∧
          next(ATTRIB[5]) ∧
           is_week_ATTRIBUTE(TIME[4], ATTRIB[5]) ∧
            visit(EVENT[6], REF1[1], ENTITY[2]) ∧ is_contained_in(TMP(EVENT[6]), TIME[4]))))

# ::id 837_textbook_TANAKA;006_ID_63600;IE
# ::snt I work for public welfare .
∃ ATTRIB[3] REF1[1] EVENT[4] ENTITY[2] (
 REF1[1] = i ∧
  public(ATTRIB[3]) ∧
   is_welfare_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ work(EVENT[4], REF1[1]) ∧ for(EVENT[4]) = ENTITY[2])

# ::id 838_textbook_TANAKA;006_ID_73320;IE
# ::snt I have an outstanding debt of 10 dollars .
∃ ATTRIB[3] REF1[1] EVENT[5] GROUP[4] ENTITY[2] (
 REF1[1] = i ∧
  outstanding(ATTRIB[3]) ∧
   (CD_10(GROUP[4]), dollars(GROUP[4])) ∧
    is_debt_of(ENTITY[2], GROUP[4]) ∧ is_debt_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ have(EVENT[5], REF1[1], ENTITY[2]))

# ::id 839_textbook_TANAKA;006_ID_28073;IE
# ::snt The latter half of the drama was a little dull .
∃ ATTRIB[6] ATTRIB[4] ATTRIB[2] EVENT[7] DEGREE[5] ENTITY[3] ENTITY[1] (
 latter(ATTRIB[2]) ∧
  drama(ENTITY[3]) ∧
   is_half_ATTRIBUTE(ENTITY[1], ATTRIB[2]) ∧ is_half_of(ENTITY[1], ENTITY[3]) ∧
    little(ATTRIB[6]) ∧
     is_ATTRIBUTE(DEGREE[5], ATTRIB[6]) ∧
      is_dull_MSR(ATTRIB[4], DEGREE[5]) ∧
       past(EVENT[7]) ∧ copula(EVENT[7], ENTITY[1]) ∧ ATTRIBUTE(EVENT[7]) = ATTRIB[4])

# ::id 840_textbook_TANAKA;006_ID_111665;IE
# ::snt The news of his death reached as a bolt from the blue .
∃ REF1[3] EVENT[6] ENTITY[4] ENTITY[2] ENTITY[5] ENTITY[1] (
 REF1[3] = his ∧
  is_death_POS(ENTITY[2], REF1[3]) ∧
   is_news_of(ENTITY[1], ENTITY[2]) ∧
    blue(ENTITY[5]) ∧
     is_bolt_from(ENTITY[4], ENTITY[5]) ∧
      past(EVENT[6]) ∧ reached(EVENT[6], ENTITY[1]) ∧ as(EVENT[6]) = ENTITY[4])

# ::id 841_textbook_TANAKA;006_ID_26871;IE
# ::snt The sight arrested my attention .
∃ REF1[3] EVENT[4] ENTITY[2] ENTITY[1] (sight(ENTITY[1]) ∧ REF1[3] = my ∧ is_attention_POS(ENTITY[2], REF1[3]) ∧ arrested(EVENT[4], ENTITY[1], ENTITY[2]))

# ::id 842_textbook_TANAKA;006_ID_32197;IE
# ::snt It puts a different complexion on the situation .
∃ ATTRIB[3] REF1[1] EVENT[5] ENTITY[2] ENTITY[4] (
 situation(ENTITY[4]) ∧
  REF1[1] = it ∧
   different(ATTRIB[3]) ∧
    is_complexion_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ puts(EVENT[5], REF1[1], ENTITY[2]) ∧ on(EVENT[5]) = ENTITY[4])

# ::id 843_textbook_TANAKA;006_ID_127308;IE
# ::snt He gave a party on a large scale .
∃ ATTRIB[4] REF1[1] EVENT[5] ENTITY[3] ENTITY[2] (
 REF1[1] = he ∧
  party(ENTITY[2]) ∧
   large(ATTRIB[4]) ∧
    is_scale_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
     past(EVENT[5]) ∧ gave(EVENT[5], REF1[1], ENTITY[2]) ∧ on(EVENT[5]) = ENTITY[3])

# ::id 844_textbook_TANAKA;006_ID_26363;IE
# ::snt I lost half my interest in the project .
∃ REF1[1] ENTITY[4] (
 project(ENTITY[4]) ∧
  REF1[1] = i ∧
   HALF REF2[3] ENTITY[2] ((REF2[3] = my ∧ is_interest_in(ENTITY[2], ENTITY[4]) ∧ is_interest_POS(ENTITY[2], REF2[3])), ∃ EVENT[5] (past(EVENT[5]) ∧ lost(EVENT[5], REF1[1], ENTITY[2]))))

# ::id 845_textbook_TANAKA;006_ID_162556;IE
# ::snt At this rate the risk is high that our country 's competitive position will drop even further .
∃ ATTRIB[7] REF1[6] ATTRIB[3] EVENT[10] ENTITY[5] ENTITY[4] ENTITY[2] ENTITY[1] (
 rate(ENTITY[1]) ∧
  risk(ENTITY[2]) ∧
   REF1[6] = our ∧
    is_country_POS(ENTITY[5], REF1[6]) ∧
     competitive(ATTRIB[7]) ∧
      is_position_ATTRIBUTE(ENTITY[4], ATTRIB[7]) ∧ is_position_POS(ENTITY[4], ENTITY[5]) ∧
       is_high_THAT(ATTRIB[3], MD_will(∃ EVENT[8] (ADV_even_further(EVENT[8]) ∧ drop(EVENT[8], ENTITY[4])))) ∧
        copula(EVENT[10], ENTITY[2], ATTRIB[3]) ∧ At(EVENT[10]) = ENTITY[1])

# ::id 846_textbook_TANAKA;006_ID_55981;IE
# ::snt There is little room for doubt .
LITTLE ENTITY[2] ENTITY[1] ((doubt(ENTITY[2]) ∧ is_room_for(ENTITY[1], ENTITY[2])), ∃ EVENT[3] copula(EVENT[3], ENTITY[1]))

# ::id 847_textbook_TANAKA;006_ID_106221;IE
# ::snt In Japan all children go to school .
ALL GROUP[1] (children(GROUP[1]),
 ∃ EVENT[3] ENTITY[2] (
  school(ENTITY[2]) ∧
   go(EVENT[3], GROUP[1]) ∧ to(EVENT[3]) = ENTITY[2] ∧ In(EVENT[3]) = ENTITY[Japan]))

# ::id 848_textbook_TANAKA;006_ID_116227;IE
# ::snt He drove the dog away .
∃ REF1[1] EVENT[3] ENTITY[2] (
 dog(ENTITY[2]) ∧
  REF1[1] = he ∧ DIR_away(EVENT[3]) ∧ past(EVENT[3]) ∧ drove(EVENT[3], REF1[1], ENTITY[2]))

# ::id 849_textbook_TANAKA;006_ID_78856;IE
# ::snt I 'll drive to Detroit .
∃ REF1[1] (REF1[1] = i ∧ MD'll(∃ EVENT[2] (drive(EVENT[2], REF1[1]) ∧ to(EVENT[2]) = ENTITY[Detroit])))

# ::id 850_textbook_TANAKA;006_ID_59828;IE
# ::snt You are old enough to know this .
∃ ATTRIB[2] REF1[1] EVENT[4] EVENT[5] ENTITY[3] (
 REF1[1] = you ∧
  enough(ATTRIB[2]) ∧ is_old_to(ATTRIB[2], know(EVENT[4], _, ENTITY[3])) ∧
   copula(EVENT[5], REF1[1], ATTRIB[2]))

# ::id 851_textbook_TANAKA;006_ID_132720;IE
# ::snt They have four classes in the morning .
∃ REF1[1] EVENT[4] GROUP[2] ENTITY[3] (
 morning(ENTITY[3]) ∧
  REF1[1] = they ∧
   (CD_four(GROUP[2]), classes(GROUP[2])) ∧
    have(EVENT[4], REF1[1], GROUP[2]) ∧ in(EVENT[4]) = ENTITY[3])

# ::id 852_textbook_TANAKA;006_ID_32738;IE
# ::snt That goes against my beliefs .
∃ REF1[3] EVENT[4] GROUP[2] ENTITY[1] (
 REF1[3] = my ∧
  is_beliefs_POS(GROUP[2], REF1[3]) ∧ goes(EVENT[4], ENTITY[1]) ∧ against(EVENT[4]) = GROUP[2])

# ::id 853_textbook_TANAKA;006_ID_19859;IE
# ::snt See to it that this never happens again .
∃ ENTITY[3] IMPERATIVE(∃ REF1[1] EVENT[4] EVENT[2] (
      REF1[1] = it ∧
       TMP_never(EVENT[4]) ∧
        ADV_again(EVENT[4]) ∧
         see(EVENT[2], happens(EVENT[4], ENTITY[3])) ∧ to(EVENT[2]) = REF1[1]))

# ::id 854_textbook_TANAKA;006_ID_93711;IE
# ::snt He retires before the new pension scheme is due to come into effect .
∃ ATTRIB[5] SITUATION[2] REF1[1] ATTRIB[4] EVENT[7] EVENT[8] EVENT[9] ENTITY[6] ENTITY[3] (
 new(ATTRIB[4]) ∧
  is_pension_scheme_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧
   REF1[1] = he ∧
    effect(ENTITY[6]) ∧
     is_due_to(ATTRIB[5], come(EVENT[7]) ∧ into(EVENT[7]) = ENTITY[6]) ∧
      is_FACT_THAT(SITUATION[2], copula(EVENT[8], ENTITY[3], ATTRIB[5])) ∧
       retires(EVENT[9], REF1[1]) ∧ before(EVENT[9]) = SITUATION[2])

# ::id 855_textbook_TANAKA;006_ID_120152;IE
# ::snt He is absorbed in scientific work .
∃ ATTRIB[3] REF1[1] EVENT[4] ENTITY[2] (
 REF1[1] = he ∧
  scientific(ATTRIB[3]) ∧
   is_work_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧ is_absorbed(EVENT[4], REF1[1]) ∧ in(EVENT[4]) = ENTITY[2])

# ::id 856_textbook_TANAKA;006_ID_78136;IE
# ::snt I do not know how to use it .
∃ REF1[1] (
 REF1[1] = i ∧
  ¬ ∃ EVENT[2] do_know(EVENT[2], REF1[1],
        QUEST(∃ REF2[4] EVENT[5] ? ENTITY[3] (
              REF2[4] = it ∧
               is_ADV(EVENT[5], ENTITY[3]) ∧ use(EVENT[5], REF1[1], REF2[4])))))

# ::id 857_textbook_TANAKA;006_ID_125745;IE
# ::snt He took a look at the newspaper before going to bed .
∃ REF1[1] EVENT[5] EVENT[6] ENTITY[4] ENTITY[2] ENTITY[3] (
 newspaper(ENTITY[3]) ∧
  REF1[1] = he ∧
   is_look_at(ENTITY[2], ENTITY[3]) ∧
    bed(ENTITY[4]) ∧
     past(EVENT[6]) ∧
      CRD_before(going(EVENT[5], ENTITY[2]) ∧ to(EVENT[5]) = ENTITY[4], took(EVENT[6], REF1[1], ENTITY[2])))

# ::id 858_textbook_TANAKA;006_ID_19804;IE
# ::snt I was surprised to see so many people at the concert .
∃ REF1[1] EVENT[2] ENTITY[4] (
 concert(ENTITY[4]) ∧
  REF1[1] = i ∧
   past(EVENT[2]) ∧
    was_surprised(EVENT[2], REF1[1],
     SO_MANY GROUP[3] (people(GROUP[3]), ∃ EVENT[5] (see(EVENT[5], REF1[1], GROUP[3]) ∧ at(EVENT[5]) = ENTITY[4]))))

# ::id 859_textbook_TANAKA;006_ID_79001;IE
# ::snt I may have met her somewhere .
∃ REF1[1] (
 REF1[1] = i ∧
  MD_may(∃ REF2[2] EVENT[3] (REF2[2] = her ∧ LOC_somewhere(EVENT[3]) ∧ have_met(EVENT[3], REF1[1], REF2[2]))))

# ::id 860_textbook_TANAKA;006_ID_23173;IE
# ::snt I maintain that sports are a waste of time .
∃ REF1[1] EVENT[6] EVENT[2] ENTITY[5] ENTITY[4] GROUP[3] (
 REF1[1] = i ∧
  sports(GROUP[3]) ∧
   time(ENTITY[5]) ∧
    is_waste_of(ENTITY[4], ENTITY[5]) ∧ maintain(EVENT[2], REF1[1], copula(EVENT[6], GROUP[3], ENTITY[4])))

# ::id 861_textbook_TANAKA;006_ID_89037;IE
# ::snt You should choose a job in relation to your talents and interests .
∃ REF1[1] (
 REF1[1] = you ∧
  MD_should(∃ REF2[5] EVENT[9] GROUP[6] ENTITY[4] ENTITY[3] ENTITY[2] (
        REF2[5] = your ∧
         ∃ GROUP[7] (talents(GROUP[7]) ∧ is_subset_of_or_equal_to(GROUP[7], GROUP[6])) ∧
          ∃ GROUP[8] (interests(GROUP[8]) ∧ is_subset_of_or_equal_to(GROUP[8], GROUP[6])) ∧
          is_equals(ENTITY[4], GROUP[6]) ∧ is_POS(ENTITY[4], REF2[5]) ∧
           is_relation_to(ENTITY[3], ENTITY[4]) ∧
            is_job_in(ENTITY[2], ENTITY[3]) ∧ choose(EVENT[9], REF1[1], ENTITY[2]))))

# ::id 862_textbook_TANAKA;006_ID_86721;IE
# ::snt Is there anyone we invited who has n't come yet ?
QUEST(ANY REF1[3] EVENT[4] ENTITY[1] (
      (REF1[3] = we ∧
       invited(EVENT[4], REF1[3], ENTITY[1],
        QUEST(? ENTITY[5] ¬ ∃ EVENT[6] (TMP_yet(EVENT[6]) ∧ has_come(EVENT[6], ENTITY[5])))) ∧ one(ENTITY[1]) ∧
       past(EVENT[4])), ∃ EVENT[8] copula(EVENT[8], ENTITY[1])))

# ::id 863_textbook_TANAKA;006_ID_75180;IE
# ::snt Did you note down my phone number ?
QUEST(∃ REF2[3] REF1[1] EVENT[4] ENTITY[2] (
      REF1[1] = you ∧
       REF2[3] = my ∧
        is_phone_number_POS(ENTITY[2], REF2[3]) ∧ past(EVENT[4]) ∧ did_note_down(EVENT[4], REF1[1], ENTITY[2])))

# ::id 864_textbook_TANAKA;006_ID_56278;IE
# ::snt I 'm just sorting out some suitable clothes to take on holiday .
∃ SITUATION[7] REF1[1] (
 REF1[1] = i ∧
  ADV_just(SITUATION[7]) ∧
   is_FACT_THAT(SITUATION[7],
    SOME ATTRIB[3] GROUP[2] ((suitable(ATTRIB[3]) ∧ is_clothes_ATTRIBUTE(GROUP[2], ATTRIB[3])),
     ∃ EVENT[6] EVENT[4] ENTITY[5] (
      holiday(ENTITY[5]) ∧
       'm_sorting_out(EVENT[4], REF1[1], GROUP[2], take(EVENT[6], GROUP[2]) ∧ on(EVENT[6]) = ENTITY[5])))))

# ::id 865_textbook_TANAKA;006_ID_110210;IE
# ::snt You can not prevent him from drinking .
∃ REF1[1] (
 REF1[1] = you ∧
  MD_can(¬ ∃ REF2[2] EVENT[4] ENTITY[3] (
             REF2[2] = him ∧
              drinking(ENTITY[3]) ∧
               prevent(EVENT[4], REF1[1], REF2[2]) ∧ from(EVENT[4]) = ENTITY[3])))

# ::id 866_textbook_TANAKA;006_ID_151218;IE
# ::snt Nothing offends people worse than broken engagement .
¬ ∃ ATTRIB[5] ATTRIB[3] EVENT[6] ENTITY[4] GROUP[2] ENTITY[1] (
      thing(ENTITY[1]) ∧
       people(GROUP[2]) ∧
        broken(ATTRIB[5]) ∧
         is_engagement_ATTRIBUTE(ENTITY[4], ATTRIB[5]) ∧
          is_worse_than(ATTRIB[3], ENTITY[4]) ∧ offends(EVENT[6], ENTITY[1], GROUP[2]) ∧ ATTRIBUTE(EVENT[6]) = ATTRIB[3])

# ::id 867_textbook_TANAKA;006_ID_43015;IE
# ::snt It wo n't be long before Mike gets well .
MD_wo(¬ ∃ SITUATION[1] SITUATION[5] EVENT[2] EVENT[4] (
           TMP_long(SITUATION[5]) ∧
            ADV_well(EVENT[2]) ∧
             is_FACT_THAT(SITUATION[1], gets(EVENT[2], ENTITY[Mike])) ∧
              is_FACT_THAT(SITUATION[5], copula(EVENT[4]) ∧ before(EVENT[4]) = SITUATION[1])))

# ::id 868_textbook_TANAKA;006_ID_107734;IE
# ::snt Inventions are born , so to speak , of necessity .
∃ ADT[2] EVENT[3] EVENT[6] ENTITY[5] GROUP[1] (
 Inventions(GROUP[1]) ∧
  is_NP-PRN-FACT_THAT(ADT[2], speak(EVENT[3], GROUP[1])) ∧
   necessity(ENTITY[5]) ∧
    ADV_so(EVENT[3]) ∧
     are_born(EVENT[6], GROUP[1]) ∧ of(EVENT[6]) = ENTITY[5] ∧ ADT(EVENT[6]) = ADT[2])

# ::id 869_textbook_TANAKA;006_ID_39321;IE
# ::snt Believe it or not , it came in a pack of gum .
∃ REF3[5] REF1[1] EVENT[2] EVENT[8] ENTITY[7] ENTITY[6] (
 REF1[1] = it ∧
  REF3[5] = it ∧
   gum(ENTITY[7]) ∧
    is_pack_of(ENTITY[6], ENTITY[7]) ∧
     past(EVENT[8]) ∧
      CONJ_or(believe(EVENT[2], _, REF1[1]),
       ¬ ∃ REF2[3] EVENT[4] (REF2[3] = it ∧ believe(EVENT[4], _, REF2[3]))) ∧
       came(EVENT[8], REF3[5]) ∧ in(EVENT[8]) = ENTITY[6])

# ::id 870_textbook_TANAKA;006_ID_82547;IE
# ::snt I was n't able to believe him at first .
∃ REF1[1] (
 REF1[1] = i ∧
  ¬ ∃ ATTRIB[4] REF2[3] ATTRIB[2] EVENT[5] EVENT[6] (
        REF2[3] = him ∧
         ADV_first(ATTRIB[4]) ∧
          is_able_to(ATTRIB[2], believe(EVENT[5], _, REF2[3]) ∧ at(EVENT[5]) = ATTRIB[4]) ∧
           past(EVENT[6]) ∧ copula(EVENT[6], REF1[1], ATTRIB[2])))

# ::id 871_textbook_TANAKA;006_ID_45989;IE
# ::snt Do you like apples ?
QUEST(∃ REF1[1] EVENT[3] GROUP[2] (REF1[1] = you ∧ apples(GROUP[2]) ∧ do_like(EVENT[3], REF1[1], GROUP[2])))

# ::id 872_textbook_TANAKA;006_ID_122300;IE
# ::snt He has not turned report this month .
∃ REF1[1] TIME[3] (
 month(TIME[3]) ∧
  REF1[1] = he ∧
   ¬ ∃ EVENT[4] ENTITY[2] (
         report(ENTITY[2]) ∧ has_turned(EVENT[4], REF1[1], ENTITY[2]) ∧ is_contained_in(TMP(EVENT[4]), TIME[3])))

# ::id 873_textbook_TANAKA;006_ID_21591;IE
# ::snt Jack will not answer my letters .
MD_will(¬ ∃ REF1[2] EVENT[3] GROUP[1] (REF1[2] = my ∧ is_letters_POS(GROUP[1], REF1[2]) ∧ answer(EVENT[3], ENTITY[Jack], GROUP[1])))

# ::id 874_textbook_TANAKA;006_ID_79867;IE
# ::snt I decided to be a doctor .
∃ REF1[1] EVENT[4] EVENT[2] ENTITY[3] (
 REF1[1] = i ∧
  doctor(ENTITY[3]) ∧ past(EVENT[2]) ∧ decided(EVENT[2], REF1[1], copula(EVENT[4], REF1[1], ENTITY[3])))

# ::id 875_textbook_TANAKA;006_ID_71353;IE
# ::snt We can cut down on our use of energy .
∃ REF1[1] (
 REF1[1] = we ∧
  MD_can(∃ REF2[3] EVENT[5] ENTITY[4] ENTITY[2] (
        REF2[3] = our ∧
         energy(ENTITY[4]) ∧
          is_use_of(ENTITY[2], ENTITY[4]) ∧ is_use_POS(ENTITY[2], REF2[3]) ∧
           cut_down(EVENT[5], REF1[1]) ∧ on(EVENT[5]) = ENTITY[2])))

# ::id 876_textbook_TANAKA;006_ID_89187;IE
# ::snt You may be welcome to spend money .
∃ REF1[1] (
 REF1[1] = you ∧
  MD_may(∃ ATTRIB[2] EVENT[4] EVENT[5] ENTITY[3] (
        money(ENTITY[3]) ∧
         is_welcome_to(ATTRIB[2], spend(EVENT[4], _, ENTITY[3])) ∧ copula(EVENT[5], REF1[1], ATTRIB[2]))))

# ::id 877_textbook_TANAKA;006_ID_47440;IE
# ::snt The committee returned to their seats .
∃ REF1[3] EVENT[4] GROUP[2] ENTITY[1] (
 committee(ENTITY[1]) ∧
  REF1[3] = their ∧
   is_seats_POS(GROUP[2], REF1[3]) ∧
    past(EVENT[4]) ∧ returned(EVENT[4], ENTITY[1]) ∧ to(EVENT[4]) = GROUP[2])

# ::id 878_textbook_TANAKA;006_ID_129342;IE
# ::snt He gave me a stern look .
∃ ATTRIB[4] REF2[2] REF1[1] EVENT[5] ENTITY[3] (
 REF1[1] = he ∧
  REF2[2] = me ∧
   stern(ATTRIB[4]) ∧
    is_look_ATTRIBUTE(ENTITY[3], ATTRIB[4]) ∧ past(EVENT[5]) ∧ gave(EVENT[5], REF1[1], ENTITY[3], REF2[2]))

# ::id 879_textbook_TANAKA;006_ID_124390;IE
# ::snt He would n't lower himself to apologize .
∃ REF1[1] (
 REF1[1] = he ∧
  MD_would(¬ ∃ PRP[3] REF2[2] EVENT[4] EVENT[5] (
             REF2[2] = himself ∧
              is_FACT_THAT(PRP[3], apologize(EVENT[4], REF2[2])) ∧
               lower(EVENT[5], REF1[1], REF2[2]) ∧ PRP(EVENT[5]) = PRP[3])))

# ::id 880_textbook_TANAKA;006_ID_78460;IE
# ::snt I agree the matter .
∃ REF1[1] EVENT[3] ENTITY[2] (matter(ENTITY[2]) ∧ REF1[1] = i ∧ agree(EVENT[3], REF1[1], ENTITY[2]))

# ::id 881_textbook_TANAKA;006_ID_134340;IE
# ::snt She can not have done it .
∃ REF1[1] (REF1[1] = she ∧ MD_can(¬ ∃ REF2[2] EVENT[3] (REF2[2] = it ∧ have_done(EVENT[3], REF1[1], REF2[2]))))

# ::id 882_textbook_TANAKA;006_ID_111294;IE
# ::snt I found it difficult to understand what he was saying .
∃ ATTRIB[8] SITUATION[3] REF1[1] EVENT[4] EVENT[9] EVENT[2] (
 REF1[1] = i ∧
  is_FACT_THAT(SITUATION[3],
   understand(EVENT[4],
    QUEST(∃ REF2[6] EVENT[7] ? ENTITY[5] (
          REF2[6] = he ∧
           is_before(EVENT[7], EVENT[4]) ∧ was_saying(EVENT[7], REF2[6], ENTITY[5]))))) ∧
   difficult(ATTRIB[8]) ∧ past(EVENT[2]) ∧ found(EVENT[2], REF1[1], xxx(EVENT[9], SITUATION[3], ATTRIB[8])))

# ::id 883_textbook_TANAKA;006_ID_34354;IE
# ::snt Even if it takes me ten years , I am determined to accomplish the job .
∃ ENTITY[7] (
 job(ENTITY[7]) ∧
  ∀ REF2[2] REF1[1] EVENT[4] GROUP[3] CND_Even_if(
      REF1[1] = it ∧ REF2[2] = me ∧ (CD_ten(GROUP[3]), years(GROUP[3])) ∧
       takes(EVENT[4], REF1[1], REF2[2]) ∧ MSR(EVENT[4]) = GROUP[3],
      ∃ REF3[5] EVENT[8] EVENT[6] (REF3[5] = i ∧ am_determined(EVENT[6], REF3[5], accomplish(EVENT[8], REF3[5], ENTITY[7])))))

# ::id 884_textbook_TANAKA;006_ID_2871;IE
# ::snt It seems that I met you somewhere .
∃ REF2[3] REF1[2] EVENT[4] EVENT[1] (
 REF1[2] = i ∧
  REF2[3] = you ∧
   LOC_somewhere(EVENT[4]) ∧ is_before(EVENT[4], EVENT[1]) ∧ seems(EVENT[1], met(EVENT[4], REF1[2], REF2[3])))

# ::id 885_textbook_TANAKA;006_ID_152984;IE
# ::snt May I have a receipt ?
QUEST(MD_may(∃ REF1[1] EVENT[3] ENTITY[2] (REF1[1] = i ∧ receipt(ENTITY[2]) ∧ have(EVENT[3], REF1[1], ENTITY[2]))))

# ::id 886_textbook_TANAKA;006_ID_46928;IE
# ::snt I love you .
∃ REF2[2] REF1[1] EVENT[3] (REF1[1] = i ∧ REF2[2] = you ∧ love(EVENT[3], REF1[1], REF2[2]))

# ::id 887_textbook_TANAKA;006_ID_144650;IE
# ::snt The expenses average ten dollars a day .
∃ EVENT[4] TIME[3] GROUP[2] GROUP[1] (
 expenses(GROUP[1]) ∧
  (CD_ten(GROUP[2]), dollars(GROUP[2])) ∧
   day(TIME[3]) ∧ average(EVENT[4], GROUP[1], GROUP[2]) ∧ is_contained_in(TMP(EVENT[4]), TIME[3]))

# ::id 888_textbook_TANAKA;006_ID_89447;IE
# ::snt As a matter of fact , I did it .
∃ REF2[4] REF1[3] EVENT[5] ENTITY[2] ENTITY[1] (
 fact(ENTITY[2]) ∧
  is_matter_of(ENTITY[1], ENTITY[2]) ∧
   REF1[3] = i ∧
    REF2[4] = it ∧
     past(EVENT[5]) ∧ did(EVENT[5], REF1[3], REF2[4]) ∧ As(EVENT[5]) = ENTITY[1])

# ::id 889_textbook_TANAKA;006_ID_72424;IE
# ::snt We went out for some fresh air .
∃ REF1[1] (
 REF1[1] = we ∧
  SOME ATTRIB[3] ENTITY[2] ((fresh(ATTRIB[3]) ∧ is_air_ATTRIBUTE(ENTITY[2], ATTRIB[3])),
   ∃ EVENT[4] (past(EVENT[4]) ∧ went_out(EVENT[4], REF1[1]) ∧ for(EVENT[4]) = ENTITY[2])))

# ::id 890_textbook_TANAKA;006_ID_99141;IE
# ::snt My son asks for the moon .
∃ REF1[2] EVENT[4] ENTITY[1] ENTITY[3] (
 moon(ENTITY[3]) ∧
  REF1[2] = my ∧
   is_son_POS(ENTITY[1], REF1[2]) ∧ asks(EVENT[4], ENTITY[1]) ∧ for(EVENT[4]) = ENTITY[3])

# ::id 891_textbook_TANAKA;006_ID_60139;IE
# ::snt You ought to have come to see me yesterday .
∃ REF2[4] REF1[1] EVENT[6] EVENT[3] EVENT[2] TIME[5] (
 REF1[1] = you ∧
  REF2[4] = me ∧
   yesterday(TIME[5]) ∧
    past(EVENT[2]) ∧
     ought(EVENT[2], REF1[1],
      have_come(EVENT[3], REF1[1], see(EVENT[6], REF1[1], REF2[4]) ∧ is_contained_in(TMP(EVENT[6]), TIME[5]))))

# ::id 892_textbook_TANAKA;006_ID_90865;IE
# ::snt Might I ask your address ?
QUEST(MD_might(∃ REF2[3] REF1[1] EVENT[4] ENTITY[2] (
           REF1[1] = i ∧
            REF2[3] = your ∧ is_address_POS(ENTITY[2], REF2[3]) ∧ ask(EVENT[4], REF1[1], ENTITY[2]))))

# ::id 893_textbook_TANAKA;006_ID_135994;IE
# ::snt Her beauty is incomparable .
∃ ATTRIB[3] REF1[2] EVENT[4] ENTITY[1] (REF1[2] = her ∧ is_beauty_POS(ENTITY[1], REF1[2]) ∧ incomparable(ATTRIB[3]) ∧ copula(EVENT[4], ENTITY[1], ATTRIB[3]))

# ::id 894_textbook_TANAKA;006_ID_49567;IE
# ::snt You had to study English .
∃ REF1[1] EVENT[3] EVENT[2] (REF1[1] = you ∧ past(EVENT[2]) ∧ had(EVENT[2], REF1[1], study(EVENT[3], REF1[1], ENTITY[English])))

# ::id 895_textbook_TANAKA;006_ID_119713;IE
# ::snt He speaks English well .
∃ REF1[1] EVENT[2] (REF1[1] = he ∧ ADV_well(EVENT[2]) ∧ speaks(EVENT[2], REF1[1], ENTITY[English]))

# ::id 896_textbook_TANAKA;006_ID_52621;IE
# ::snt We expect you to carry out what you have once promised .
∃ REF3[6] REF2[2] REF1[1] EVENT[7] EVENT[9] EVENT[3] ENTITY[4] (
 REF1[1] = we ∧
  REF2[2] = you ∧
   REF3[6] = you ∧
    have_promised(EVENT[7], REF3[6], ENTITY[4]) ∧
     TMP_once(EVENT[7]) ∧ expect(EVENT[3], REF1[1], REF2[2], carry_out(EVENT[9], REF2[2], ENTITY[4])))

# ::id 897_textbook_TANAKA;006_ID_26380;IE
# ::snt The plan has been generally accepted .
∃ EVENT[2] ENTITY[1] (plan(ENTITY[1]) ∧ ADV_generally(EVENT[2]) ∧ has_accepted(EVENT[2], _, ENTITY[1]))

# ::id 898_textbook_TANAKA;006_ID_129532;IE
# ::snt He took a hot bath and turned on the TV .
∃ ATTRIB[3] REF1[1] EVENT[4] EVENT[6] ENTITY[2] ENTITY[5] (
 TV(ENTITY[5]) ∧
  REF1[1] = he ∧
   hot(ATTRIB[3]) ∧
    is_bath_ATTRIBUTE(ENTITY[2], ATTRIB[3]) ∧
     past(EVENT[4]) ∧
      past(EVENT[6]) ∧
       CONJ_and(took(EVENT[4], REF1[1], ENTITY[2]),
        turned(EVENT[6], REF1[1]) ∧ on(EVENT[6]) = ENTITY[5]))

# ::id 899_textbook_TANAKA;006_ID_138047;IE
# ::snt She is having dinner now .
∃ REF1[1] EVENT[3] ENTITY[2] (REF1[1] = she ∧ dinner(ENTITY[2]) ∧ TMP_now(EVENT[3]) ∧ copula_having(EVENT[3], REF1[1], ENTITY[2]))

# ::id 900_textbook_TANAKA;006_ID_145202;IE
# ::snt Illness prevented him from attending the meeting .
∃ SITUATION[3] REF1[2] EVENT[5] EVENT[6] ENTITY[1] ENTITY[4] (
 meeting(ENTITY[4]) ∧
  Illness(ENTITY[1]) ∧
   REF1[2] = him ∧
    is_FACT_THAT(SITUATION[3], attending(EVENT[5], REF1[2], ENTITY[4])) ∧
     past(EVENT[6]) ∧ prevented(EVENT[6], ENTITY[1], REF1[2]) ∧ from(EVENT[6]) = SITUATION[3])

# ::id 901_textbook_TANAKA;006_ID_12109;IE
# ::snt The coach 's advice saved us .
∃ REF1[3] EVENT[4] ENTITY[1] ENTITY[2] (
 coach(ENTITY[2]) ∧
  is_advice_POS(ENTITY[1], ENTITY[2]) ∧ REF1[3] = us ∧ past(EVENT[4]) ∧ saved(EVENT[4], ENTITY[1], REF1[3]))

# ::id 902_textbook_TANAKA;006_ID_56500;IE
# ::snt One third of the earth 's surface is desert .
∃ EVENT[5] ENTITY[2] ENTITY[4] ENTITY[1] ENTITY[3] (
 earth(ENTITY[3]) ∧
  is_surface_POS(ENTITY[2], ENTITY[3]) ∧
   (CD_one(ENTITY[1]), is_third_of(ENTITY[1], ENTITY[2])) ∧
    desert(ENTITY[4]) ∧ copula(EVENT[5], ENTITY[1], ENTITY[4]))

# ::id 903_textbook_TANAKA;006_ID_66882;IE
# ::snt The desert sun grilled him .
∃ REF1[2] EVENT[3] ENTITY[1] (desert_sun(ENTITY[1]) ∧ REF1[2] = him ∧ past(EVENT[3]) ∧ grilled(EVENT[3], ENTITY[1], REF1[2]))

# ::id 904_textbook_TANAKA;006_ID_49954;IE
# ::snt Shots were heard in the distance .
∃ EVENT[3] GROUP[1] ENTITY[2] (
 distance(ENTITY[2]) ∧
  Shots(GROUP[1]) ∧
   past(EVENT[3]) ∧ heard(EVENT[3], _, GROUP[1]) ∧ in(EVENT[3]) = ENTITY[2])
